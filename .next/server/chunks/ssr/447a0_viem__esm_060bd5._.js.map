{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"parseAccount.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/accounts/utils/parseAccount.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../types.js'\n\nexport type ParseAccountErrorType = ErrorType\n\nexport function parseAccount(account: Address | Account): Account {\n  if (typeof account === 'string') return { address: account, type: 'json-rpc' }\n  return account\n}\n"],"names":[],"mappings":";;;AAOM,SAAU,YAAY,CAAC,OAA0B;IACrD,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE,OAAO;QAAE,OAAO,EAAE,OAAO;QAAE,IAAI,EAAE,UAAU;IAAA,CAAE,CAAA;IAC9E,OAAO,OAAO,CAAA;AAChB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"file":"uid.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/uid.ts"],"sourcesContent":["const size = 256\nlet index = size\nlet buffer: string\n\nexport function uid(length = 11) {\n  if (!buffer || index + length > size * 2) {\n    buffer = ''\n    index = 0\n    for (let i = 0; i < size; i++) {\n      buffer += ((256 + Math.random() * 256) | 0).toString(16).substring(1)\n    }\n  }\n  return buffer.substring(index, index++ + length)\n}\n"],"names":[],"mappings":";;;AAAA,MAAM,IAAI,GAAG,GAAG,CAAA;AAChB,IAAI,KAAK,GAAG,IAAI,CAAA;AAChB,IAAI,MAAc,CAAA;AAEZ,SAAU,GAAG,CAAC,MAAM,GAAG,EAAE;IAC7B,IAAI,CAAC,MAAM,IAAI,KAAK,GAAG,MAAM,GAAG,IAAI,GAAG,CAAC,EAAE;QACxC,MAAM,GAAG,EAAE,CAAA;QACX,KAAK,GAAG,CAAC,CAAA;QACT,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAE;YAC7B,MAAM,IAAI,CAAC,AAAC,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,EAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;SACtE;KACF;IACD,OAAO,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC,CAAA;AAClD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"file":"createClient.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/clients/createClient.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { JsonRpcAccount } from '../accounts/types.js'\nimport type { ParseAccountErrorType } from '../accounts/utils/parseAccount.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { Account } from '../types/account.js'\nimport type { Chain } from '../types/chain.js'\nimport type {\n  EIP1193RequestFn,\n  EIP1474Methods,\n  RpcSchema,\n} from '../types/eip1193.js'\nimport type { Prettify } from '../types/utils.js'\nimport { parseAccount } from '../utils/accounts.js'\nimport { uid } from '../utils/uid.js'\nimport type { PublicActions } from './decorators/public.js'\nimport type { WalletActions } from './decorators/wallet.js'\nimport type { Transport } from './transports/createTransport.js'\n\nexport type ClientConfig<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  accountOrAddress extends Account | Address | undefined =\n    | Account\n    | Address\n    | undefined,\n> = {\n  /** The Account to use for the Client. This will be used for Actions that require an account as an argument. */\n  account?: accountOrAddress | Account | Address | undefined\n  /** Flags for batch settings. */\n  batch?:\n    | {\n        /** Toggle to enable `eth_call` multicall aggregation. */\n        multicall?: boolean | Prettify<MulticallBatchOptions> | undefined\n      }\n    | undefined\n  /**\n   * Time (in ms) that cached data will remain in memory.\n   * @default 4_000\n   */\n  cacheTime?: number | undefined\n  /** Chain for the client. */\n  chain?: Chain | undefined | chain\n  /** A key for the client. */\n  key?: string | undefined\n  /** A name for the client. */\n  name?: string | undefined\n  /**\n   * Frequency (in ms) for polling enabled actions & events.\n   * @default 4_000\n   */\n  pollingInterval?: number | undefined\n  /** The RPC transport */\n  transport: transport\n  /** The type of client. */\n  type?: string | undefined\n}\n\n// Actions that are used internally by other Actions (ie. `call` is used by `readContract`).\n// They are allowed to be extended, but must conform to their parameter & return type interfaces.\n// Example: an extended `call` action must accept `CallParameters` as parameters,\n// and conform to the `CallReturnType` return type.\ntype ExtendableProtectedActions = Pick<\n  PublicActions,\n  | 'call'\n  | 'createContractEventFilter'\n  | 'createEventFilter'\n  | 'estimateContractGas'\n  | 'estimateGas'\n  | 'getBlock'\n  | 'getBlockNumber'\n  | 'getChainId'\n  | 'getContractEvents'\n  | 'getEnsText'\n  | 'getFilterChanges'\n  | 'getGasPrice'\n  | 'getLogs'\n  | 'getTransaction'\n  | 'getTransactionCount'\n  | 'getTransactionReceipt'\n  | 'prepareTransactionRequest'\n  | 'readContract'\n  | 'sendRawTransaction'\n  | 'simulateContract'\n  | 'uninstallFilter'\n  | 'watchBlockNumber'\n  | 'watchContractEvent'\n> &\n  Pick<WalletActions, 'sendTransaction' | 'writeContract'>\n\n// TODO: Move `transport` to slot index 2 since `chain` and `account` used more frequently.\n// Otherwise, we end up with a lot of `Client<Transport, chain, account>` in actions.\nexport type Client<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n  extended extends Extended | undefined = Extended | undefined,\n> = Client_Base<transport, chain, account, rpcSchema> &\n  (extended extends Extended ? extended : unknown) & {\n    extend: <\n      const client extends Extended & Partial<ExtendableProtectedActions>,\n    >(\n      fn: (\n        client: Client<transport, chain, account, rpcSchema, extended>,\n      ) => client,\n    ) => Client<\n      transport,\n      chain,\n      account,\n      rpcSchema,\n      Prettify<client> & (extended extends Extended ? extended : unknown)\n    >\n  }\n\ntype Client_Base<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n  rpcSchema extends RpcSchema | undefined = undefined,\n> = {\n  /** The Account of the Client. */\n  account: account\n  /** Flags for batch settings. */\n  batch?: ClientConfig['batch']\n  /** Time (in ms) that cached data will remain in memory. */\n  cacheTime: number\n  /** Chain for the client. */\n  chain: chain\n  /** A key for the client. */\n  key: string\n  /** A name for the client. */\n  name: string\n  /** Frequency (in ms) for polling enabled actions & events. Defaults to 4_000 milliseconds. */\n  pollingInterval: number\n  /** Request function wrapped with friendly error handling */\n  request: EIP1193RequestFn<\n    rpcSchema extends undefined ? EIP1474Methods : rpcSchema\n  >\n  /** The RPC transport */\n  transport: ReturnType<transport>['config'] & ReturnType<transport>['value']\n  /** The type of client. */\n  type: string\n  /** A unique ID for the client. */\n  uid: string\n}\n\ntype Extended = Prettify<\n  // disallow redefining base properties\n  { [_ in keyof Client_Base]?: undefined } & {\n    [key: string]: unknown\n  }\n>\n\nexport type MulticallBatchOptions = {\n  /** The maximum size (in bytes) for each calldata chunk. @default 1_024 */\n  batchSize?: number | undefined\n  /** The maximum number of milliseconds to wait before sending a batch. @default 0 */\n  wait?: number | undefined\n}\n\nexport type CreateClientErrorType = ParseAccountErrorType | ErrorType\n\n/**\n * Creates a base client with the given transport.\n */\nexport function createClient<\n  transport extends Transport,\n  chain extends Chain | undefined = undefined,\n  accountOrAddress extends Account | Address | undefined = undefined,\n>(\n  parameters: ClientConfig<transport, chain, accountOrAddress>,\n): Prettify<\n  Client<\n    transport,\n    chain,\n    accountOrAddress extends Address\n      ? Prettify<JsonRpcAccount<accountOrAddress>>\n      : accountOrAddress\n  >\n>\n\nexport function createClient(parameters: ClientConfig): Client {\n  const {\n    batch,\n    cacheTime = parameters.pollingInterval ?? 4_000,\n    key = 'base',\n    name = 'Base Client',\n    pollingInterval = 4_000,\n    type = 'base',\n  } = parameters\n\n  const chain = parameters.chain\n  const account = parameters.account\n    ? parseAccount(parameters.account)\n    : undefined\n  const { config, request, value } = parameters.transport({\n    chain,\n    pollingInterval,\n  })\n  const transport = { ...config, ...value }\n\n  const client = {\n    account,\n    batch,\n    cacheTime,\n    chain,\n    key,\n    name,\n    pollingInterval,\n    request,\n    transport,\n    type,\n    uid: uid(),\n  }\n\n  function extend(base: typeof client) {\n    type ExtendFn = (base: typeof client) => unknown\n    return (extendFn: ExtendFn) => {\n      const extended = extendFn(base) as Extended\n      for (const key in client) delete extended[key]\n      const combined = { ...base, ...extended }\n      return Object.assign(combined, { extend: extend(combined) })\n    }\n  }\n\n  return Object.assign(client, { extend: extend(client) as any })\n}\n"],"names":[],"mappings":";;;AAaA,OAAO,EAAE,YAAY,EAAE,MAAM,sBAAsB,CAAA;AACnD,OAAO,EAAE,GAAG,EAAE,MAAM,iBAAiB,CAAA;;;AAwK/B,SAAU,YAAY,CAAC,UAAwB;IACnD,MAAM,EACJ,KAAK,EACL,SAAS,GAAG,UAAU,CAAC,eAAe,IAAI,IAAK,EAC/C,GAAG,GAAG,MAAM,EACZ,IAAI,GAAG,aAAa,EACpB,eAAe,GAAG,IAAK,EACvB,IAAI,GAAG,MAAM,EACd,GAAG,UAAU,CAAA;IAEd,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAA;IAC9B,MAAM,OAAO,GAAG,UAAU,CAAC,OAAO,qPAC9B,eAAA,AAAY,EAAC,UAAU,CAAC,OAAO,CAAC,GAChC,SAAS,CAAA;IACb,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,UAAU,CAAC,SAAS,CAAC;QACtD,KAAK;QACL,eAAe;KAChB,CAAC,CAAA;IACF,MAAM,SAAS,GAAG;QAAE,GAAG,MAAM;QAAE,GAAG,KAAK;IAAA,CAAE,CAAA;IAEzC,MAAM,MAAM,GAAG;QACb,OAAO;QACP,KAAK;QACL,SAAS;QACT,KAAK;QACL,GAAG;QACH,IAAI;QACJ,eAAe;QACf,OAAO;QACP,SAAS;QACT,IAAI;QACJ,GAAG,+NAAE,MAAA,AAAG,EAAE;KACX,CAAA;IAED,SAAS,MAAM,CAAC,IAAmB;QAEjC,OAAO,CAAC,QAAkB,EAAE,EAAE;YAC5B,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAa,CAAA;YAC3C,IAAK,MAAM,GAAG,IAAI,MAAM,CAAE,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAA;YAC9C,MAAM,QAAQ,GAAG;gBAAE,GAAG,IAAI;gBAAE,GAAG,QAAQ;YAAA,CAAE,CAAA;YACzC,OAAO,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;gBAAE,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC;YAAA,CAAE,CAAC,CAAA;QAC9D,CAAC,CAAA;IACH,CAAC;IAED,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;QAAE,MAAM,EAAE,MAAM,CAAC,MAAM,CAAQ;IAAA,CAAE,CAAC,CAAA;AACjE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"file":"isAddress.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/address/isAddress.ts"],"sourcesContent":["import type { Address } from 'abitype'\nimport type { ErrorType } from '../../errors/utils.js'\n\nconst addressRegex = /^0x[a-fA-F0-9]{40}$/\n\nexport type IsAddressErrorType = ErrorType\n\nexport function isAddress(address: string): address is Address {\n  return addressRegex.test(address)\n}\n"],"names":[],"mappings":";;;AAGA,MAAM,YAAY,GAAG,qBAAqB,CAAA;AAIpC,SAAU,SAAS,CAAC,OAAe;IACvC,OAAO,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;AACnC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"file":"version.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/errors/version.ts"],"sourcesContent":["export const version = '1.21.3'\n"],"names":[],"mappings":";;;AAAO,MAAM,OAAO,GAAG,QAAQ,CAAA","ignoreList":[0]}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"file":"utils.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/errors/utils.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport { version } from './version.js'\n\nexport type ErrorType<name extends string = 'Error'> = Error & { name: name }\n\nexport const getContractAddress = (address: Address) => address\nexport const getUrl = (url: string) => url\nexport const getVersion = () => `viem@${version}`\n"],"names":[],"mappings":";;;;;AAEA,OAAO,EAAE,OAAO,EAAE,MAAM,cAAc,CAAA;;AAI/B,MAAM,kBAAkB,GAAG,CAAC,OAAgB,EAAE,CAAG,CAAD,MAAQ,CAAA;AACxD,MAAM,MAAM,GAAG,CAAC,GAAW,EAAE,CAAG,CAAD,EAAI,CAAA;AACnC,MAAM,UAAU,GAAG,GAAG,CAAG,CAAD,AAAC,KAAA,gOAAQ,UAAO,EAAE,CAAA","ignoreList":[0]}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"file":"base.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/errors/base.ts"],"sourcesContent":["import { getVersion } from './utils.js'\n\ntype BaseErrorParameters = {\n  docsPath?: string\n  docsSlug?: string\n  metaMessages?: string[]\n} & (\n  | {\n      cause?: never\n      details?: string\n    }\n  | {\n      cause: BaseError | Error\n      details?: never\n    }\n)\n\nexport type BaseErrorType = BaseError & { name: 'ViemError' }\nexport class BaseError extends Error {\n  details: string\n  docsPath?: string\n  metaMessages?: string[]\n  shortMessage: string\n\n  override name = 'ViemError'\n  version = getVersion()\n\n  constructor(shortMessage: string, args: BaseErrorParameters = {}) {\n    super()\n\n    const details =\n      args.cause instanceof BaseError\n        ? args.cause.details\n        : args.cause?.message\n          ? args.cause.message\n          : args.details!\n    const docsPath =\n      args.cause instanceof BaseError\n        ? args.cause.docsPath || args.docsPath\n        : args.docsPath\n\n    this.message = [\n      shortMessage || 'An error occurred.',\n      '',\n      ...(args.metaMessages ? [...args.metaMessages, ''] : []),\n      ...(docsPath\n        ? [\n            `Docs: https://viem.sh${docsPath}.html${\n              args.docsSlug ? `#${args.docsSlug}` : ''\n            }`,\n          ]\n        : []),\n      ...(details ? [`Details: ${details}`] : []),\n      `Version: ${this.version}`,\n    ].join('\\n')\n\n    if (args.cause) this.cause = args.cause\n    this.details = details\n    this.docsPath = docsPath\n    this.metaMessages = args.metaMessages\n    this.shortMessage = shortMessage\n  }\n\n  walk(): Error\n  walk(fn: (err: unknown) => boolean): Error | null\n  walk(fn?: any): any {\n    return walk(this, fn)\n  }\n}\n\nfunction walk(err: unknown, fn?: (err: unknown) => boolean): unknown {\n  if (fn?.(err)) return err\n  if (err && typeof err === 'object' && 'cause' in err)\n    return walk(err.cause, fn)\n  return fn ? null : err\n}\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,YAAY,CAAA;;AAkBjC,MAAO,SAAU,SAAQ,KAAK;IASlC,YAAY,YAAoB,EAAE,OAA4B,CAAA,CAAE,CAAA;QAC9D,KAAK,EAAE,CAAA;QATT,OAAA,cAAA,CAAA,IAAA,EAAA,WAAA;;;;;WAAe;QACf,OAAA,cAAA,CAAA,IAAA,EAAA,YAAA;;;;;WAAiB;QACjB,OAAA,cAAA,CAAA,IAAA,EAAA,gBAAA;;;;;WAAuB;QACvB,OAAA,cAAA,CAAA,IAAA,EAAA,gBAAA;;;;;WAAoB;QAEX,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,WAAW;WAAA;QAC3B,OAAA,cAAA,CAAA,IAAA,EAAA,WAAA;;;;uBAAU,yOAAA,AAAU,EAAE;WAAA;QAKpB,MAAM,OAAO,GACX,IAAI,CAAC,KAAK,YAAY,SAAS,GAC3B,IAAI,CAAC,KAAK,CAAC,OAAO,GAClB,IAAI,CAAC,KAAK,EAAE,OAAO,GACjB,IAAI,CAAC,KAAK,CAAC,OAAO,GAClB,IAAI,CAAC,OAAQ,CAAA;QACrB,MAAM,QAAQ,GACZ,IAAI,CAAC,KAAK,YAAY,SAAS,GAC3B,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,GACpC,IAAI,CAAC,QAAQ,CAAA;QAEnB,IAAI,CAAC,OAAO,GAAG;YACb,YAAY,IAAI,oBAAoB;YACpC,EAAE;eACE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;mBAAG,IAAI,CAAC,YAAY;gBAAE,EAAE;aAAC,CAAC,CAAC,CAAC,EAAE,CAAC;eACpD,QAAQ,GACR;gBACE,CAAA,qBAAA,EAAwB,QAAQ,CAAA,KAAA,EAC9B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA,CAAA,EAAI,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EACxC,EAAE;aACH,GACD,EAAE,CAAC;eACH,OAAO,CAAC,CAAC,CAAC;gBAAC,CAAA,SAAA,EAAY,OAAO,EAAE;aAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC3C,CAAA,SAAA,EAAY,IAAI,CAAC,OAAO,EAAE;SAC3B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAEZ,IAAI,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAA;QACvC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;QACtB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;QACxB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAA;QACrC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAA;IAClC,CAAC;IAID,IAAI,CAAC,EAAQ,EAAA;QACX,OAAO,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAA;IACvB,CAAC;CACF;AAED,SAAS,IAAI,CAAC,GAAY,EAAE,EAA8B;IACxD,IAAI,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,OAAO,GAAG,CAAA;IACzB,IAAI,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,OAAO,IAAI,GAAG,EAClD,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,CAAA;IAC5B,OAAO,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAA;AACxB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"file":"address.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/errors/address.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type InvalidAddressErrorType = InvalidAddressError & {\n  name: 'InvalidAddressError'\n}\nexport class InvalidAddressError extends BaseError {\n  override name = 'InvalidAddressError'\n  constructor({ address }: { address: string }) {\n    super(`Address \"${address}\" is invalid.`)\n  }\n}\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;;AAK/B,MAAO,mBAAoB,oOAAQ,YAAS;IAEhD,YAAY,EAAE,OAAO,EAAuB,CAAA;QAC1C,KAAK,CAAC,CAAA,SAAA,EAAY,OAAO,CAAA,aAAA,CAAe,CAAC,CAAA;QAFlC,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,qBAAqB;WAAA;IAGrC,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"file":"formatUnits.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/unit/formatUnits.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\n\nexport type FormatUnitsErrorType = ErrorType\n\n/**\n *  Divides a number by a given exponent of base 10 (10exponent), and formats it into a string representation of the number..\n *\n * - Docs: https://viem.sh/docs/utilities/formatUnits.html\n *\n * @example\n * import { formatUnits } from 'viem'\n *\n * formatUnits(420000000000n, 9)\n * // '420'\n */\nexport function formatUnits(value: bigint, decimals: number) {\n  let display = value.toString()\n\n  const negative = display.startsWith('-')\n  if (negative) display = display.slice(1)\n\n  display = display.padStart(decimals, '0')\n\n  let [integer, fraction] = [\n    display.slice(0, display.length - decimals),\n    display.slice(display.length - decimals),\n  ]\n  fraction = fraction.replace(/(0+)$/, '')\n  return `${negative ? '-' : ''}${integer || '0'}${\n    fraction ? `.${fraction}` : ''\n  }`\n}\n"],"names":[],"mappings":"AAIA;;;;;;;;;;GAUG;;;AACG,SAAU,WAAW,CAAC,KAAa,EAAE,QAAgB;IACzD,IAAI,OAAO,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAA;IAE9B,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAA;IACxC,IAAI,QAAQ,EAAE,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;IAExC,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAA;IAEzC,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,GAAG;QACxB,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC;QAC3C,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC;KACzC,CAAA;IACD,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAA;IACxC,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,OAAO,IAAI,GAAG,GAC5C,QAAQ,CAAC,CAAC,CAAC,CAAA,CAAA,EAAI,QAAQ,EAAE,CAAC,CAAC,CAAC,EAC9B,EAAE,CAAA;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 274, "column": 0}, "map": {"version":3,"file":"unit.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/constants/unit.ts"],"sourcesContent":["export const etherUnits = {\n  gwei: 9,\n  wei: 18,\n}\nexport const gweiUnits = {\n  ether: -9,\n  wei: 9,\n}\nexport const weiUnits = {\n  ether: -18,\n  gwei: -9,\n}\n"],"names":[],"mappings":";;;;;AAAO,MAAM,UAAU,GAAG;IACxB,IAAI,EAAE,CAAC;IACP,GAAG,EAAE,EAAE;CACR,CAAA;AACM,MAAM,SAAS,GAAG;IACvB,KAAK,EAAE,CAAC,CAAC;IACT,GAAG,EAAE,CAAC;CACP,CAAA;AACM,MAAM,QAAQ,GAAG;IACtB,KAAK,EAAE,CAAC,EAAE;IACV,IAAI,EAAE,CAAC,CAAC;CACT,CAAA","ignoreList":[0]}},
    {"offset": {"line": 291, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"file":"formatEther.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/unit/formatEther.ts"],"sourcesContent":["import { etherUnits } from '../../constants/unit.js'\n\nimport { type FormatUnitsErrorType, formatUnits } from './formatUnits.js'\n\nexport type FormatEtherErrorType = FormatUnitsErrorType\n\n/**\n * Converts numerical wei to a string representation of ether.\n *\n * - Docs: https://viem.sh/docs/utilities/formatEther.html\n *\n * @example\n * import { formatEther } from 'viem'\n *\n * formatEther(1000000000000000000n)\n * // '1'\n */\nexport function formatEther(wei: bigint, unit: 'wei' | 'gwei' = 'wei') {\n  return formatUnits(wei, etherUnits[unit])\n}\n"],"names":[],"mappings":";;;AAEA,OAAO,EAA6B,WAAW,EAAE,MAAM,kBAAkB,CAAA;AAFzE,OAAO,EAAE,UAAU,EAAE,MAAM,yBAAyB,CAAA;;;AAiB9C,SAAU,WAAW,CAAC,GAAW,EAAE,OAAuB,KAAK;IACnE,oPAAO,cAAA,AAAW,EAAC,GAAG,gOAAE,aAAU,CAAC,IAAI,CAAC,CAAC,CAAA;AAC3C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 307, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"file":"formatGwei.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/unit/formatGwei.ts"],"sourcesContent":["import { gweiUnits } from '../../constants/unit.js'\n\nimport { type FormatUnitsErrorType, formatUnits } from './formatUnits.js'\n\nexport type FormatGweiErrorType = FormatUnitsErrorType\n\n/**\n * Converts numerical wei to a string representation of gwei.\n *\n * - Docs: https://viem.sh/docs/utilities/formatGwei.html\n *\n * @example\n * import { formatGwei } from 'viem'\n *\n * formatGwei(1000000000n)\n * // '1'\n */\nexport function formatGwei(wei: bigint, unit: 'wei' = 'wei') {\n  return formatUnits(wei, gweiUnits[unit])\n}\n"],"names":[],"mappings":";;;AAEA,OAAO,EAA6B,WAAW,EAAE,MAAM,kBAAkB,CAAA;AAFzE,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;;;AAiB7C,SAAU,UAAU,CAAC,GAAW,EAAE,OAAc,KAAK;IACzD,oPAAO,cAAA,AAAW,EAAC,GAAG,gOAAE,YAAS,CAAC,IAAI,CAAC,CAAC,CAAA;AAC1C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 323, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 329, "column": 0}, "map": {"version":3,"file":"transaction.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/errors/transaction.ts"],"sourcesContent":["import type { Account } from '../accounts/types.js'\nimport type { SendTransactionParameters } from '../actions/wallet/sendTransaction.js'\nimport type { BlockTag } from '../types/block.js'\nimport type { Chain } from '../types/chain.js'\nimport type { Hash, Hex } from '../types/misc.js'\nimport type { TransactionType } from '../types/transaction.js'\nimport { formatEther } from '../utils/unit/formatEther.js'\nimport { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { BaseError } from './base.js'\n\nexport function prettyPrint(\n  args: Record<string, bigint | number | string | undefined | false | unknown>,\n) {\n  const entries = Object.entries(args)\n    .map(([key, value]) => {\n      if (value === undefined || value === false) return null\n      return [key, value]\n    })\n    .filter(Boolean) as [string, string][]\n  const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0)\n  return entries\n    .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n    .join('\\n')\n}\n\nexport type FeeConflictErrorType = FeeConflictError & {\n  name: 'FeeConflictError'\n}\nexport class FeeConflictError extends BaseError {\n  override name = 'FeeConflictError'\n  constructor() {\n    super(\n      [\n        'Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.',\n        'Use `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.',\n      ].join('\\n'),\n    )\n  }\n}\n\nexport type InvalidLegacyVErrorType = InvalidLegacyVError & {\n  name: 'InvalidLegacyVError'\n}\nexport class InvalidLegacyVError extends BaseError {\n  override name = 'InvalidLegacyVError'\n\n  constructor({ v }: { v: bigint }) {\n    super(`Invalid \\`v\\` value \"${v}\". Expected 27 or 28.`)\n  }\n}\n\nexport type InvalidSerializableTransactionErrorType =\n  InvalidSerializableTransactionError & {\n    name: 'InvalidSerializableTransactionError'\n  }\nexport class InvalidSerializableTransactionError extends BaseError {\n  override name = 'InvalidSerializableTransactionError'\n\n  constructor({ transaction }: { transaction: Record<string, unknown> }) {\n    super('Cannot infer a transaction type from provided transaction.', {\n      metaMessages: [\n        'Provided Transaction:',\n        '{',\n        prettyPrint(transaction),\n        '}',\n        '',\n        'To infer the type, either provide:',\n        '- a `type` to the Transaction, or',\n        '- an EIP-1559 Transaction with `maxFeePerGas`, or',\n        '- an EIP-2930 Transaction with `gasPrice` & `accessList`, or',\n        '- a Legacy Transaction with `gasPrice`',\n      ],\n    })\n  }\n}\n\nexport type InvalidSerializedTransactionTypeErrorType =\n  InvalidSerializedTransactionTypeError & {\n    name: 'InvalidSerializedTransactionTypeError'\n  }\nexport class InvalidSerializedTransactionTypeError extends BaseError {\n  override name = 'InvalidSerializedTransactionType'\n\n  serializedType: Hex\n\n  constructor({ serializedType }: { serializedType: Hex }) {\n    super(`Serialized transaction type \"${serializedType}\" is invalid.`)\n\n    this.serializedType = serializedType\n  }\n}\n\nexport type InvalidSerializedTransactionErrorType =\n  InvalidSerializedTransactionError & {\n    name: 'InvalidSerializedTransactionError'\n  }\nexport class InvalidSerializedTransactionError extends BaseError {\n  override name = 'InvalidSerializedTransactionError'\n\n  serializedTransaction: Hex\n  type: TransactionType\n\n  constructor({\n    attributes,\n    serializedTransaction,\n    type,\n  }: {\n    attributes: Record<string, unknown>\n    serializedTransaction: Hex\n    type: TransactionType\n  }) {\n    const missing = Object.entries(attributes)\n      .map(([key, value]) => (typeof value === 'undefined' ? key : undefined))\n      .filter(Boolean)\n    super(`Invalid serialized transaction of type \"${type}\" was provided.`, {\n      metaMessages: [\n        `Serialized Transaction: \"${serializedTransaction}\"`,\n        missing.length > 0 ? `Missing Attributes: ${missing.join(', ')}` : '',\n      ].filter(Boolean),\n    })\n\n    this.serializedTransaction = serializedTransaction\n    this.type = type\n  }\n}\n\nexport type InvalidStorageKeySizeErrorType = InvalidStorageKeySizeError & {\n  name: 'InvalidStorageKeySizeError'\n}\nexport class InvalidStorageKeySizeError extends BaseError {\n  override name = 'InvalidStorageKeySizeError'\n\n  constructor({ storageKey }: { storageKey: Hex }) {\n    super(\n      `Size for storage key \"${storageKey}\" is invalid. Expected 32 bytes. Got ${Math.floor(\n        (storageKey.length - 2) / 2,\n      )} bytes.`,\n    )\n  }\n}\n\nexport type TransactionExecutionErrorType = TransactionExecutionError & {\n  name: 'TransactionExecutionError'\n}\nexport class TransactionExecutionError extends BaseError {\n  override cause: BaseError\n\n  override name = 'TransactionExecutionError'\n\n  constructor(\n    cause: BaseError,\n    {\n      account,\n      docsPath,\n      chain,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    }: Omit<SendTransactionParameters, 'account' | 'chain'> & {\n      account: Account\n      chain?: Chain\n      docsPath?: string\n    },\n  ) {\n    const prettyArgs = prettyPrint({\n      chain: chain && `${chain?.name} (id: ${chain?.id})`,\n      from: account?.address,\n      to,\n      value:\n        typeof value !== 'undefined' &&\n        `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n      data,\n      gas,\n      gasPrice:\n        typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n      maxFeePerGas:\n        typeof maxFeePerGas !== 'undefined' &&\n        `${formatGwei(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas:\n        typeof maxPriorityFeePerGas !== 'undefined' &&\n        `${formatGwei(maxPriorityFeePerGas)} gwei`,\n      nonce,\n    })\n\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [\n        ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n        'Request Arguments:',\n        prettyArgs,\n      ].filter(Boolean) as string[],\n    })\n    this.cause = cause\n  }\n}\n\nexport type TransactionNotFoundErrorType = TransactionNotFoundError & {\n  name: 'TransactionNotFoundError'\n}\nexport class TransactionNotFoundError extends BaseError {\n  override name = 'TransactionNotFoundError'\n  constructor({\n    blockHash,\n    blockNumber,\n    blockTag,\n    hash,\n    index,\n  }: {\n    blockHash?: Hash\n    blockNumber?: bigint\n    blockTag?: BlockTag\n    hash?: Hash\n    index?: number\n  }) {\n    let identifier = 'Transaction'\n    if (blockTag && index !== undefined)\n      identifier = `Transaction at block time \"${blockTag}\" at index \"${index}\"`\n    if (blockHash && index !== undefined)\n      identifier = `Transaction at block hash \"${blockHash}\" at index \"${index}\"`\n    if (blockNumber && index !== undefined)\n      identifier = `Transaction at block number \"${blockNumber}\" at index \"${index}\"`\n    if (hash) identifier = `Transaction with hash \"${hash}\"`\n    super(`${identifier} could not be found.`)\n  }\n}\n\nexport type TransactionReceiptNotFoundErrorType =\n  TransactionReceiptNotFoundError & {\n    name: 'TransactionReceiptNotFoundError'\n  }\nexport class TransactionReceiptNotFoundError extends BaseError {\n  override name = 'TransactionReceiptNotFoundError'\n  constructor({ hash }: { hash: Hash }) {\n    super(\n      `Transaction receipt with hash \"${hash}\" could not be found. The Transaction may not be processed on a block yet.`,\n    )\n  }\n}\n\nexport type WaitForTransactionReceiptTimeoutErrorType =\n  WaitForTransactionReceiptTimeoutError & {\n    name: 'WaitForTransactionReceiptTimeoutError'\n  }\nexport class WaitForTransactionReceiptTimeoutError extends BaseError {\n  override name = 'WaitForTransactionReceiptTimeoutError'\n  constructor({ hash }: { hash: Hash }) {\n    super(\n      `Timed out while waiting for transaction with hash \"${hash}\" to be confirmed.`,\n    )\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 547, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 553, "column": 0}, "map": {"version":3,"file":"node.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/errors/node.ts"],"sourcesContent":["import { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { BaseError } from './base.js'\n\n/**\n * geth:    https://github.com/ethereum/go-ethereum/blob/master/core/error.go\n *          https://github.com/ethereum/go-ethereum/blob/master/core/types/transaction.go#L34-L41\n *\n * erigon:  https://github.com/ledgerwatch/erigon/blob/master/core/error.go\n *          https://github.com/ledgerwatch/erigon/blob/master/core/types/transaction.go#L41-L46\n *\n * anvil:   https://github.com/foundry-rs/foundry/blob/master/anvil/src/eth/error.rs#L108\n */\nexport type ExecutionRevertedErrorType = ExecutionRevertedError & {\n  code: 3\n  name: 'ExecutionRevertedError'\n}\nexport class ExecutionRevertedError extends BaseError {\n  static code = 3\n  static nodeMessage = /execution reverted/\n\n  override name = 'ExecutionRevertedError'\n\n  constructor({\n    cause,\n    message,\n  }: { cause?: BaseError; message?: string } = {}) {\n    const reason = message\n      ?.replace('execution reverted: ', '')\n      ?.replace('execution reverted', '')\n    super(\n      `Execution reverted ${\n        reason ? `with reason: ${reason}` : 'for an unknown reason'\n      }.`,\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport type FeeCapTooHighErrorType = FeeCapTooHighError & {\n  name: 'FeeCapTooHighError'\n}\nexport class FeeCapTooHighError extends BaseError {\n  static nodeMessage =\n    /max fee per gas higher than 2\\^256-1|fee cap higher than 2\\^256-1/\n  override name = 'FeeCapTooHigh'\n  constructor({\n    cause,\n    maxFeePerGas,\n  }: { cause?: BaseError; maxFeePerGas?: bigint } = {}) {\n    super(\n      `The fee cap (\\`maxFeePerGas\\`${\n        maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''\n      }) cannot be higher than the maximum allowed value (2^256-1).`,\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport type FeeCapTooLowErrorType = FeeCapTooLowError & {\n  name: 'FeeCapTooLowError'\n}\nexport class FeeCapTooLowError extends BaseError {\n  static nodeMessage =\n    /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/\n  override name = 'FeeCapTooLow'\n  constructor({\n    cause,\n    maxFeePerGas,\n  }: { cause?: BaseError; maxFeePerGas?: bigint } = {}) {\n    super(\n      `The fee cap (\\`maxFeePerGas\\`${\n        maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)}` : ''\n      } gwei) cannot be lower than the block base fee.`,\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport type NonceTooHighErrorType = NonceTooHighError & {\n  name: 'NonceTooHighError'\n}\nexport class NonceTooHighError extends BaseError {\n  static nodeMessage = /nonce too high/\n  override name = 'NonceTooHighError'\n  constructor({ cause, nonce }: { cause?: BaseError; nonce?: number } = {}) {\n    super(\n      `Nonce provided for the transaction ${\n        nonce ? `(${nonce}) ` : ''\n      }is higher than the next one expected.`,\n      { cause },\n    )\n  }\n}\n\nexport type NonceTooLowErrorType = NonceTooLowError & {\n  name: 'NonceTooLowError'\n}\nexport class NonceTooLowError extends BaseError {\n  static nodeMessage =\n    /nonce too low|transaction already imported|already known/\n  override name = 'NonceTooLowError'\n  constructor({ cause, nonce }: { cause?: BaseError; nonce?: number } = {}) {\n    super(\n      [\n        `Nonce provided for the transaction ${\n          nonce ? `(${nonce}) ` : ''\n        }is lower than the current nonce of the account.`,\n        'Try increasing the nonce or find the latest nonce with `getTransactionCount`.',\n      ].join('\\n'),\n      { cause },\n    )\n  }\n}\n\nexport type NonceMaxValueErrorType = NonceMaxValueError & {\n  name: 'NonceMaxValueError'\n}\nexport class NonceMaxValueError extends BaseError {\n  static nodeMessage = /nonce has max value/\n  override name = 'NonceMaxValueError'\n  constructor({ cause, nonce }: { cause?: BaseError; nonce?: number } = {}) {\n    super(\n      `Nonce provided for the transaction ${\n        nonce ? `(${nonce}) ` : ''\n      }exceeds the maximum allowed nonce.`,\n      { cause },\n    )\n  }\n}\n\nexport type InsufficientFundsErrorType = InsufficientFundsError & {\n  name: 'InsufficientFundsError'\n}\nexport class InsufficientFundsError extends BaseError {\n  static nodeMessage = /insufficient funds/\n  override name = 'InsufficientFundsError'\n  constructor({ cause }: { cause?: BaseError } = {}) {\n    super(\n      [\n        'The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.',\n      ].join('\\n'),\n      {\n        cause,\n        metaMessages: [\n          'This error could arise when the account does not have enough funds to:',\n          ' - pay for the total gas fee,',\n          ' - pay for the value to send.',\n          ' ',\n          'The cost of the transaction is calculated as `gas * gas fee + value`, where:',\n          ' - `gas` is the amount of gas needed for transaction to execute,',\n          ' - `gas fee` is the gas fee,',\n          ' - `value` is the amount of ether to send to the recipient.',\n        ],\n      },\n    )\n  }\n}\n\nexport type IntrinsicGasTooHighErrorType = IntrinsicGasTooHighError & {\n  name: 'IntrinsicGasTooHighError'\n}\nexport class IntrinsicGasTooHighError extends BaseError {\n  static nodeMessage = /intrinsic gas too high|gas limit reached/\n  override name = 'IntrinsicGasTooHighError'\n  constructor({ cause, gas }: { cause?: BaseError; gas?: bigint } = {}) {\n    super(\n      `The amount of gas ${\n        gas ? `(${gas}) ` : ''\n      }provided for the transaction exceeds the limit allowed for the block.`,\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport type IntrinsicGasTooLowErrorType = IntrinsicGasTooLowError & {\n  name: 'IntrinsicGasTooLowError'\n}\nexport class IntrinsicGasTooLowError extends BaseError {\n  static nodeMessage = /intrinsic gas too low/\n  override name = 'IntrinsicGasTooLowError'\n  constructor({ cause, gas }: { cause?: BaseError; gas?: bigint } = {}) {\n    super(\n      `The amount of gas ${\n        gas ? `(${gas}) ` : ''\n      }provided for the transaction is too low.`,\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport type TransactionTypeNotSupportedErrorType =\n  TransactionTypeNotSupportedError & {\n    name: 'TransactionTypeNotSupportedError'\n  }\nexport class TransactionTypeNotSupportedError extends BaseError {\n  static nodeMessage = /transaction type not valid/\n  override name = 'TransactionTypeNotSupportedError'\n  constructor({ cause }: { cause?: BaseError }) {\n    super('The transaction type is not supported for this chain.', {\n      cause,\n    })\n  }\n}\n\nexport type TipAboveFeeCapErrorType = TipAboveFeeCapError & {\n  name: 'TipAboveFeeCapError'\n}\nexport class TipAboveFeeCapError extends BaseError {\n  static nodeMessage =\n    /max priority fee per gas higher than max fee per gas|tip higher than fee cap/\n  override name = 'TipAboveFeeCapError'\n  constructor({\n    cause,\n    maxPriorityFeePerGas,\n    maxFeePerGas,\n  }: {\n    cause?: BaseError\n    maxPriorityFeePerGas?: bigint\n    maxFeePerGas?: bigint\n  } = {}) {\n    super(\n      [\n        `The provided tip (\\`maxPriorityFeePerGas\\`${\n          maxPriorityFeePerGas\n            ? ` = ${formatGwei(maxPriorityFeePerGas)} gwei`\n            : ''\n        }) cannot be higher than the fee cap (\\`maxFeePerGas\\`${\n          maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''\n        }).`,\n      ].join('\\n'),\n      {\n        cause,\n      },\n    )\n  }\n}\n\nexport type UnknownNodeErrorType = UnknownNodeError & {\n  name: 'UnknownNodeError'\n}\nexport class UnknownNodeError extends BaseError {\n  override name = 'UnknownNodeError'\n\n  constructor({ cause }: { cause?: BaseError }) {\n    super(`An error occurred while executing: ${cause?.shortMessage}`, {\n      cause,\n    })\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 828, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 834, "column": 0}, "map": {"version":3,"file":"assertRequest.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/transaction/assertRequest.ts"],"sourcesContent":["import {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { SendTransactionParameters } from '../../actions/wallet/sendTransaction.js'\nimport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport {\n  FeeCapTooHighError,\n  type FeeCapTooHighErrorType,\n  TipAboveFeeCapError,\n  type TipAboveFeeCapErrorType,\n} from '../../errors/node.js'\nimport {\n  FeeConflictError,\n  type FeeConflictErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport { isAddress } from '../address/isAddress.js'\n\nexport type AssertRequestParameters = Partial<SendTransactionParameters<Chain>>\n\nexport type AssertRequestErrorType =\n  | InvalidAddressErrorType\n  | FeeConflictErrorType\n  | FeeCapTooHighErrorType\n  | ParseAccountErrorType\n  | TipAboveFeeCapErrorType\n  | ErrorType\n\nexport function assertRequest(args: AssertRequestParameters) {\n  const {\n    account: account_,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    to,\n  } = args\n  const account = account_ ? parseAccount(account_) : undefined\n  if (account && !isAddress(account.address))\n    throw new InvalidAddressError({ address: account.address })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (\n    typeof gasPrice !== 'undefined' &&\n    (typeof maxFeePerGas !== 'undefined' ||\n      typeof maxPriorityFeePerGas !== 'undefined')\n  )\n    throw new FeeConflictError()\n\n  if (maxFeePerGas && maxFeePerGas > 2n ** 256n - 1n)\n    throw new FeeCapTooHighError({ maxFeePerGas })\n  if (\n    maxPriorityFeePerGas &&\n    maxFeePerGas &&\n    maxPriorityFeePerGas > maxFeePerGas\n  )\n    throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas })\n}\n"],"names":[],"mappings":";;;AAAA,OAAO,EAEL,YAAY,GACb,MAAM,sCAAsC,CAAA;AAkB7C,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;AAhBnD,OAAO,EACL,mBAAmB,GAEpB,MAAM,yBAAyB,CAAA;AAOhC,OAAO,EACL,gBAAgB,GAEjB,MAAM,6BAA6B,CAAA;AATpC,OAAO,EACL,kBAAkB,EAElB,mBAAmB,GAEpB,MAAM,sBAAsB,CAAA;;;;;;AAmBvB,SAAU,aAAa,CAAC,IAA6B;IACzD,MAAM,EACJ,OAAO,EAAE,QAAQ,EACjB,QAAQ,EACR,YAAY,EACZ,oBAAoB,EACpB,EAAE,EACH,GAAG,IAAI,CAAA;IACR,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,mPAAC,eAAA,AAAY,EAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAA;IAC7D,IAAI,OAAO,IAAI,EAAC,yPAAS,AAAT,EAAU,OAAO,CAAC,OAAO,CAAC,EACxC,MAAM,kOAAI,sBAAmB,CAAC;QAAE,OAAO,EAAE,OAAO,CAAC,OAAO;IAAA,CAAE,CAAC,CAAA;IAC7D,IAAI,EAAE,IAAI,+OAAC,YAAA,AAAS,EAAC,EAAE,CAAC,EAAE,MAAM,iOAAI,uBAAmB,CAAC;QAAE,OAAO,EAAE,EAAE;IAAA,CAAE,CAAC,CAAA;IACxE,IACE,OAAO,QAAQ,KAAK,WAAW,IAC/B,CAAC,OAAO,YAAY,KAAK,WAAW,IAClC,OAAO,oBAAoB,KAAK,WAAW,CAAC,EAE9C,MAAM,sOAAI,mBAAgB,EAAE,CAAA;IAE9B,IAAI,YAAY,IAAI,YAAY,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,EAChD,MAAM,+NAAI,qBAAkB,CAAC;QAAE,YAAY;IAAA,CAAE,CAAC,CAAA;IAChD,IACE,oBAAoB,IACpB,YAAY,IACZ,oBAAoB,GAAG,YAAY,EAEnC,MAAM,+NAAI,sBAAmB,CAAC;QAAE,YAAY;QAAE,oBAAoB;IAAA,CAAE,CAAC,CAAA;AACzE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 865, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 871, "column": 0}, "map": {"version":3,"file":"isHex.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/data/isHex.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\n\nexport type IsHexErrorType = ErrorType\n\nexport function isHex(\n  value: unknown,\n  { strict = true }: { strict?: boolean } = {},\n): value is Hex {\n  if (!value) return false\n  if (typeof value !== 'string') return false\n  return strict ? /^0x[0-9a-fA-F]*$/.test(value) : value.startsWith('0x')\n}\n"],"names":[],"mappings":";;;AAKM,SAAU,KAAK,CACnB,KAAc,EACd,EAAE,MAAM,GAAG,IAAI,EAAA,GAA2B,CAAA,CAAE;IAE5C,IAAI,CAAC,KAAK,EAAE,OAAO,KAAK,CAAA;IACxB,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,OAAO,KAAK,CAAA;IAC3C,OAAO,MAAM,CAAC,CAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA;AACzE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 879, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 885, "column": 0}, "map": {"version":3,"file":"size.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/data/size.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nimport { type IsHexErrorType, isHex } from './isHex.js'\n\nexport type SizeErrorType = IsHexErrorType | ErrorType\n\n/**\n * @description Retrieves the size of the value (in bytes).\n *\n * @param value The value (hex or byte array) to retrieve the size of.\n * @returns The size of the value (in bytes).\n */\nexport function size(value: Hex | ByteArray) {\n  if (isHex(value, { strict: false })) return Math.ceil((value.length - 2) / 2)\n  return value.length\n}\n"],"names":[],"mappings":";;;AAGA,OAAO,EAAuB,KAAK,EAAE,MAAM,YAAY,CAAA;;AAUjD,SAAU,IAAI,CAAC,KAAsB;IACzC,2OAAI,QAAA,AAAK,EAAC,KAAK,EAAE;QAAE,MAAM,EAAE,KAAK;IAAA,CAAE,CAAC,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;IAC7E,OAAO,KAAK,CAAC,MAAM,CAAA;AACrB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 896, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 902, "column": 0}, "map": {"version":3,"file":"encoding.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/errors/encoding.ts"],"sourcesContent":["import type { ByteArray, Hex } from '../types/misc.js'\n\nimport { BaseError } from './base.js'\n\nexport type DataLengthTooLongErrorType = DataLengthTooLongError & {\n  name: 'DataLengthTooLongError'\n}\n/** @deprecated */\nexport class DataLengthTooLongError extends BaseError {\n  override name = 'DataLengthTooLongError'\n  constructor({ consumed, length }: { consumed: number; length: number }) {\n    super(\n      `Consumed bytes (${consumed}) is shorter than data length (${\n        length - 1\n      }).`,\n    )\n  }\n}\n\nexport type DataLengthTooShortErrorType = DataLengthTooShortError & {\n  name: 'DataLengthTooShortError'\n}\n/** @deprecated */\nexport class DataLengthTooShortError extends BaseError {\n  override name = 'DataLengthTooShortError'\n  constructor({ length, dataLength }: { length: number; dataLength: number }) {\n    super(\n      `Data length (${dataLength - 1}) is shorter than consumed bytes length (${\n        length - 1\n      }).`,\n    )\n  }\n}\n\nexport type IntegerOutOfRangeErrorType = IntegerOutOfRangeError & {\n  name: 'IntegerOutOfRangeError'\n}\nexport class IntegerOutOfRangeError extends BaseError {\n  override name = 'IntegerOutOfRangeError'\n  constructor({\n    max,\n    min,\n    signed,\n    size,\n    value,\n  }: {\n    max?: string\n    min: string\n    signed?: boolean\n    size?: number\n    value: string\n  }) {\n    super(\n      `Number \"${value}\" is not in safe ${\n        size ? `${size * 8}-bit ${signed ? 'signed' : 'unsigned'} ` : ''\n      }integer range ${max ? `(${min} to ${max})` : `(above ${min})`}`,\n    )\n  }\n}\n\nexport type InvalidBytesBooleanErrorType = InvalidBytesBooleanError & {\n  name: 'InvalidBytesBooleanError'\n}\nexport class InvalidBytesBooleanError extends BaseError {\n  override name = 'InvalidBytesBooleanError'\n  constructor(bytes: ByteArray) {\n    super(\n      `Bytes value \"${bytes}\" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`,\n    )\n  }\n}\n\nexport type InvalidHexBooleanErrorType = InvalidHexBooleanError & {\n  name: 'InvalidHexBooleanError'\n}\nexport class InvalidHexBooleanError extends BaseError {\n  override name = 'InvalidHexBooleanError'\n  constructor(hex: Hex) {\n    super(\n      `Hex value \"${hex}\" is not a valid boolean. The hex value must be \"0x0\" (false) or \"0x1\" (true).`,\n    )\n  }\n}\n\nexport type InvalidHexValueErrorType = InvalidHexValueError & {\n  name: 'InvalidHexValueError'\n}\nexport class InvalidHexValueError extends BaseError {\n  override name = 'InvalidHexValueError'\n  constructor(value: Hex) {\n    super(\n      `Hex value \"${value}\" is an odd length (${value.length}). It must be an even length.`,\n    )\n  }\n}\n\nexport type OffsetOutOfBoundsErrorType = OffsetOutOfBoundsError & {\n  name: 'OffsetOutOfBoundsError'\n}\n/** @deprecated */\nexport class OffsetOutOfBoundsError extends BaseError {\n  override name = 'OffsetOutOfBoundsError' as const\n  constructor({ nextOffset, offset }: { nextOffset: number; offset: number }) {\n    super(\n      `Next offset (${nextOffset}) is greater than previous offset + consumed bytes (${offset})`,\n    )\n  }\n}\n\nexport type SizeOverflowErrorType = SizeOverflowError & {\n  name: 'SizeOverflowError'\n}\nexport class SizeOverflowError extends BaseError {\n  override name = 'SizeOverflowError' as const\n  constructor({ givenSize, maxSize }: { givenSize: number; maxSize: number }) {\n    super(\n      `Size cannot exceed ${maxSize} bytes. Given size: ${givenSize} bytes.`,\n    )\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1002, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1008, "column": 0}, "map": {"version":3,"file":"data.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/errors/data.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type SliceOffsetOutOfBoundsErrorType = SliceOffsetOutOfBoundsError & {\n  name: 'SliceOffsetOutOfBoundsError'\n}\nexport class SliceOffsetOutOfBoundsError extends BaseError {\n  override name = 'SliceOffsetOutOfBoundsError'\n  constructor({\n    offset,\n    position,\n    size,\n  }: { offset: number; position: 'start' | 'end'; size: number }) {\n    super(\n      `Slice ${\n        position === 'start' ? 'starting' : 'ending'\n      } at offset \"${offset}\" is out-of-bounds (size: ${size}).`,\n    )\n  }\n}\n\nexport type SizeExceedsPaddingSizeErrorType = SizeExceedsPaddingSizeError & {\n  name: 'SizeExceedsPaddingSizeError'\n}\nexport class SizeExceedsPaddingSizeError extends BaseError {\n  override name = 'SizeExceedsPaddingSizeError'\n  constructor({\n    size,\n    targetSize,\n    type,\n  }: {\n    size: number\n    targetSize: number\n    type: 'hex' | 'bytes'\n  }) {\n    super(\n      `${type.charAt(0).toUpperCase()}${type\n        .slice(1)\n        .toLowerCase()} size (${size}) exceeds padding size (${targetSize}).`,\n    )\n  }\n}\n"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;;AAK/B,MAAO,2BAA4B,oOAAQ,YAAS;IAExD,YAAY,EACV,MAAM,EACN,QAAQ,EACR,IAAI,EACwD,CAAA;QAC5D,KAAK,CACH,CAAA,MAAA,EACE,QAAQ,KAAK,OAAO,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,QACtC,CAAA,YAAA,EAAe,MAAM,CAAA,0BAAA,EAA6B,IAAI,CAAA,EAAA,CAAI,CAC3D,CAAA;QAVM,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,6BAA6B;WAAA;IAW7C,CAAC;CACF;AAKK,MAAO,2BAA4B,oOAAQ,YAAS;IAExD,YAAY,EACV,IAAI,EACJ,UAAU,EACV,IAAI,EAKL,CAAA;QACC,KAAK,CACH,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,CACnC,KAAK,CAAC,CAAC,CAAC,CACR,WAAW,EAAE,CAAA,OAAA,EAAU,IAAI,CAAA,wBAAA,EAA2B,UAAU,CAAA,EAAA,CAAI,CACxE,CAAA;QAdM,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,6BAA6B;WAAA;IAe7C,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 1036, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1042, "column": 0}, "map": {"version":3,"file":"pad.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/data/pad.ts"],"sourcesContent":["import {\n  SizeExceedsPaddingSizeError,\n  type SizeExceedsPaddingSizeErrorType,\n} from '../../errors/data.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\ntype PadOptions = {\n  dir?: 'left' | 'right'\n  size?: number | null\n}\nexport type PadReturnType<TValue extends ByteArray | Hex> = TValue extends Hex\n  ? Hex\n  : ByteArray\n\nexport type PadErrorType = PadHexErrorType | PadBytesErrorType | ErrorType\n\nexport function pad<TValue extends ByteArray | Hex>(\n  hexOrBytes: TValue,\n  { dir, size = 32 }: PadOptions = {},\n): PadReturnType<TValue> {\n  if (typeof hexOrBytes === 'string')\n    return padHex(hexOrBytes, { dir, size }) as PadReturnType<TValue>\n  return padBytes(hexOrBytes, { dir, size }) as PadReturnType<TValue>\n}\n\nexport type PadHexErrorType = SizeExceedsPaddingSizeErrorType | ErrorType\n\nexport function padHex(hex_: Hex, { dir, size = 32 }: PadOptions = {}) {\n  if (size === null) return hex_\n  const hex = hex_.replace('0x', '')\n  if (hex.length > size * 2)\n    throw new SizeExceedsPaddingSizeError({\n      size: Math.ceil(hex.length / 2),\n      targetSize: size,\n      type: 'hex',\n    })\n\n  return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](\n    size * 2,\n    '0',\n  )}` as Hex\n}\n\nexport type PadBytesErrorType = SizeExceedsPaddingSizeErrorType | ErrorType\n\nexport function padBytes(\n  bytes: ByteArray,\n  { dir, size = 32 }: PadOptions = {},\n) {\n  if (size === null) return bytes\n  if (bytes.length > size)\n    throw new SizeExceedsPaddingSizeError({\n      size: bytes.length,\n      targetSize: size,\n      type: 'bytes',\n    })\n  const paddedBytes = new Uint8Array(size)\n  for (let i = 0; i < size; i++) {\n    const padEnd = dir === 'right'\n    paddedBytes[padEnd ? i : size - i - 1] =\n      bytes[padEnd ? i : bytes.length - i - 1]\n  }\n  return paddedBytes\n}\n"],"names":[],"mappings":";;;;;AAAA,OAAO,EACL,2BAA2B,GAE5B,MAAM,sBAAsB,CAAA;;AAcvB,SAAU,GAAG,CACjB,UAAkB,EAClB,EAAE,GAAG,EAAE,IAAI,GAAG,EAAE,EAAA,GAAiB,CAAA,CAAE;IAEnC,IAAI,OAAO,UAAU,KAAK,QAAQ,EAChC,OAAO,MAAM,CAAC,UAAU,EAAE;QAAE,GAAG;QAAE,IAAI;IAAA,CAAE,CAA0B,CAAA;IACnE,OAAO,QAAQ,CAAC,UAAU,EAAE;QAAE,GAAG;QAAE,IAAI;IAAA,CAAE,CAA0B,CAAA;AACrE,CAAC;AAIK,SAAU,MAAM,CAAC,IAAS,EAAE,EAAE,GAAG,EAAE,IAAI,GAAG,EAAE,EAAA,GAAiB,CAAA,CAAE;IACnE,IAAI,IAAI,KAAK,IAAI,EAAE,OAAO,IAAI,CAAA;IAC9B,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAA;IAClC,IAAI,GAAG,CAAC,MAAM,GAAG,IAAI,GAAG,CAAC,EACvB,MAAM,+NAAI,8BAA2B,CAAC;QACpC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;QAC/B,UAAU,EAAE,IAAI;QAChB,IAAI,EAAE,KAAK;KACZ,CAAC,CAAA;IAEJ,OAAO,CAAA,EAAA,EAAK,GAAG,CAAC,GAAG,KAAK,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CACtD,IAAI,GAAG,CAAC,EACR,GAAG,CACJ,EAAS,CAAA;AACZ,CAAC;AAIK,SAAU,QAAQ,CACtB,KAAgB,EAChB,EAAE,GAAG,EAAE,IAAI,GAAG,EAAE,EAAA,GAAiB,CAAA,CAAE;IAEnC,IAAI,IAAI,KAAK,IAAI,EAAE,OAAO,KAAK,CAAA;IAC/B,IAAI,KAAK,CAAC,MAAM,GAAG,IAAI,EACrB,MAAM,+NAAI,8BAA2B,CAAC;QACpC,IAAI,EAAE,KAAK,CAAC,MAAM;QAClB,UAAU,EAAE,IAAI;QAChB,IAAI,EAAE,OAAO;KACd,CAAC,CAAA;IACJ,MAAM,WAAW,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,CAAA;IACxC,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAE;QAC7B,MAAM,MAAM,GAAG,GAAG,KAAK,OAAO,CAAA;QAC9B,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GACpC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;KAC3C;IACD,OAAO,WAAW,CAAA;AACpB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1083, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1089, "column": 0}, "map": {"version":3,"file":"toBytes.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/encoding/toBytes.ts"],"sourcesContent":["import { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { type PadErrorType, pad } from '../data/pad.js'\n\nimport { type AssertSizeErrorType, assertSize } from './fromHex.js'\nimport {\n  type NumberToHexErrorType,\n  type NumberToHexOpts,\n  numberToHex,\n} from './toHex.js'\n\nconst encoder = /*#__PURE__*/ new TextEncoder()\n\nexport type ToBytesParameters = {\n  /** Size of the output bytes. */\n  size?: number\n}\n\nexport type ToBytesErrorType =\n  | NumberToBytesErrorType\n  | BoolToBytesErrorType\n  | HexToBytesErrorType\n  | StringToBytesErrorType\n  | IsHexErrorType\n  | ErrorType\n\n/**\n * Encodes a UTF-8 string, hex value, bigint, number or boolean to a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes.html\n * - Example: https://viem.sh/docs/utilities/toBytes.html#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes('Hello world')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nexport function toBytes(\n  value: string | bigint | number | boolean | Hex,\n  opts: ToBytesParameters = {},\n): ByteArray {\n  if (typeof value === 'number' || typeof value === 'bigint')\n    return numberToBytes(value, opts)\n  if (typeof value === 'boolean') return boolToBytes(value, opts)\n  if (isHex(value)) return hexToBytes(value, opts)\n  return stringToBytes(value, opts)\n}\n\nexport type BoolToBytesOpts = {\n  /** Size of the output bytes. */\n  size?: number\n}\n\nexport type BoolToBytesErrorType =\n  | AssertSizeErrorType\n  | PadErrorType\n  | ErrorType\n\n/**\n * Encodes a boolean into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes.html#booltobytes\n *\n * @param value Boolean value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true)\n * // Uint8Array([1])\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true, { size: 32 })\n * // Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])\n */\nexport function boolToBytes(value: boolean, opts: BoolToBytesOpts = {}) {\n  const bytes = new Uint8Array(1)\n  bytes[0] = Number(value)\n  if (typeof opts.size === 'number') {\n    assertSize(bytes, { size: opts.size })\n    return pad(bytes, { size: opts.size })\n  }\n  return bytes\n}\n\n// We use very optimized technique to convert hex string to byte array\nconst charCodeMap = {\n  zero: 48,\n  nine: 57,\n  A: 65,\n  F: 70,\n  a: 97,\n  f: 102,\n} as const\n\nfunction charCodeToBase16(char: number) {\n  if (char >= charCodeMap.zero && char <= charCodeMap.nine)\n    return char - charCodeMap.zero\n  if (char >= charCodeMap.A && char <= charCodeMap.F)\n    return char - (charCodeMap.A - 10)\n  if (char >= charCodeMap.a && char <= charCodeMap.f)\n    return char - (charCodeMap.a - 10)\n  return undefined\n}\n\nexport type HexToBytesOpts = {\n  /** Size of the output bytes. */\n  size?: number\n}\n\nexport type HexToBytesErrorType = AssertSizeErrorType | PadErrorType | ErrorType\n\n/**\n * Encodes a hex string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes.html#hextobytes\n *\n * @param hex Hex string to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nexport function hexToBytes(hex_: Hex, opts: HexToBytesOpts = {}): ByteArray {\n  let hex = hex_\n  if (opts.size) {\n    assertSize(hex, { size: opts.size })\n    hex = pad(hex, { dir: 'right', size: opts.size })\n  }\n\n  let hexString = hex.slice(2) as string\n  if (hexString.length % 2) hexString = `0${hexString}`\n\n  const length = hexString.length / 2\n  const bytes = new Uint8Array(length)\n  for (let index = 0, j = 0; index < length; index++) {\n    const nibbleLeft = charCodeToBase16(hexString.charCodeAt(j++))\n    const nibbleRight = charCodeToBase16(hexString.charCodeAt(j++))\n    if (nibbleLeft === undefined || nibbleRight === undefined) {\n      throw new BaseError(\n        `Invalid byte sequence (\"${hexString[j - 2]}${\n          hexString[j - 1]\n        }\" in \"${hexString}\").`,\n      )\n    }\n    bytes[index] = nibbleLeft * 16 + nibbleRight\n  }\n  return bytes\n}\n\nexport type NumberToBytesErrorType =\n  | NumberToHexErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\n/**\n * Encodes a number into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes.html#numbertobytes\n *\n * @param value Number to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nexport function numberToBytes(value: bigint | number, opts?: NumberToHexOpts) {\n  const hex = numberToHex(value, opts)\n  return hexToBytes(hex)\n}\n\nexport type StringToBytesOpts = {\n  /** Size of the output bytes. */\n  size?: number\n}\n\nexport type StringToBytesErrorType =\n  | AssertSizeErrorType\n  | PadErrorType\n  | ErrorType\n\n/**\n * Encodes a UTF-8 string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes.html#stringtobytes\n *\n * @param value String to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100, 33])\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nexport function stringToBytes(\n  value: string,\n  opts: StringToBytesOpts = {},\n): ByteArray {\n  const bytes = encoder.encode(value)\n  if (typeof opts.size === 'number') {\n    assertSize(bytes, { size: opts.size })\n    return pad(bytes, { dir: 'right', size: opts.size })\n  }\n  return bytes\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1183, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1189, "column": 0}, "map": {"version":3,"file":"trim.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/data/trim.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\ntype TrimOptions = {\n  dir?: 'left' | 'right'\n}\nexport type TrimReturnType<TValue extends ByteArray | Hex> = TValue extends Hex\n  ? Hex\n  : ByteArray\n\nexport type TrimErrorType = ErrorType\n\nexport function trim<TValue extends ByteArray | Hex>(\n  hexOrBytes: TValue,\n  { dir = 'left' }: TrimOptions = {},\n): TrimReturnType<TValue> {\n  let data: any =\n    typeof hexOrBytes === 'string' ? hexOrBytes.replace('0x', '') : hexOrBytes\n\n  let sliceLength = 0\n  for (let i = 0; i < data.length - 1; i++) {\n    if (data[dir === 'left' ? i : data.length - i - 1].toString() === '0')\n      sliceLength++\n    else break\n  }\n  data =\n    dir === 'left'\n      ? data.slice(sliceLength)\n      : data.slice(0, data.length - sliceLength)\n\n  if (typeof hexOrBytes === 'string') {\n    if (data.length === 1 && dir === 'right') data = `${data}0`\n    return `0x${\n      data.length % 2 === 1 ? `0${data}` : data\n    }` as TrimReturnType<TValue>\n  }\n  return data as TrimReturnType<TValue>\n}\n"],"names":[],"mappings":";;;AAYM,SAAU,IAAI,CAClB,UAAkB,EAClB,EAAE,GAAG,GAAG,MAAM,EAAA,GAAkB,CAAA,CAAE;IAElC,IAAI,IAAI,GACN,OAAO,UAAU,KAAK,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAA;IAE5E,IAAI,WAAW,GAAG,CAAC,CAAA;IACnB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE;QACxC,IAAI,IAAI,CAAC,GAAG,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,KAAK,GAAG,EACnE,WAAW,EAAE,CAAA;aACV,MAAK;KACX;IACD,IAAI,GACF,GAAG,KAAK,MAAM,GACV,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GACvB,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,CAAA;IAE9C,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;QAClC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,GAAG,KAAK,OAAO,EAAE,IAAI,GAAG,GAAG,IAAI,CAAA,CAAA,CAAG,CAAA;QAC3D,OAAO,CAAA,EAAA,EACL,IAAI,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,EAAI,IAAI,EAAE,CAAC,CAAC,CAAC,IACvC,EAA4B,CAAA;KAC7B;IACD,OAAO,IAA8B,CAAA;AACvC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1206, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1212, "column": 0}, "map": {"version":3,"file":"fromHex.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/encoding/fromHex.ts"],"sourcesContent":["import {\n  InvalidHexBooleanError,\n  type InvalidHexBooleanErrorType,\n  SizeOverflowError,\n  type SizeOverflowErrorType,\n} from '../../errors/encoding.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type SizeErrorType, size as size_ } from '../data/size.js'\nimport { type TrimErrorType, trim } from '../data/trim.js'\n\nimport { type HexToBytesErrorType, hexToBytes } from './toBytes.js'\n\nexport type AssertSizeErrorType =\n  | SizeOverflowErrorType\n  | SizeErrorType\n  | ErrorType\n\nexport function assertSize(\n  hexOrBytes: Hex | ByteArray,\n  { size }: { size: number },\n): void {\n  if (size_(hexOrBytes) > size)\n    throw new SizeOverflowError({\n      givenSize: size_(hexOrBytes),\n      maxSize: size,\n    })\n}\n\nexport type FromHexParameters<\n  TTo extends 'string' | 'bigint' | 'number' | 'bytes' | 'boolean',\n> =\n  | TTo\n  | {\n      /** Size (in bytes) of the hex value. */\n      size?: number\n      /** Type to convert to. */\n      to: TTo\n    }\n\nexport type FromHexReturnType<TTo> = TTo extends 'string'\n  ? string\n  : TTo extends 'bigint'\n    ? bigint\n    : TTo extends 'number'\n      ? number\n      : TTo extends 'bytes'\n        ? ByteArray\n        : TTo extends 'boolean'\n          ? boolean\n          : never\n\nexport type FromHexErrorType =\n  | HexToNumberErrorType\n  | HexToBigIntErrorType\n  | HexToBoolErrorType\n  | HexToStringErrorType\n  | HexToBytesErrorType\n  | ErrorType\n\n/**\n * Decodes a hex string into a string, number, bigint, boolean, or byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex.html\n * - Example: https://viem.sh/docs/utilities/fromHex.html#usage\n *\n * @param hex Hex string to decode.\n * @param toOrOpts Type to convert to or options.\n * @returns Decoded value.\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x1a4', 'number')\n * // 420\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x48656c6c6f20576f726c6421', 'string')\n * // 'Hello world'\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *   size: 32,\n *   to: 'string'\n * })\n * // 'Hello world'\n */\nexport function fromHex<\n  TTo extends 'string' | 'bigint' | 'number' | 'bytes' | 'boolean',\n>(hex: Hex, toOrOpts: FromHexParameters<TTo>): FromHexReturnType<TTo> {\n  const opts = typeof toOrOpts === 'string' ? { to: toOrOpts } : toOrOpts\n  const to = opts.to\n\n  if (to === 'number') return hexToNumber(hex, opts) as FromHexReturnType<TTo>\n  if (to === 'bigint') return hexToBigInt(hex, opts) as FromHexReturnType<TTo>\n  if (to === 'string') return hexToString(hex, opts) as FromHexReturnType<TTo>\n  if (to === 'boolean') return hexToBool(hex, opts) as FromHexReturnType<TTo>\n  return hexToBytes(hex, opts) as FromHexReturnType<TTo>\n}\n\nexport type HexToBigIntOpts = {\n  /** Whether or not the number of a signed representation. */\n  signed?: boolean\n  /** Size (in bytes) of the hex value. */\n  size?: number\n}\n\nexport type HexToBigIntErrorType = AssertSizeErrorType | ErrorType\n\n/**\n * Decodes a hex value into a bigint.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex.html#hextobigint\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns BigInt value.\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x1a4', { signed: true })\n * // 420n\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420n\n */\nexport function hexToBigInt(hex: Hex, opts: HexToBigIntOpts = {}): bigint {\n  const { signed } = opts\n\n  if (opts.size) assertSize(hex, { size: opts.size })\n\n  const value = BigInt(hex)\n  if (!signed) return value\n\n  const size = (hex.length - 2) / 2\n  const max = (1n << (BigInt(size) * 8n - 1n)) - 1n\n  if (value <= max) return value\n\n  return value - BigInt(`0x${'f'.padStart(size * 2, 'f')}`) - 1n\n}\n\nexport type HexToBoolOpts = {\n  /** Size (in bytes) of the hex value. */\n  size?: number\n}\n\nexport type HexToBoolErrorType =\n  | AssertSizeErrorType\n  | InvalidHexBooleanErrorType\n  | TrimErrorType\n  | ErrorType\n\n/**\n * Decodes a hex value into a boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex.html#hextobool\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Boolean value.\n *\n * @example\n * import { hexToBool } from 'viem'\n * const data = hexToBool('0x01')\n * // true\n *\n * @example\n * import { hexToBool } from 'viem'\n * const data = hexToBool('0x0000000000000000000000000000000000000000000000000000000000000001', { size: 32 })\n * // true\n */\nexport function hexToBool(hex_: Hex, opts: HexToBoolOpts = {}): boolean {\n  let hex = hex_\n  if (opts.size) {\n    assertSize(hex, { size: opts.size })\n    hex = trim(hex)\n  }\n  if (trim(hex) === '0x00') return false\n  if (trim(hex) === '0x01') return true\n  throw new InvalidHexBooleanError(hex)\n}\n\nexport type HexToNumberOpts = HexToBigIntOpts\n\nexport type HexToNumberErrorType = HexToBigIntErrorType | ErrorType\n\n/**\n * Decodes a hex string into a number.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex.html#hextonumber\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Number value.\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToNumber('0x1a4')\n * // 420\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420\n */\nexport function hexToNumber(hex: Hex, opts: HexToNumberOpts = {}): number {\n  return Number(hexToBigInt(hex, opts))\n}\n\nexport type HexToStringOpts = {\n  /** Size (in bytes) of the hex value. */\n  size?: number\n}\n\nexport type HexToStringErrorType =\n  | AssertSizeErrorType\n  | HexToBytesErrorType\n  | TrimErrorType\n  | ErrorType\n\n/**\n * Decodes a hex value into a UTF-8 string.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex.html#hextostring\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns String value.\n *\n * @example\n * import { hexToString } from 'viem'\n * const data = hexToString('0x48656c6c6f20576f726c6421')\n * // 'Hello world!'\n *\n * @example\n * import { hexToString } from 'viem'\n * const data = hexToString('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *  size: 32,\n * })\n * // 'Hello world'\n */\nexport function hexToString(hex: Hex, opts: HexToStringOpts = {}): string {\n  let bytes = hexToBytes(hex)\n  if (opts.size) {\n    assertSize(bytes, { size: opts.size })\n    bytes = trim(bytes, { dir: 'right' })\n  }\n  return new TextDecoder().decode(bytes)\n}\n"],"names":[],"mappings":";;;;;;;;AAQA,OAAO,EAAsB,IAAI,IAAI,KAAK,EAAE,MAAM,iBAAiB,CAAA;AARnE,OAAO,EACL,sBAAsB,EAEtB,iBAAiB,GAElB,MAAM,0BAA0B,CAAA;AAMjC,OAAO,EAA4B,UAAU,EAAE,MAAM,cAAc,CAAA;AAFnE,OAAO,EAAsB,IAAI,EAAE,MAAM,iBAAiB,CAAA;;;;;AASpD,SAAU,UAAU,CACxB,UAA2B,EAC3B,EAAE,IAAI,EAAoB;IAE1B,0OAAI,OAAA,AAAK,EAAC,UAAU,CAAC,GAAG,IAAI,EAC1B,MAAM,mOAAI,oBAAiB,CAAC;QAC1B,SAAS,EAAE,6OAAA,AAAK,EAAC,UAAU,CAAC;QAC5B,OAAO,EAAE,IAAI;KACd,CAAC,CAAA;AACN,CAAC;AA6DK,SAAU,OAAO,CAErB,GAAQ,EAAE,QAAgC;IAC1C,MAAM,IAAI,GAAG,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;QAAE,EAAE,EAAE,QAAQ;IAAA,CAAE,CAAC,CAAC,CAAC,QAAQ,CAAA;IACvE,MAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAA;IAElB,IAAI,EAAE,KAAK,QAAQ,EAAE,OAAO,WAAW,CAAC,GAAG,EAAE,IAAI,CAA2B,CAAA;IAC5E,IAAI,EAAE,KAAK,QAAQ,EAAE,OAAO,WAAW,CAAC,GAAG,EAAE,IAAI,CAA2B,CAAA;IAC5E,IAAI,EAAE,KAAK,QAAQ,EAAE,OAAO,WAAW,CAAC,GAAG,EAAE,IAAI,CAA2B,CAAA;IAC5E,IAAI,EAAE,KAAK,SAAS,EAAE,OAAO,SAAS,CAAC,GAAG,EAAE,IAAI,CAA2B,CAAA;IAC3E,OAAO,0PAAA,AAAU,EAAC,GAAG,EAAE,IAAI,CAA2B,CAAA;AACxD,CAAC;AA8BK,SAAU,WAAW,CAAC,GAAQ,EAAE,OAAwB,CAAA,CAAE;IAC9D,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAA;IAEvB,IAAI,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,GAAG,EAAE;QAAE,IAAI,EAAE,IAAI,CAAC,IAAI;IAAA,CAAE,CAAC,CAAA;IAEnD,MAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAA;IACzB,IAAI,CAAC,MAAM,EAAE,OAAO,KAAK,CAAA;IAEzB,MAAM,IAAI,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAA;IACjC,MAAM,GAAG,GAAG,CAAC,EAAE,IAAI,AAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,AAAC,CAAC,GAAG,EAAE,CAAA;IACjD,IAAI,KAAK,IAAI,GAAG,EAAE,OAAO,KAAK,CAAA;IAE9B,OAAO,KAAK,GAAG,MAAM,CAAC,CAAA,EAAA,EAAK,GAAG,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAA;AAChE,CAAC;AAgCK,SAAU,SAAS,CAAC,IAAS,EAAE,OAAsB,CAAA,CAAE;IAC3D,IAAI,GAAG,GAAG,IAAI,CAAA;IACd,IAAI,IAAI,CAAC,IAAI,EAAE;QACb,UAAU,CAAC,GAAG,EAAE;YAAE,IAAI,EAAE,IAAI,CAAC,IAAI;QAAA,CAAE,CAAC,CAAA;QACpC,GAAG,yOAAG,OAAA,AAAI,EAAC,GAAG,CAAC,CAAA;KAChB;IACD,IAAI,6OAAA,AAAI,EAAC,GAAG,CAAC,KAAK,MAAM,EAAE,OAAO,KAAK,CAAA;IACtC,KAAI,4OAAA,AAAI,EAAC,GAAG,CAAC,KAAK,MAAM,EAAE,OAAO,IAAI,CAAA;IACrC,MAAM,mOAAI,yBAAsB,CAAC,GAAG,CAAC,CAAA;AACvC,CAAC;AAyBK,SAAU,WAAW,CAAC,GAAQ,EAAE,OAAwB,CAAA,CAAE;IAC9D,OAAO,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAA;AACvC,CAAC;AAkCK,SAAU,WAAW,CAAC,GAAQ,EAAE,OAAwB,CAAA,CAAE;IAC9D,IAAI,KAAK,gPAAG,aAAA,AAAU,EAAC,GAAG,CAAC,CAAA;IAC3B,IAAI,IAAI,CAAC,IAAI,EAAE;QACb,UAAU,CAAC,KAAK,EAAE;YAAE,IAAI,EAAE,IAAI,CAAC,IAAI;QAAA,CAAE,CAAC,CAAA;QACtC,KAAK,yOAAG,OAAA,AAAI,EAAC,KAAK,EAAE;YAAE,GAAG,EAAE,OAAO;QAAA,CAAE,CAAC,CAAA;KACtC;IACD,OAAO,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;AACxC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1284, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1290, "column": 0}, "map": {"version":3,"file":"toHex.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/encoding/toHex.ts"],"sourcesContent":["import {\n  IntegerOutOfRangeError,\n  type IntegerOutOfRangeErrorType,\n} from '../../errors/encoding.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type PadErrorType, pad } from '../data/pad.js'\n\nimport { type AssertSizeErrorType, assertSize } from './fromHex.js'\n\nconst hexes = /*#__PURE__*/ Array.from({ length: 256 }, (_v, i) =>\n  i.toString(16).padStart(2, '0'),\n)\n\nexport type ToHexParameters = {\n  /** The size (in bytes) of the output hex value. */\n  size?: number\n}\n\nexport type ToHexErrorType =\n  | BoolToHexErrorType\n  | BytesToHexErrorType\n  | NumberToHexErrorType\n  | StringToHexErrorType\n  | ErrorType\n\n/**\n * Encodes a string, number, bigint, or ByteArray into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex.html\n * - Example: https://viem.sh/docs/utilities/toHex.html#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world')\n * // '0x48656c6c6f20776f726c6421'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex(420)\n * // '0x1a4'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world', { size: 32 })\n * // '0x48656c6c6f20776f726c64210000000000000000000000000000000000000000'\n */\nexport function toHex(\n  value: string | number | bigint | boolean | ByteArray,\n  opts: ToHexParameters = {},\n): Hex {\n  if (typeof value === 'number' || typeof value === 'bigint')\n    return numberToHex(value, opts)\n  if (typeof value === 'string') {\n    return stringToHex(value, opts)\n  }\n  if (typeof value === 'boolean') return boolToHex(value, opts)\n  return bytesToHex(value, opts)\n}\n\nexport type BoolToHexOpts = {\n  /** The size (in bytes) of the output hex value. */\n  size?: number\n}\n\nexport type BoolToHexErrorType = AssertSizeErrorType | PadErrorType | ErrorType\n\n/**\n * Encodes a boolean into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex.html#booltohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true)\n * // '0x1'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(false)\n * // '0x0'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true, { size: 32 })\n * // '0x0000000000000000000000000000000000000000000000000000000000000001'\n */\nexport function boolToHex(value: boolean, opts: BoolToHexOpts = {}): Hex {\n  const hex: Hex = `0x${Number(value)}`\n  if (typeof opts.size === 'number') {\n    assertSize(hex, { size: opts.size })\n    return pad(hex, { size: opts.size })\n  }\n  return hex\n}\n\nexport type BytesToHexOpts = {\n  /** The size (in bytes) of the output hex value. */\n  size?: number\n}\n\nexport type BytesToHexErrorType = AssertSizeErrorType | PadErrorType | ErrorType\n\n/**\n * Encodes a bytes array into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex.html#bytestohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]), { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nexport function bytesToHex(value: ByteArray, opts: BytesToHexOpts = {}): Hex {\n  let string = ''\n  for (let i = 0; i < value.length; i++) {\n    string += hexes[value[i]]\n  }\n  const hex = `0x${string}` as const\n\n  if (typeof opts.size === 'number') {\n    assertSize(hex, { size: opts.size })\n    return pad(hex, { dir: 'right', size: opts.size })\n  }\n  return hex\n}\n\nexport type NumberToHexOpts =\n  | {\n      /** Whether or not the number of a signed representation. */\n      signed?: boolean\n      /** The size (in bytes) of the output hex value. */\n      size: number\n    }\n  | {\n      signed?: never\n      /** The size (in bytes) of the output hex value. */\n      size?: number\n    }\n\nexport type NumberToHexErrorType =\n  | IntegerOutOfRangeErrorType\n  | PadErrorType\n  | ErrorType\n\n/**\n * Encodes a number or bigint into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex.html#numbertohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420)\n * // '0x1a4'\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420, { size: 32 })\n * // '0x00000000000000000000000000000000000000000000000000000000000001a4'\n */\nexport function numberToHex(\n  value_: number | bigint,\n  opts: NumberToHexOpts = {},\n): Hex {\n  const { signed, size } = opts\n\n  const value = BigInt(value_)\n\n  let maxValue\n  if (size) {\n    if (signed) maxValue = (1n << (BigInt(size) * 8n - 1n)) - 1n\n    else maxValue = 2n ** (BigInt(size) * 8n) - 1n\n  } else if (typeof value_ === 'number') {\n    maxValue = BigInt(Number.MAX_SAFE_INTEGER)\n  }\n\n  const minValue = typeof maxValue === 'bigint' && signed ? -maxValue - 1n : 0\n\n  if ((maxValue && value > maxValue) || value < minValue) {\n    const suffix = typeof value_ === 'bigint' ? 'n' : ''\n    throw new IntegerOutOfRangeError({\n      max: maxValue ? `${maxValue}${suffix}` : undefined,\n      min: `${minValue}${suffix}`,\n      signed,\n      size,\n      value: `${value_}${suffix}`,\n    })\n  }\n\n  const hex = `0x${(signed && value < 0\n    ? (1n << BigInt(size * 8)) + BigInt(value)\n    : value\n  ).toString(16)}` as Hex\n  if (size) return pad(hex, { size }) as Hex\n  return hex\n}\n\nexport type StringToHexOpts = {\n  /** The size (in bytes) of the output hex value. */\n  size?: number\n}\n\nexport type StringToHexErrorType = BytesToHexErrorType | ErrorType\n\nconst encoder = /*#__PURE__*/ new TextEncoder()\n\n/**\n * Encodes a UTF-8 string into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex.html#stringtohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!')\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!', { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nexport function stringToHex(value_: string, opts: StringToHexOpts = {}): Hex {\n  const value = encoder.encode(value_)\n  return bytesToHex(value, opts)\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1375, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1381, "column": 0}, "map": {"version":3,"file":"formatter.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/formatters/formatter.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { Assign, Prettify } from '../../types/utils.js'\n\nexport type DefineFormatterErrorType = ErrorType\n\nexport function defineFormatter<TType extends string, TParameters, TReturnType>(\n  type: TType,\n  format: (_: TParameters) => TReturnType,\n) {\n  return <\n    TOverrideParameters,\n    TOverrideReturnType,\n    TExclude extends (keyof TParameters | keyof TOverrideParameters)[] = [],\n  >({\n    exclude,\n    format: overrides,\n  }: {\n    exclude?: TExclude\n    format: (_: TOverrideParameters) => TOverrideReturnType\n  }) => {\n    return {\n      exclude,\n      format: (args: Assign<TParameters, TOverrideParameters>) => {\n        const formatted = format(args as any)\n        if (exclude) {\n          for (const key of exclude) {\n            delete (formatted as any)[key]\n          }\n        }\n        return {\n          ...formatted,\n          ...overrides(args),\n        } as Prettify<Assign<TReturnType, TOverrideReturnType>> & {\n          [_key in TExclude[number]]: never\n        }\n      },\n      type,\n    }\n  }\n}\n"],"names":[],"mappings":";;;AAKM,SAAU,eAAe,CAC7B,IAAW,EACX,MAAuC;IAEvC,OAAO,CAIL,EACA,OAAO,EACP,MAAM,EAAE,SAAS,EAIlB,EAAE,EAAE;QACH,OAAO;YACL,OAAO;YACP,MAAM,EAAE,CAAC,IAA8C,EAAE,EAAE;gBACzD,MAAM,SAAS,GAAG,MAAM,CAAC,IAAW,CAAC,CAAA;gBACrC,IAAI,OAAO,EAAE;oBACX,KAAK,MAAM,GAAG,IAAI,OAAO,CAAE;wBACzB,OAAQ,SAAiB,CAAC,GAAG,CAAC,CAAA;qBAC/B;iBACF;gBACD,OAAO;oBACL,GAAG,SAAS;oBACZ,GAAG,SAAS,CAAC,IAAI,CAAC;iBAGnB,CAAA;YACH,CAAC;YACD,IAAI;SACL,CAAA;IACH,CAAC,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1404, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1410, "column": 0}, "map": {"version":3,"file":"transactionRequest.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/formatters/transactionRequest.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type {\n  Chain,\n  ExtractChainFormatterParameters,\n} from '../../types/chain.js'\nimport type { RpcTransactionRequest } from '../../types/rpc.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport { numberToHex } from '../encoding/toHex.js'\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\n\nexport type FormattedTransactionRequest<\n  TChain extends Chain | undefined = Chain | undefined,\n> = ExtractChainFormatterParameters<\n  TChain,\n  'transactionRequest',\n  TransactionRequest\n>\n\nexport const rpcTransactionType = {\n  legacy: '0x0',\n  eip2930: '0x1',\n  eip1559: '0x2',\n} as const\n\nexport type FormatTransactionRequestErrorType = ErrorType\n\nexport function formatTransactionRequest(\n  transactionRequest: Partial<TransactionRequest>,\n) {\n  return {\n    ...transactionRequest,\n    gas:\n      typeof transactionRequest.gas !== 'undefined'\n        ? numberToHex(transactionRequest.gas)\n        : undefined,\n    gasPrice:\n      typeof transactionRequest.gasPrice !== 'undefined'\n        ? numberToHex(transactionRequest.gasPrice)\n        : undefined,\n    maxFeePerGas:\n      typeof transactionRequest.maxFeePerGas !== 'undefined'\n        ? numberToHex(transactionRequest.maxFeePerGas)\n        : undefined,\n    maxPriorityFeePerGas:\n      typeof transactionRequest.maxPriorityFeePerGas !== 'undefined'\n        ? numberToHex(transactionRequest.maxPriorityFeePerGas)\n        : undefined,\n    nonce:\n      typeof transactionRequest.nonce !== 'undefined'\n        ? numberToHex(transactionRequest.nonce)\n        : undefined,\n    type:\n      typeof transactionRequest.type !== 'undefined'\n        ? rpcTransactionType[transactionRequest.type]\n        : undefined,\n    value:\n      typeof transactionRequest.value !== 'undefined'\n        ? numberToHex(transactionRequest.value)\n        : undefined,\n  } as RpcTransactionRequest\n}\n\nexport type DefineTransactionRequestErrorType =\n  | DefineFormatterErrorType\n  | ErrorType\n\nexport const defineTransactionRequest = /*#__PURE__*/ defineFormatter(\n  'transactionRequest',\n  formatTransactionRequest,\n)\n"],"names":[],"mappings":";;;;;AAQA,OAAO,EAAiC,eAAe,EAAE,MAAM,gBAAgB,CAAA;AAD/E,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAA;;;AAW3C,MAAM,kBAAkB,GAAG;IAChC,MAAM,EAAE,KAAK;IACb,OAAO,EAAE,KAAK;IACd,OAAO,EAAE,KAAK;CACN,CAAA;AAIJ,SAAU,wBAAwB,CACtC,kBAA+C;IAE/C,OAAO;QACL,GAAG,kBAAkB;QACrB,GAAG,EACD,OAAO,kBAAkB,CAAC,GAAG,KAAK,WAAW,8OACzC,cAAA,AAAW,EAAC,kBAAkB,CAAC,GAAG,CAAC,GACnC,SAAS;QACf,QAAQ,EACN,OAAO,kBAAkB,CAAC,QAAQ,KAAK,WAAW,IAC9C,wPAAA,AAAW,EAAC,kBAAkB,CAAC,QAAQ,CAAC,GACxC,SAAS;QACf,YAAY,EACV,OAAO,kBAAkB,CAAC,YAAY,KAAK,WAAW,GAClD,yPAAA,AAAW,EAAC,kBAAkB,CAAC,YAAY,CAAC,GAC5C,SAAS;QACf,oBAAoB,EAClB,OAAO,kBAAkB,CAAC,oBAAoB,KAAK,WAAW,8OAC1D,cAAA,AAAW,EAAC,kBAAkB,CAAC,oBAAoB,CAAC,GACpD,SAAS;QACf,KAAK,EACH,OAAO,kBAAkB,CAAC,KAAK,KAAK,WAAW,8OAC3C,cAAA,AAAW,EAAC,kBAAkB,CAAC,KAAK,CAAC,GACrC,SAAS;QACf,IAAI,EACF,OAAO,kBAAkB,CAAC,IAAI,KAAK,WAAW,GAC1C,kBAAkB,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAC3C,SAAS;QACf,KAAK,EACH,OAAO,kBAAkB,CAAC,KAAK,KAAK,WAAW,8OAC3C,cAAA,AAAW,EAAC,kBAAkB,CAAC,KAAK,CAAC,GACrC,SAAS;KACS,CAAA;AAC5B,CAAC;AAMM,MAAM,wBAAwB,GAAG,WAAA,EAAa,kPAAC,kBAAA,AAAe,EACnE,oBAAoB,EACpB,wBAAwB,CACzB,CAAA","ignoreList":[0]}},
    {"offset": {"line": 1437, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1443, "column": 0}, "map": {"version":3,"file":"extract.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/formatters/extract.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { ChainFormatter } from '../../types/chain.js'\n\nexport type ExtractErrorType = ErrorType\n\n/**\n * @description Picks out the keys from `value` that exist in the formatter..\n */\nexport function extract(\n  value_: Record<string, unknown>,\n  { format }: { format?: ChainFormatter['format'] },\n) {\n  if (!format) return {}\n\n  const value: Record<string, unknown> = {}\n  function extract_(formatted: Record<string, any>) {\n    const keys = Object.keys(formatted)\n    for (const key of keys) {\n      if (key in value_) value[key] = value_[key]\n      if (\n        formatted[key] &&\n        typeof formatted[key] === 'object' &&\n        !Array.isArray(formatted[key])\n      )\n        extract_(formatted[key])\n    }\n  }\n\n  const formatted = format(value_ || {})\n  extract_(formatted)\n\n  return value\n}\n"],"names":[],"mappings":"AAKA;;GAEG;;;AACG,SAAU,OAAO,CACrB,MAA+B,EAC/B,EAAE,MAAM,EAAyC;IAEjD,IAAI,CAAC,MAAM,EAAE,OAAO,CAAA,CAAE,CAAA;IAEtB,MAAM,KAAK,GAA4B,CAAA,CAAE,CAAA;IACzC,SAAS,QAAQ,CAAC,SAA8B;QAC9C,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;QACnC,KAAK,MAAM,GAAG,IAAI,IAAI,CAAE;YACtB,IAAI,GAAG,IAAI,MAAM,EAAE,KAAK,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAA;YAC3C,IACE,SAAS,CAAC,GAAG,CAAC,IACd,OAAO,SAAS,CAAC,GAAG,CAAC,KAAK,QAAQ,IAClC,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAE9B,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAA;SAC3B;IACH,CAAC;IAED,MAAM,SAAS,GAAG,MAAM,CAAC,MAAM,IAAI,CAAA,CAAE,CAAC,CAAA;IACtC,QAAQ,CAAC,SAAS,CAAC,CAAA;IAEnB,OAAO,KAAK,CAAA;AACd,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1462, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1468, "column": 0}, "map": {"version":3,"file":"chain.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/errors/chain.ts"],"sourcesContent":["import type { Chain } from '../types/chain.js'\n\nimport { BaseError } from './base.js'\n\nexport type ChainDoesNotSupportContractErrorType =\n  ChainDoesNotSupportContract & {\n    name: 'ChainDoesNotSupportContract'\n  }\nexport class ChainDoesNotSupportContract extends BaseError {\n  override name = 'ChainDoesNotSupportContract'\n  constructor({\n    blockNumber,\n    chain,\n    contract,\n  }: {\n    blockNumber?: bigint\n    chain: Chain\n    contract: { name: string; blockCreated?: number }\n  }) {\n    super(\n      `Chain \"${chain.name}\" does not support contract \"${contract.name}\".`,\n      {\n        metaMessages: [\n          'This could be due to any of the following:',\n          ...(blockNumber &&\n          contract.blockCreated &&\n          contract.blockCreated > blockNumber\n            ? [\n                `- The contract \"${contract.name}\" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`,\n              ]\n            : [\n                `- The chain does not have the contract \"${contract.name}\" configured.`,\n              ]),\n        ],\n      },\n    )\n  }\n}\n\nexport type ChainMismatchErrorType = ChainMismatchError & {\n  name: 'ChainMismatchError'\n}\nexport class ChainMismatchError extends BaseError {\n  override name = 'ChainMismatchError'\n\n  constructor({\n    chain,\n    currentChainId,\n  }: {\n    chain: Chain\n    currentChainId: number\n  }) {\n    super(\n      `The current chain of the wallet (id: ${currentChainId}) does not match the target chain for the transaction (id: ${chain.id} – ${chain.name}).`,\n      {\n        metaMessages: [\n          `Current Chain ID:  ${currentChainId}`,\n          `Expected Chain ID: ${chain.id} – ${chain.name}`,\n        ],\n      },\n    )\n  }\n}\n\nexport type ChainNotFoundErrorType = ChainNotFoundError & {\n  name: 'ChainNotFoundError'\n}\nexport class ChainNotFoundError extends BaseError {\n  override name = 'ChainNotFoundError'\n\n  constructor() {\n    super(\n      [\n        'No chain was provided to the request.',\n        'Please provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.',\n      ].join('\\n'),\n    )\n  }\n}\n\nexport type ClientChainNotConfiguredErrorType =\n  ClientChainNotConfiguredError & {\n    name: 'ClientChainNotConfiguredError'\n  }\nexport class ClientChainNotConfiguredError extends BaseError {\n  override name = 'ClientChainNotConfiguredError'\n\n  constructor() {\n    super('No chain was provided to the Client.')\n  }\n}\n\nexport type InvalidChainIdErrorType = InvalidChainIdError & {\n  name: 'InvalidChainIdError'\n}\nexport class InvalidChainIdError extends BaseError {\n  override name = 'InvalidChainIdError'\n\n  constructor({ chainId }: { chainId: number }) {\n    super(`Chain ID \"${chainId}\" is invalid.`)\n  }\n}\n"],"names":[],"mappings":";;;;;;;AAEA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;;AAM/B,MAAO,2BAA4B,oOAAQ,YAAS;IAExD,YAAY,EACV,WAAW,EACX,KAAK,EACL,QAAQ,EAKT,CAAA;QACC,KAAK,CACH,CAAA,OAAA,EAAU,KAAK,CAAC,IAAI,CAAA,6BAAA,EAAgC,QAAQ,CAAC,IAAI,CAAA,EAAA,CAAI,EACrE;YACE,YAAY,EAAE;gBACZ,4CAA4C;mBACxC,WAAW,IACf,QAAQ,CAAC,YAAY,IACrB,QAAQ,CAAC,YAAY,GAAG,WAAW,GAC/B;oBACE,CAAA,gBAAA,EAAmB,QAAQ,CAAC,IAAI,CAAA,+BAAA,EAAkC,QAAQ,CAAC,YAAY,CAAA,gBAAA,EAAmB,WAAW,CAAA,EAAA,CAAI;iBAC1H,GACD;oBACE,CAAA,wCAAA,EAA2C,QAAQ,CAAC,IAAI,CAAA,aAAA,CAAe;iBACxE,CAAC;aACP;SACF,CACF,CAAA;QA1BM,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,6BAA6B;WAAA;IA2B7C,CAAC;CACF;AAKK,MAAO,kBAAmB,oOAAQ,YAAS;IAG/C,YAAY,EACV,KAAK,EACL,cAAc,EAIf,CAAA;QACC,KAAK,CACH,CAAA,qCAAA,EAAwC,cAAc,CAAA,2DAAA,EAA8D,KAAK,CAAC,EAAE,CAAA,GAAA,EAAM,KAAK,CAAC,IAAI,CAAA,EAAA,CAAI,EAChJ;YACE,YAAY,EAAE;gBACZ,CAAA,mBAAA,EAAsB,cAAc,EAAE;gBACtC,CAAA,mBAAA,EAAsB,KAAK,CAAC,EAAE,CAAA,GAAA,EAAM,KAAK,CAAC,IAAI,EAAE;aACjD;SACF,CACF,CAAA;QAjBM,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,oBAAoB;WAAA;IAkBpC,CAAC;CACF;AAKK,MAAO,kBAAmB,oOAAQ,YAAS;IAG/C,aAAA;QACE,KAAK,CACH;YACE,uCAAuC;YACvC,4GAA4G;SAC7G,CAAC,IAAI,CAAC,IAAI,CAAC,CACb,CAAA;QARM,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,oBAAoB;WAAA;IASpC,CAAC;CACF;AAMK,MAAO,6BAA8B,oOAAQ,YAAS;IAG1D,aAAA;QACE,KAAK,CAAC,sCAAsC,CAAC,CAAA;QAHtC,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,+BAA+B;WAAA;IAI/C,CAAC;CACF;AAKK,MAAO,mBAAoB,oOAAQ,YAAS;IAGhD,YAAY,EAAE,OAAO,EAAuB,CAAA;QAC1C,KAAK,CAAC,CAAA,UAAA,EAAa,OAAO,CAAA,aAAA,CAAe,CAAC,CAAA;QAHnC,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,qBAAqB;WAAA;IAIrC,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 1549, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1555, "column": 0}, "map": {"version":3,"file":"stringify.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/stringify.ts"],"sourcesContent":["import type { ErrorType } from '../errors/utils.js'\n\nexport type StringifyErrorType = ErrorType\n\nexport const stringify: typeof JSON.stringify = (value, replacer, space) =>\n  JSON.stringify(\n    value,\n    (key, value_) => {\n      const value = typeof value_ === 'bigint' ? value_.toString() : value_\n      return typeof replacer === 'function' ? replacer(key, value) : value\n    },\n    space,\n  )\n"],"names":[],"mappings":";;;AAIO,MAAM,SAAS,GAA0B,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,CACvE,CADyE,GACrE,CAAC,SAAS,CACZ,KAAK,EACL,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE;QACd,MAAM,KAAK,GAAG,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,MAAM,CAAA;QACrE,OAAO,OAAO,QAAQ,KAAK,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAA;IACtE,CAAC,EACD,KAAK,CACN,CAAA","ignoreList":[0]}},
    {"offset": {"line": 1562, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1568, "column": 0}, "map": {"version":3,"file":"request.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/errors/request.ts"],"sourcesContent":["import { stringify } from '../utils/stringify.js'\n\nimport { BaseError } from './base.js'\nimport { getUrl } from './utils.js'\n\nexport type HttpRequestErrorType = HttpRequestError & {\n  name: 'HttpRequestError'\n}\nexport class HttpRequestError extends BaseError {\n  override name = 'HttpRequestError'\n\n  body?: { [x: string]: unknown } | { [y: string]: unknown }[]\n  headers?: Headers\n  status?: number\n  url: string\n\n  constructor({\n    body,\n    details,\n    headers,\n    status,\n    url,\n  }: {\n    body?: { [x: string]: unknown } | { [y: string]: unknown }[]\n    details?: string\n    headers?: Headers\n    status?: number\n    url: string\n  }) {\n    super('HTTP request failed.', {\n      details,\n      metaMessages: [\n        status && `Status: ${status}`,\n        `URL: ${getUrl(url)}`,\n        body && `Request body: ${stringify(body)}`,\n      ].filter(Boolean) as string[],\n    })\n    this.body = body\n    this.headers = headers\n    this.status = status\n    this.url = url\n  }\n}\n\nexport type WebSocketRequestErrorType = WebSocketRequestError & {\n  name: 'WebSocketRequestError'\n}\nexport class WebSocketRequestError extends BaseError {\n  override name = 'WebSocketRequestError'\n\n  constructor({\n    body,\n    details,\n    url,\n  }: {\n    body: { [key: string]: unknown }\n    details: string\n    url: string\n  }) {\n    super('WebSocket request failed.', {\n      details,\n      metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`],\n    })\n  }\n}\n\nexport type RpcRequestErrorType = RpcRequestError & {\n  name: 'RpcRequestError'\n}\nexport class RpcRequestError extends BaseError {\n  override name = 'RpcRequestError'\n\n  code: number\n\n  constructor({\n    body,\n    error,\n    url,\n  }: {\n    body: { [x: string]: unknown } | { [y: string]: unknown }[]\n    error: { code: number; message: string }\n    url: string\n  }) {\n    super('RPC Request failed.', {\n      cause: error as any,\n      details: error.message,\n      metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`],\n    })\n    this.code = error.code\n  }\n}\n\nexport type TimeoutErrorType = TimeoutError & {\n  name: 'TimeoutError'\n}\nexport class TimeoutError extends BaseError {\n  override name = 'TimeoutError'\n\n  constructor({\n    body,\n    url,\n  }: {\n    body: { [x: string]: unknown } | { [y: string]: unknown }[]\n    url: string\n  }) {\n    super('The request took too long to respond.', {\n      details: 'The request timed out.',\n      metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`],\n    })\n  }\n}\n"],"names":[],"mappings":";;;;;;AAGA,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AAHnC,OAAO,EAAE,SAAS,EAAE,MAAM,uBAAuB,CAAA;AAEjD,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;;;;AAM/B,MAAO,gBAAiB,oOAAQ,YAAS;IAQ7C,YAAY,EACV,IAAI,EACJ,OAAO,EACP,OAAO,EACP,MAAM,EACN,GAAG,EAOJ,CAAA;QACC,KAAK,CAAC,sBAAsB,EAAE;YAC5B,OAAO;YACP,YAAY,EAAE;gBACZ,MAAM,IAAI,CAAA,QAAA,EAAW,MAAM,EAAE;gBAC7B,CAAA,KAAA,EAAQ,yOAAM,AAAN,EAAO,GAAG,CAAC,EAAE;gBACrB,IAAI,IAAI,CAAA,cAAA,qOAAiB,YAAA,AAAS,EAAC,IAAI,CAAC,EAAE;aAC3C,CAAC,MAAM,CAAC,OAAO,CAAa;SAC9B,CAAC,CAAA;QA3BK,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,kBAAkB;WAAA;QAElC,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;;WAA4D;QAC5D,OAAA,cAAA,CAAA,IAAA,EAAA,WAAA;;;;;WAAiB;QACjB,OAAA,cAAA,CAAA,IAAA,EAAA,UAAA;;;;;WAAe;QACf,OAAA,cAAA,CAAA,IAAA,EAAA,OAAA;;;;;WAAW;QAuBT,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAChB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAA;QACtB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;QACpB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAA;IAChB,CAAC;CACF;AAKK,MAAO,qBAAsB,oOAAQ,YAAS;IAGlD,YAAY,EACV,IAAI,EACJ,OAAO,EACP,GAAG,EAKJ,CAAA;QACC,KAAK,CAAC,2BAA2B,EAAE;YACjC,OAAO;YACP,YAAY,EAAE;gBAAC,CAAA,KAAA,GAAQ,wOAAA,AAAM,EAAC,GAAG,CAAC,EAAE;gBAAE,CAAA,cAAA,qOAAiB,YAAA,AAAS,EAAC,IAAI,CAAC,EAAE;aAAC;SAC1E,CAAC,CAAA;QAdK,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,uBAAuB;WAAA;IAevC,CAAC;CACF;AAKK,MAAO,eAAgB,oOAAQ,YAAS;IAK5C,YAAY,EACV,IAAI,EACJ,KAAK,EACL,GAAG,EAKJ,CAAA;QACC,KAAK,CAAC,qBAAqB,EAAE;YAC3B,KAAK,EAAE,KAAY;YACnB,OAAO,EAAE,KAAK,CAAC,OAAO;YACtB,YAAY,EAAE;gBAAC,CAAA,KAAA,kOAAQ,SAAA,AAAM,EAAC,GAAG,CAAC,EAAE;gBAAE,CAAA,cAAA,qOAAiB,YAAA,AAAS,EAAC,IAAI,CAAC,EAAE;aAAC;SAC1E,CAAC,CAAA;QAjBK,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,iBAAiB;WAAA;QAEjC,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;;WAAY;QAgBV,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAA;IACxB,CAAC;CACF;AAKK,MAAO,YAAa,oOAAQ,YAAS;IAGzC,YAAY,EACV,IAAI,EACJ,GAAG,EAIJ,CAAA;QACC,KAAK,CAAC,uCAAuC,EAAE;YAC7C,OAAO,EAAE,wBAAwB;YACjC,YAAY,EAAE;gBAAC,CAAA,KAAA,kOAAQ,SAAA,AAAM,EAAC,GAAG,CAAC,EAAE;gBAAE,CAAA,cAAA,qOAAiB,YAAA,AAAS,EAAC,IAAI,CAAC,EAAE;aAAC;SAC1E,CAAC,CAAA;QAZK,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,cAAc;WAAA;IAa9B,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 1685, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1691, "column": 0}, "map": {"version":3,"file":"rpc.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/errors/rpc.ts"],"sourcesContent":["import type { Prettify } from '../types/utils.js'\nimport { BaseError } from './base.js'\nimport { RpcRequestError } from './request.js'\n\nconst unknownErrorCode = -1\n\nexport type RpcErrorCode =\n  | -1\n  | -32700 // Parse error\n  | -32600 // Invalid request\n  | -32601 // Method not found\n  | -32602 // Invalid params\n  | -32603 // Internal error\n  | -32000 // Invalid input\n  | -32001 // Resource not found\n  | -32002 // Resource unavailable\n  | -32003 // Transaction rejected\n  | -32004 // Method not supported\n  | -32005 // Limit exceeded\n  | -32006 // JSON-RPC version not supported\n  | -32042 // Method not found\n\ntype RpcErrorOptions<TCode extends number = RpcErrorCode> = {\n  code?: TCode | (number & {})\n  docsPath?: string\n  metaMessages?: string[]\n  shortMessage: string\n}\n\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors per EIP-1474.\n *\n * - EIP https://eips.ethereum.org/EIPS/eip-1474\n */\nexport type RpcErrorType = RpcError & { name: 'RpcError' }\nexport class RpcError<TCode extends number = RpcErrorCode> extends BaseError {\n  override name = 'RpcError'\n\n  code: TCode | (number & {})\n\n  constructor(\n    cause: Error,\n    { code, docsPath, metaMessages, shortMessage }: RpcErrorOptions<TCode>,\n  ) {\n    super(shortMessage, {\n      cause,\n      docsPath,\n      metaMessages:\n        metaMessages || (cause as { metaMessages?: string[] })?.metaMessages,\n    })\n    this.name = cause.name\n    this.code = (\n      cause instanceof RpcRequestError ? cause.code : code ?? unknownErrorCode\n    ) as TCode\n  }\n}\n\nexport type ProviderRpcErrorCode =\n  | 4001 // User Rejected Request\n  | 4100 // Unauthorized\n  | 4200 // Unsupported Method\n  | 4900 // Disconnected\n  | 4901 // Chain Disconnected\n  | 4902 // Chain Not Recognized\n\n/**\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n *\n * - EIP https://eips.ethereum.org/EIPS/eip-1193\n */\nexport type ProviderRpcErrorType = ProviderRpcError & {\n  name: 'ProviderRpcError'\n}\nexport class ProviderRpcError<\n  T = undefined,\n> extends RpcError<ProviderRpcErrorCode> {\n  override name = 'ProviderRpcError'\n\n  data?: T\n\n  constructor(\n    cause: Error,\n    options: Prettify<\n      RpcErrorOptions<ProviderRpcErrorCode> & {\n        data?: T\n      }\n    >,\n  ) {\n    super(cause, options)\n\n    this.data = options.data\n  }\n}\n\n/**\n * Subclass for a \"Parse error\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type ParseRpcErrorType = ParseRpcError & {\n  code: -32700\n  name: 'ParseRpcError'\n}\nexport class ParseRpcError extends RpcError {\n  override name = 'ParseRpcError'\n  static code = -32700 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ParseRpcError.code,\n      shortMessage:\n        'Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Invalid request\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type InvalidRequestRpcErrorType = InvalidRequestRpcError & {\n  code: -32600\n  name: 'InvalidRequestRpcError'\n}\nexport class InvalidRequestRpcError extends RpcError {\n  override name = 'InvalidRequestRpcError'\n  static code = -32600 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: InvalidRequestRpcError.code,\n      shortMessage: 'JSON is not a valid request object.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Method not found\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type MethodNotFoundRpcErrorType = MethodNotFoundRpcError & {\n  code: -32601\n  name: 'MethodNotFoundRpcError'\n}\nexport class MethodNotFoundRpcError extends RpcError {\n  override name = 'MethodNotFoundRpcError'\n  static code = -32601 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: MethodNotFoundRpcError.code,\n      shortMessage: 'The method does not exist / is not available.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Invalid params\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type InvalidParamsRpcErrorType = InvalidParamsRpcError & {\n  code: -32602\n  name: 'InvalidParamsRpcError'\n}\nexport class InvalidParamsRpcError extends RpcError {\n  override name = 'InvalidParamsRpcError'\n  static code = -32602 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: InvalidParamsRpcError.code,\n      shortMessage: [\n        'Invalid parameters were provided to the RPC method.',\n        'Double check you have provided the correct parameters.',\n      ].join('\\n'),\n    })\n  }\n}\n\n/**\n * Subclass for an \"Internal error\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type InternalRpcErrorType = InternalRpcError & {\n  code: -32603\n  name: 'InternalRpcError'\n}\nexport class InternalRpcError extends RpcError {\n  override name = 'InternalRpcError'\n  static code = -32603 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: InternalRpcError.code,\n      shortMessage: 'An internal error was received.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Invalid input\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type InvalidInputRpcErrorType = InvalidInputRpcError & {\n  code: -32000\n  name: 'InvalidInputRpcError'\n}\nexport class InvalidInputRpcError extends RpcError {\n  override name = 'InvalidInputRpcError'\n  static code = -32000 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: InvalidInputRpcError.code,\n      shortMessage: [\n        'Missing or invalid parameters.',\n        'Double check you have provided the correct parameters.',\n      ].join('\\n'),\n    })\n  }\n}\n\n/**\n * Subclass for a \"Resource not found\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type ResourceNotFoundRpcErrorType = ResourceNotFoundRpcError & {\n  code: -32001\n  name: 'ResourceNotFoundRpcError'\n}\nexport class ResourceNotFoundRpcError extends RpcError {\n  override name = 'ResourceNotFoundRpcError'\n  static code = -32001 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ResourceNotFoundRpcError.code,\n      shortMessage: 'Requested resource not found.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Resource unavailable\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type ResourceUnavailableRpcErrorType = ResourceUnavailableRpcError & {\n  code: -32002\n  name: 'ResourceUnavailableRpcError'\n}\nexport class ResourceUnavailableRpcError extends RpcError {\n  override name = 'ResourceUnavailableRpcError'\n  static code = -32002 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ResourceUnavailableRpcError.code,\n      shortMessage: 'Requested resource not available.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Transaction rejected\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type TransactionRejectedRpcErrorType = TransactionRejectedRpcError & {\n  code: -32003\n  name: 'TransactionRejectedRpcError'\n}\nexport class TransactionRejectedRpcError extends RpcError {\n  override name = 'TransactionRejectedRpcError'\n  static code = -32003 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: TransactionRejectedRpcError.code,\n      shortMessage: 'Transaction creation failed.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Method not supported\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type MethodNotSupportedRpcErrorType = MethodNotSupportedRpcError & {\n  code: -32004\n  name: 'MethodNotSupportedRpcError'\n}\nexport class MethodNotSupportedRpcError extends RpcError {\n  override name = 'MethodNotSupportedRpcError'\n  static code = -32004 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: MethodNotSupportedRpcError.code,\n      shortMessage: 'Method is not implemented.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"Limit exceeded\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type LimitExceededRpcErrorType = LimitExceededRpcError & {\n  code: -32005\n  name: 'LimitExceededRpcError'\n}\nexport class LimitExceededRpcError extends RpcError {\n  override name = 'LimitExceededRpcError'\n  static code = -32005 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: LimitExceededRpcError.code,\n      shortMessage: 'Request exceeds defined limit.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"JSON-RPC version not supported\" EIP-1474 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1474#error-codes\n */\nexport type JsonRpcVersionUnsupportedErrorType =\n  JsonRpcVersionUnsupportedError & {\n    code: -32006\n    name: 'JsonRpcVersionUnsupportedError'\n  }\nexport class JsonRpcVersionUnsupportedError extends RpcError {\n  override name = 'JsonRpcVersionUnsupportedError'\n  static code = -32006 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: JsonRpcVersionUnsupportedError.code,\n      shortMessage: 'Version of JSON-RPC protocol is not supported.',\n    })\n  }\n}\n\n/**\n * Subclass for a \"User Rejected Request\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type UserRejectedRequestErrorType = UserRejectedRequestError & {\n  code: 4001\n  name: 'UserRejectedRequestError'\n}\nexport class UserRejectedRequestError extends ProviderRpcError {\n  override name = 'UserRejectedRequestError'\n  static code = 4001 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: UserRejectedRequestError.code,\n      shortMessage: 'User rejected the request.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Unauthorized\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type UnauthorizedProviderErrorType = UnauthorizedProviderError & {\n  code: 4100\n  name: 'UnauthorizedProviderError'\n}\nexport class UnauthorizedProviderError extends ProviderRpcError {\n  override name = 'UnauthorizedProviderError'\n  static code = 4100 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: UnauthorizedProviderError.code,\n      shortMessage:\n        'The requested method and/or account has not been authorized by the user.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Unsupported Method\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type UnsupportedProviderMethodErrorType =\n  UnsupportedProviderMethodError & {\n    code: 4200\n    name: 'UnsupportedProviderMethodError'\n  }\nexport class UnsupportedProviderMethodError extends ProviderRpcError {\n  override name = 'UnsupportedProviderMethodError'\n  static code = 4200 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: UnsupportedProviderMethodError.code,\n      shortMessage: 'The Provider does not support the requested method.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Disconnected\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type ProviderDisconnectedErrorType = ProviderDisconnectedError & {\n  code: 4900\n  name: 'ProviderDisconnectedError'\n}\nexport class ProviderDisconnectedError extends ProviderRpcError {\n  override name = 'ProviderDisconnectedError'\n  static code = 4900 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ProviderDisconnectedError.code,\n      shortMessage: 'The Provider is disconnected from all chains.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Chain Disconnected\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type ChainDisconnectedErrorType = ChainDisconnectedError & {\n  code: 4901\n  name: 'ChainDisconnectedError'\n}\nexport class ChainDisconnectedError extends ProviderRpcError {\n  override name = 'ChainDisconnectedError'\n  static code = 4901 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: ChainDisconnectedError.code,\n      shortMessage: 'The Provider is not connected to the requested chain.',\n    })\n  }\n}\n\n/**\n * Subclass for an \"Switch Chain\" EIP-1193 error.\n *\n * EIP https://eips.ethereum.org/EIPS/eip-1193#provider-errors\n */\nexport type SwitchChainErrorType = SwitchChainError & {\n  code: 4902\n  name: 'SwitchChainError'\n}\nexport class SwitchChainError extends ProviderRpcError {\n  override name = 'SwitchChainError'\n  static code = 4902 as const\n\n  constructor(cause: Error) {\n    super(cause, {\n      code: SwitchChainError.code,\n      shortMessage: 'An error occurred when attempting to switch chain.',\n    })\n  }\n}\n\n/**\n * Subclass for an unknown RPC error.\n */\nexport type UnknownRpcErrorType = UnknownRpcError & {\n  name: 'UnknownRpcError'\n}\nexport class UnknownRpcError extends RpcError {\n  override name = 'UnknownRpcError'\n\n  constructor(cause: Error) {\n    super(cause, {\n      shortMessage: 'An unknown RPC error occurred.',\n    })\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2157, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2163, "column": 0}, "map": {"version":3,"file":"getNodeError.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/errors/getNodeError.ts"],"sourcesContent":["import type { SendTransactionParameters } from '../../actions/wallet/sendTransaction.js'\nimport { BaseError } from '../../errors/base.js'\nimport {\n  ExecutionRevertedError,\n  type ExecutionRevertedErrorType,\n  FeeCapTooHighError,\n  type FeeCapTooHighErrorType,\n  FeeCapTooLowError,\n  type FeeCapTooLowErrorType,\n  InsufficientFundsError,\n  type InsufficientFundsErrorType,\n  IntrinsicGasTooHighError,\n  type IntrinsicGasTooHighErrorType,\n  IntrinsicGasTooLowError,\n  type IntrinsicGasTooLowErrorType,\n  NonceMaxValueError,\n  type NonceMaxValueErrorType,\n  NonceTooHighError,\n  type NonceTooHighErrorType,\n  NonceTooLowError,\n  type NonceTooLowErrorType,\n  TipAboveFeeCapError,\n  type TipAboveFeeCapErrorType,\n  TransactionTypeNotSupportedError,\n  type TransactionTypeNotSupportedErrorType,\n  UnknownNodeError,\n  type UnknownNodeErrorType,\n} from '../../errors/node.js'\nimport { RpcRequestError } from '../../errors/request.js'\nimport {\n  InvalidInputRpcError,\n  TransactionRejectedRpcError,\n} from '../../errors/rpc.js'\n\nexport function containsNodeError(err: BaseError) {\n  return (\n    err instanceof TransactionRejectedRpcError ||\n    err instanceof InvalidInputRpcError ||\n    (err instanceof RpcRequestError && err.code === ExecutionRevertedError.code)\n  )\n}\n\nexport type GetNodeErrorParameters = Partial<SendTransactionParameters<any>>\n\nexport type GetNodeErrorReturnType =\n  | ExecutionRevertedErrorType\n  | FeeCapTooHighErrorType\n  | FeeCapTooLowErrorType\n  | NonceTooHighErrorType\n  | NonceTooLowErrorType\n  | NonceMaxValueErrorType\n  | InsufficientFundsErrorType\n  | IntrinsicGasTooHighErrorType\n  | IntrinsicGasTooLowErrorType\n  | TransactionTypeNotSupportedErrorType\n  | TipAboveFeeCapErrorType\n  | UnknownNodeErrorType\n\nexport function getNodeError(\n  err: BaseError,\n  args: GetNodeErrorParameters,\n): GetNodeErrorReturnType {\n  const message = (err.details || '').toLowerCase()\n\n  const executionRevertedError = err.walk(\n    (e) => (e as { code: number }).code === ExecutionRevertedError.code,\n  )\n  if (executionRevertedError instanceof BaseError) {\n    return new ExecutionRevertedError({\n      cause: err,\n      message: executionRevertedError.details,\n    }) as any\n  }\n  if (ExecutionRevertedError.nodeMessage.test(message))\n    return new ExecutionRevertedError({\n      cause: err,\n      message: err.details,\n    }) as any\n  if (FeeCapTooHighError.nodeMessage.test(message))\n    return new FeeCapTooHighError({\n      cause: err,\n      maxFeePerGas: args?.maxFeePerGas,\n    }) as any\n  if (FeeCapTooLowError.nodeMessage.test(message))\n    return new FeeCapTooLowError({\n      cause: err,\n      maxFeePerGas: args?.maxFeePerGas,\n    }) as any\n  if (NonceTooHighError.nodeMessage.test(message))\n    return new NonceTooHighError({ cause: err, nonce: args?.nonce }) as any\n  if (NonceTooLowError.nodeMessage.test(message))\n    return new NonceTooLowError({ cause: err, nonce: args?.nonce }) as any\n  if (NonceMaxValueError.nodeMessage.test(message))\n    return new NonceMaxValueError({ cause: err, nonce: args?.nonce }) as any\n  if (InsufficientFundsError.nodeMessage.test(message))\n    return new InsufficientFundsError({ cause: err }) as any\n  if (IntrinsicGasTooHighError.nodeMessage.test(message))\n    return new IntrinsicGasTooHighError({ cause: err, gas: args?.gas }) as any\n  if (IntrinsicGasTooLowError.nodeMessage.test(message))\n    return new IntrinsicGasTooLowError({ cause: err, gas: args?.gas }) as any\n  if (TransactionTypeNotSupportedError.nodeMessage.test(message))\n    return new TransactionTypeNotSupportedError({ cause: err }) as any\n  if (TipAboveFeeCapError.nodeMessage.test(message))\n    return new TipAboveFeeCapError({\n      cause: err,\n      maxFeePerGas: args?.maxFeePerGas,\n      maxPriorityFeePerGas: args?.maxPriorityFeePerGas,\n    }) as any\n  return new UnknownNodeError({\n    cause: err,\n  }) as any\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2234, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2240, "column": 0}, "map": {"version":3,"file":"keccak256.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/hash/keccak256.ts"],"sourcesContent":["import { keccak_256 } from '@noble/hashes/sha3'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { type ToHexErrorType, toHex } from '../encoding/toHex.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type Keccak256Hash<TTo extends To> =\n  | (TTo extends 'bytes' ? ByteArray : never)\n  | (TTo extends 'hex' ? Hex : never)\n\nexport type Keccak256ErrorType =\n  | IsHexErrorType\n  | ToBytesErrorType\n  | ToHexErrorType\n  | ErrorType\n\nexport function keccak256<TTo extends To = 'hex'>(\n  value: Hex | ByteArray,\n  to_?: TTo,\n): Keccak256Hash<TTo> {\n  const to = to_ || 'hex'\n  const bytes = keccak_256(\n    isHex(value, { strict: false }) ? toBytes(value) : value,\n  )\n  if (to === 'bytes') return bytes as Keccak256Hash<TTo>\n  return toHex(bytes) as Keccak256Hash<TTo>\n}\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAA;AAI/C,OAAO,EAAuB,KAAK,EAAE,MAAM,kBAAkB,CAAA;AAC7D,OAAO,EAAyB,OAAO,EAAE,MAAM,wBAAwB,CAAA;AACvE,OAAO,EAAuB,KAAK,EAAE,MAAM,sBAAsB,CAAA;;;;;AAc3D,SAAU,SAAS,CACvB,KAAsB,EACtB,GAAS;IAET,MAAM,EAAE,GAAG,GAAG,IAAI,KAAK,CAAA;IACvB,MAAM,KAAK,sNAAG,aAAA,AAAU,yOACtB,QAAA,AAAK,EAAC,KAAK,EAAE;QAAE,MAAM,EAAE,KAAK;IAAA,CAAE,CAAC,CAAC,CAAC,8OAAC,UAAA,AAAO,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CACzD,CAAA;IACD,IAAI,EAAE,KAAK,OAAO,EAAE,OAAO,KAA2B,CAAA;IACtD,kPAAO,QAAA,AAAK,EAAC,KAAK,CAAuB,CAAA;AAC3C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2259, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2265, "column": 0}, "map": {"version":3,"file":"normalizeSignature.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/hash/normalizeSignature.ts"],"sourcesContent":["import { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\nexport type NormalizeSignatureParameters = string\nexport type NormalizeSignatureReturnType = string\nexport type NormalizeSignatureErrorType = ErrorType\n\nexport function normalizeSignature(\n  signature: NormalizeSignatureParameters,\n): NormalizeSignatureReturnType {\n  let active = true\n  let current = ''\n  let level = 0\n  let result = ''\n  let valid = false\n\n  for (let i = 0; i < signature.length; i++) {\n    const char = signature[i]\n\n    // If the character is a separator, we want to reactivate.\n    if (['(', ')', ','].includes(char)) active = true\n\n    // If the character is a \"level\" token, we want to increment/decrement.\n    if (char === '(') level++\n    if (char === ')') level--\n\n    // If we aren't active, we don't want to mutate the result.\n    if (!active) continue\n\n    // If level === 0, we are at the definition level.\n    if (level === 0) {\n      if (char === ' ' && ['event', 'function', ''].includes(result))\n        result = ''\n      else {\n        result += char\n\n        // If we are at the end of the definition, we must be finished.\n        if (char === ')') {\n          valid = true\n          break\n        }\n      }\n\n      continue\n    }\n\n    // Ignore spaces\n    if (char === ' ') {\n      // If the previous character is a separator, and the current section isn't empty, we want to deactivate.\n      if (signature[i - 1] !== ',' && current !== ',' && current !== ',(') {\n        current = ''\n        active = false\n      }\n      continue\n    }\n\n    result += char\n    current += char\n  }\n\n  if (!valid) throw new BaseError('Unable to normalize signature.')\n\n  return result\n}\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAA;;AAO1C,SAAU,kBAAkB,CAChC,SAAuC;IAEvC,IAAI,MAAM,GAAG,IAAI,CAAA;IACjB,IAAI,OAAO,GAAG,EAAE,CAAA;IAChB,IAAI,KAAK,GAAG,CAAC,CAAA;IACb,IAAI,MAAM,GAAG,EAAE,CAAA;IACf,IAAI,KAAK,GAAG,KAAK,CAAA;IAEjB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;QACzC,MAAM,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,CAAA;QAEzB,0DAA0D;QAC1D,IAAI;YAAC,GAAG;YAAE,GAAG;YAAE,GAAG;SAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,MAAM,GAAG,IAAI,CAAA;QAEjD,uEAAuE;QACvE,IAAI,IAAI,KAAK,GAAG,EAAE,KAAK,EAAE,CAAA;QACzB,IAAI,IAAI,KAAK,GAAG,EAAE,KAAK,EAAE,CAAA;QAEzB,2DAA2D;QAC3D,IAAI,CAAC,MAAM,EAAE,SAAQ;QAErB,kDAAkD;QAClD,IAAI,KAAK,KAAK,CAAC,EAAE;YACf,IAAI,IAAI,KAAK,GAAG,IAAI;gBAAC,OAAO;gBAAE,UAAU;gBAAE,EAAE;aAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,EAC5D,MAAM,GAAG,EAAE,CAAA;iBACR;gBACH,MAAM,IAAI,IAAI,CAAA;gBAEd,+DAA+D;gBAC/D,IAAI,IAAI,KAAK,GAAG,EAAE;oBAChB,KAAK,GAAG,IAAI,CAAA;oBACZ,MAAK;iBACN;aACF;YAED,SAAQ;SACT;QAED,gBAAgB;QAChB,IAAI,IAAI,KAAK,GAAG,EAAE;YAChB,wGAAwG;YACxG,IAAI,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,IAAI,OAAO,KAAK,GAAG,IAAI,OAAO,KAAK,IAAI,EAAE;gBACnE,OAAO,GAAG,EAAE,CAAA;gBACZ,MAAM,GAAG,KAAK,CAAA;aACf;YACD,SAAQ;SACT;QAED,MAAM,IAAI,IAAI,CAAA;QACd,OAAO,IAAI,IAAI,CAAA;KAChB;IAED,IAAI,CAAC,KAAK,EAAE,MAAM,+NAAI,YAAS,CAAC,gCAAgC,CAAC,CAAA;IAEjE,OAAO,MAAM,CAAA;AACf,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2321, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2327, "column": 0}, "map": {"version":3,"file":"getFunctionSignature.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/hash/getFunctionSignature.ts"],"sourcesContent":["import { type AbiFunction, formatAbiItem } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type NormalizeSignatureErrorType,\n  normalizeSignature,\n} from './normalizeSignature.js'\n\nexport type GetFunctionSignatureErrorType =\n  | NormalizeSignatureErrorType\n  | ErrorType\n\nexport const getFunctionSignature = (fn_: string | AbiFunction) => {\n  const fn = (() => {\n    if (typeof fn_ === 'string') return fn_\n    return formatAbiItem(fn_)\n  })()\n  return normalizeSignature(fn)\n}\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAoB,aAAa,EAAE,MAAM,SAAS,CAAA;AAGzD,OAAO,EAEL,kBAAkB,GACnB,MAAM,yBAAyB,CAAA;;;AAMzB,MAAM,oBAAoB,GAAG,CAAC,GAAyB,EAAE,EAAE;IAChE,MAAM,EAAE,GAAG,CAAC,GAAG,EAAE;QACf,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE,OAAO,GAAG,CAAA;QACvC,sQAAO,gBAAA,AAAa,EAAC,GAAG,CAAC,CAAA;IAC3B,CAAC,CAAC,EAAE,CAAA;IACJ,2PAAO,qBAAA,AAAkB,EAAC,EAAE,CAAC,CAAA;AAC/B,CAAC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 2341, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2347, "column": 0}, "map": {"version":3,"file":"getEventSignature.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/hash/getEventSignature.ts"],"sourcesContent":["import type { AbiEvent, AbiFunction } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type GetFunctionSignatureErrorType,\n  getFunctionSignature,\n} from './getFunctionSignature.js'\n\nexport type GetEventSignatureErrorType =\n  | GetFunctionSignatureErrorType\n  | ErrorType\n\nexport const getEventSignature = (fn: string | AbiEvent) => {\n  return getFunctionSignature(fn as {} as AbiFunction)\n}\n"],"names":[],"mappings":";;;AAGA,OAAO,EAEL,oBAAoB,GACrB,MAAM,2BAA2B,CAAA;;AAM3B,MAAM,iBAAiB,GAAG,CAAC,EAAqB,EAAE,EAAE;IACzD,6PAAO,uBAAA,AAAoB,EAAC,EAAuB,CAAC,CAAA;AACtD,CAAC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 2355, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2361, "column": 0}, "map": {"version":3,"file":"getEventSelector.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/hash/getEventSelector.ts"],"sourcesContent":["import type { AbiEvent } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { getEventSignature } from './getEventSignature.js'\nimport { type Keccak256ErrorType, keccak256 } from './keccak256.js'\n\nconst hash = (value: string) => keccak256(toBytes(value))\n\nexport type GetEventSelectorErrorType =\n  | Keccak256ErrorType\n  | ToBytesErrorType\n  | ErrorType\n\nexport const getEventSelector = (fn: string | AbiEvent) =>\n  hash(getEventSignature(fn))\n"],"names":[],"mappings":";;;AAKA,OAAO,EAA2B,SAAS,EAAE,MAAM,gBAAgB,CAAA;AAFnE,OAAO,EAAyB,OAAO,EAAE,MAAM,wBAAwB,CAAA;AACvE,OAAO,EAAE,iBAAiB,EAAE,MAAM,wBAAwB,CAAA;;;;AAG1D,MAAM,IAAI,GAAG,CAAC,KAAa,EAAE,EAAE,0OAAC,YAAA,AAAS,+OAAC,UAAA,AAAO,EAAC,KAAK,CAAC,CAAC,CAAA;AAOlD,MAAM,gBAAgB,GAAG,CAAC,EAAqB,EAAE,CACtD,CADwD,GACpD,oPAAC,oBAAA,AAAiB,EAAC,EAAE,CAAC,CAAC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 2372, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2378, "column": 0}, "map": {"version":3,"file":"slice.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/data/slice.ts"],"sourcesContent":["import {\n  SliceOffsetOutOfBoundsError,\n  type SliceOffsetOutOfBoundsErrorType,\n} from '../../errors/data.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nimport { type IsHexErrorType, isHex } from './isHex.js'\nimport { type SizeErrorType, size } from './size.js'\n\nexport type SliceReturnType<TValue extends ByteArray | Hex> = TValue extends Hex\n  ? Hex\n  : ByteArray\n\nexport type SliceErrorType =\n  | IsHexErrorType\n  | SliceBytesErrorType\n  | SliceHexErrorType\n  | ErrorType\n\n/**\n * @description Returns a section of the hex or byte array given a start/end bytes offset.\n *\n * @param value The hex or byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function slice<TValue extends ByteArray | Hex>(\n  value: TValue,\n  start?: number,\n  end?: number,\n  { strict }: { strict?: boolean } = {},\n): SliceReturnType<TValue> {\n  if (isHex(value, { strict: false }))\n    return sliceHex(value as Hex, start, end, {\n      strict,\n    }) as SliceReturnType<TValue>\n  return sliceBytes(value as ByteArray, start, end, {\n    strict,\n  }) as SliceReturnType<TValue>\n}\n\nexport type AssertStartOffsetErrorType =\n  | SliceOffsetOutOfBoundsErrorType\n  | SizeErrorType\n  | ErrorType\n\nfunction assertStartOffset(value: Hex | ByteArray, start?: number) {\n  if (typeof start === 'number' && start > 0 && start > size(value) - 1)\n    throw new SliceOffsetOutOfBoundsError({\n      offset: start,\n      position: 'start',\n      size: size(value),\n    })\n}\n\nexport type AssertEndOffsetErrorType =\n  | SliceOffsetOutOfBoundsErrorType\n  | SizeErrorType\n  | ErrorType\n\nfunction assertEndOffset(value: Hex | ByteArray, start?: number, end?: number) {\n  if (\n    typeof start === 'number' &&\n    typeof end === 'number' &&\n    size(value) !== end - start\n  ) {\n    throw new SliceOffsetOutOfBoundsError({\n      offset: end,\n      position: 'end',\n      size: size(value),\n    })\n  }\n}\n\nexport type SliceBytesErrorType =\n  | AssertStartOffsetErrorType\n  | AssertEndOffsetErrorType\n  | ErrorType\n\n/**\n * @description Returns a section of the byte array given a start/end bytes offset.\n *\n * @param value The byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceBytes(\n  value_: ByteArray,\n  start?: number,\n  end?: number,\n  { strict }: { strict?: boolean } = {},\n): ByteArray {\n  assertStartOffset(value_, start)\n  const value = value_.slice(start, end)\n  if (strict) assertEndOffset(value, start, end)\n  return value\n}\n\nexport type SliceHexErrorType =\n  | AssertStartOffsetErrorType\n  | AssertEndOffsetErrorType\n  | ErrorType\n\n/**\n * @description Returns a section of the hex value given a start/end bytes offset.\n *\n * @param value The hex value to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceHex(\n  value_: Hex,\n  start?: number,\n  end?: number,\n  { strict }: { strict?: boolean } = {},\n): Hex {\n  assertStartOffset(value_, start)\n  const value = `0x${value_\n    .replace('0x', '')\n    .slice((start ?? 0) * 2, (end ?? value_.length) * 2)}` as const\n  if (strict) assertEndOffset(value, start, end)\n  return value\n}\n"],"names":[],"mappings":";;;;;AAOA,OAAO,EAAuB,KAAK,EAAE,MAAM,YAAY,CAAA;AACvD,OAAO,EAAsB,IAAI,EAAE,MAAM,WAAW,CAAA;AARpD,OAAO,EACL,2BAA2B,GAE5B,MAAM,sBAAsB,CAAA;;;;AAwBvB,SAAU,KAAK,CACnB,KAAa,EACb,KAAc,EACd,GAAY,EACZ,EAAE,MAAM,EAAA,GAA2B,CAAA,CAAE;IAErC,2OAAI,QAAA,AAAK,EAAC,KAAK,EAAE;QAAE,MAAM,EAAE,KAAK;IAAA,CAAE,CAAC,EACjC,OAAO,QAAQ,CAAC,KAAY,EAAE,KAAK,EAAE,GAAG,EAAE;QACxC,MAAM;KACP,CAA4B,CAAA;IAC/B,OAAO,UAAU,CAAC,KAAkB,EAAE,KAAK,EAAE,GAAG,EAAE;QAChD,MAAM;KACP,CAA4B,CAAA;AAC/B,CAAC;AAOD,SAAS,iBAAiB,CAAC,KAAsB,EAAE,KAAc;IAC/D,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,IAAG,4OAAA,AAAI,EAAC,KAAK,CAAC,GAAG,CAAC,EACnE,MAAM,+NAAI,8BAA2B,CAAC;QACpC,MAAM,EAAE,KAAK;QACb,QAAQ,EAAE,OAAO;QACjB,IAAI,wOAAE,OAAA,AAAI,EAAC,KAAK,CAAC;KAClB,CAAC,CAAA;AACN,CAAC;AAOD,SAAS,eAAe,CAAC,KAAsB,EAAE,KAAc,EAAE,GAAY;IAC3E,IACE,OAAO,KAAK,KAAK,QAAQ,IACzB,OAAO,GAAG,KAAK,QAAQ,0OACvB,OAAA,AAAI,EAAC,KAAK,CAAC,KAAK,GAAG,GAAG,KAAK,EAC3B;QACA,MAAM,+NAAI,8BAA2B,CAAC;YACpC,MAAM,EAAE,GAAG;YACX,QAAQ,EAAE,KAAK;YACf,IAAI,wOAAE,OAAI,AAAJ,EAAK,KAAK,CAAC;SAClB,CAAC,CAAA;KACH;AACH,CAAC;AAcK,SAAU,UAAU,CACxB,MAAiB,EACjB,KAAc,EACd,GAAY,EACZ,EAAE,MAAM,EAAA,GAA2B,CAAA,CAAE;IAErC,iBAAiB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;IAChC,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAA;IACtC,IAAI,MAAM,EAAE,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA;IAC9C,OAAO,KAAK,CAAA;AACd,CAAC;AAcK,SAAU,QAAQ,CACtB,MAAW,EACX,KAAc,EACd,GAAY,EACZ,EAAE,MAAM,EAAA,GAA2B,CAAA,CAAE;IAErC,iBAAiB,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;IAChC,MAAM,KAAK,GAAG,CAAA,EAAA,EAAK,MAAM,CACtB,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CACjB,KAAK,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAW,CAAA;IACjE,IAAI,MAAM,EAAE,eAAe,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA;IAC9C,OAAO,KAAK,CAAA;AACd,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2427, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2433, "column": 0}, "map": {"version":3,"file":"getFunctionSelector.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/hash/getFunctionSelector.ts"],"sourcesContent":["import type { AbiFunction } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type SliceErrorType, slice } from '../data/slice.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport {\n  type GetFunctionSignatureErrorType,\n  getFunctionSignature,\n} from './getFunctionSignature.js'\nimport { type Keccak256ErrorType, keccak256 } from './keccak256.js'\n\nconst hash = (value: string) => keccak256(toBytes(value))\n\nexport type GetFunctionSelectorErrorType =\n  | GetFunctionSignatureErrorType\n  | Keccak256ErrorType\n  | SliceErrorType\n  | ToBytesErrorType\n  | ErrorType\n\nexport const getFunctionSelector = (fn: string | AbiFunction) =>\n  slice(hash(getFunctionSignature(fn)), 0, 4)\n"],"names":[],"mappings":";;;AASA,OAAO,EAA2B,SAAS,EAAE,MAAM,gBAAgB,CAAA;AALnE,OAAO,EAAyB,OAAO,EAAE,MAAM,wBAAwB,CAAA;AADvE,OAAO,EAAuB,KAAK,EAAE,MAAM,kBAAkB,CAAA;AAE7D,OAAO,EAEL,oBAAoB,GACrB,MAAM,2BAA2B,CAAA;;;;;AAGlC,MAAM,IAAI,GAAG,CAAC,KAAa,EAAE,EAAE,0OAAC,YAAS,AAAT,+OAAU,UAAA,AAAO,EAAC,KAAK,CAAC,CAAC,CAAA;AASlD,MAAM,mBAAmB,GAAG,CAAC,EAAwB,EAAE,EAAE,sOAC9D,QAAA,AAAK,EAAC,IAAI,uPAAC,uBAAA,AAAoB,EAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 2446, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2452, "column": 0}, "map": {"version":3,"file":"formatAbiItem.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/abi/formatAbiItem.ts"],"sourcesContent":["import type { AbiParameter } from 'abitype'\n\nimport {\n  InvalidDefinitionTypeError,\n  type InvalidDefinitionTypeErrorType,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { AbiItem } from '../../types/contract.js'\n\nexport type FormatAbiItemErrorType =\n  | FormatAbiParamsErrorType\n  | InvalidDefinitionTypeErrorType\n  | ErrorType\n\nexport function formatAbiItem(\n  abiItem: AbiItem,\n  { includeName = false }: { includeName?: boolean } = {},\n) {\n  if (\n    abiItem.type !== 'function' &&\n    abiItem.type !== 'event' &&\n    abiItem.type !== 'error'\n  )\n    throw new InvalidDefinitionTypeError(abiItem.type)\n\n  return `${abiItem.name}(${formatAbiParams(abiItem.inputs, { includeName })})`\n}\n\nexport type FormatAbiParamsErrorType = ErrorType\n\nexport function formatAbiParams(\n  params: readonly AbiParameter[] | undefined,\n  { includeName = false }: { includeName?: boolean } = {},\n): string {\n  if (!params) return ''\n  return params\n    .map((param) => formatAbiParam(param, { includeName }))\n    .join(includeName ? ', ' : ',')\n}\n\nexport type FormatAbiParamErrorType = ErrorType\n\nfunction formatAbiParam(\n  param: AbiParameter,\n  { includeName }: { includeName: boolean },\n): string {\n  if (param.type.startsWith('tuple')) {\n    return `(${formatAbiParams(\n      (param as unknown as { components: AbiParameter[] }).components,\n      { includeName },\n    )})${param.type.slice('tuple'.length)}`\n  }\n  return param.type + (includeName && param.name ? ` ${param.name}` : '')\n}\n"],"names":[],"mappings":";;;;AAEA,OAAO,EACL,0BAA0B,GAE3B,MAAM,qBAAqB,CAAA;;AAStB,SAAU,aAAa,CAC3B,OAAgB,EAChB,EAAE,WAAW,GAAG,KAAK,EAAA,GAAgC,CAAA,CAAE;IAEvD,IACE,OAAO,CAAC,IAAI,KAAK,UAAU,IAC3B,OAAO,CAAC,IAAI,KAAK,OAAO,IACxB,OAAO,CAAC,IAAI,KAAK,OAAO,EAExB,MAAM,8NAAI,6BAA0B,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;IAEpD,OAAO,GAAG,OAAO,CAAC,IAAI,CAAA,CAAA,EAAI,eAAe,CAAC,OAAO,CAAC,MAAM,EAAE;QAAE,WAAW;IAAA,CAAE,CAAC,CAAA,CAAA,CAAG,CAAA;AAC/E,CAAC;AAIK,SAAU,eAAe,CAC7B,MAA2C,EAC3C,EAAE,WAAW,GAAG,KAAK,EAAA,GAAgC,CAAA,CAAE;IAEvD,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,CAAA;IACtB,OAAO,MAAM,CACV,GAAG,CAAC,CAAC,KAAK,EAAE,CAAG,CAAD,aAAe,CAAC,KAAK,EAAE;YAAE,WAAW;QAAA,CAAE,CAAC,CAAC,CACtD,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;AACnC,CAAC;AAID,SAAS,cAAc,CACrB,KAAmB,EACnB,EAAE,WAAW,EAA4B;IAEzC,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;QAClC,OAAO,CAAA,CAAA,EAAI,eAAe,CACvB,KAAmD,CAAC,UAAU,EAC/D;YAAE,WAAW;QAAA,CAAE,CAChB,CAAA,CAAA,EAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAA;KACxC;IACD,OAAO,KAAK,CAAC,IAAI,GAAG,CAAC,WAAW,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA,CAAA,EAAI,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAA;AACzE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2478, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2484, "column": 0}, "map": {"version":3,"file":"abi.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/errors/abi.ts"],"sourcesContent":["import type { Abi, AbiEvent, AbiParameter } from 'abitype'\n\nimport type { Hex } from '../types/misc.js'\nimport { formatAbiItem, formatAbiParams } from '../utils/abi/formatAbiItem.js'\nimport { size } from '../utils/data/size.js'\n\nimport { BaseError } from './base.js'\n\nexport type AbiConstructorNotFoundErrorType = AbiConstructorNotFoundError & {\n  name: 'AbiConstructorNotFoundError'\n}\nexport class AbiConstructorNotFoundError extends BaseError {\n  override name = 'AbiConstructorNotFoundError'\n  constructor({ docsPath }: { docsPath: string }) {\n    super(\n      [\n        'A constructor was not found on the ABI.',\n        'Make sure you are using the correct ABI and that the constructor exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n  }\n}\n\nexport type AbiConstructorParamsNotFoundErrorType =\n  AbiConstructorParamsNotFoundError & {\n    name: 'AbiConstructorParamsNotFoundError'\n  }\n\nexport class AbiConstructorParamsNotFoundError extends BaseError {\n  override name = 'AbiConstructorParamsNotFoundError'\n  constructor({ docsPath }: { docsPath: string }) {\n    super(\n      [\n        'Constructor arguments were provided (`args`), but a constructor parameters (`inputs`) were not found on the ABI.',\n        'Make sure you are using the correct ABI, and that the `inputs` attribute on the constructor exists.',\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n  }\n}\n\nexport type AbiDecodingDataSizeInvalidErrorType =\n  AbiDecodingDataSizeInvalidError & {\n    name: 'AbiDecodingDataSizeInvalidError'\n  }\nexport class AbiDecodingDataSizeInvalidError extends BaseError {\n  override name = 'AbiDecodingDataSizeInvalidError'\n  constructor({ data, size }: { data: Hex; size: number }) {\n    super(\n      [\n        `Data size of ${size} bytes is invalid.`,\n        'Size must be in increments of 32 bytes (size % 32 === 0).',\n      ].join('\\n'),\n      { metaMessages: [`Data: ${data} (${size} bytes)`] },\n    )\n  }\n}\n\nexport type AbiDecodingDataSizeTooSmallErrorType =\n  AbiDecodingDataSizeTooSmallError & {\n    name: 'AbiDecodingDataSizeTooSmallError'\n  }\nexport class AbiDecodingDataSizeTooSmallError extends BaseError {\n  override name = 'AbiDecodingDataSizeTooSmallError'\n\n  data: Hex\n  params: readonly AbiParameter[]\n  size: number\n\n  constructor({\n    data,\n    params,\n    size,\n  }: { data: Hex; params: readonly AbiParameter[]; size: number }) {\n    super(\n      [`Data size of ${size} bytes is too small for given parameters.`].join(\n        '\\n',\n      ),\n      {\n        metaMessages: [\n          `Params: (${formatAbiParams(params, { includeName: true })})`,\n          `Data:   ${data} (${size} bytes)`,\n        ],\n      },\n    )\n\n    this.data = data\n    this.params = params\n    this.size = size\n  }\n}\n\nexport type AbiDecodingZeroDataErrorType = AbiDecodingZeroDataError & {\n  name: 'AbiDecodingZeroDataError'\n}\nexport class AbiDecodingZeroDataError extends BaseError {\n  override name = 'AbiDecodingZeroDataError'\n  constructor() {\n    super('Cannot decode zero data (\"0x\") with ABI parameters.')\n  }\n}\n\nexport type AbiEncodingArrayLengthMismatchErrorType =\n  AbiEncodingArrayLengthMismatchError & {\n    name: 'AbiEncodingArrayLengthMismatchError'\n  }\nexport class AbiEncodingArrayLengthMismatchError extends BaseError {\n  override name = 'AbiEncodingArrayLengthMismatchError'\n  constructor({\n    expectedLength,\n    givenLength,\n    type,\n  }: { expectedLength: number; givenLength: number; type: string }) {\n    super(\n      [\n        `ABI encoding array length mismatch for type ${type}.`,\n        `Expected length: ${expectedLength}`,\n        `Given length: ${givenLength}`,\n      ].join('\\n'),\n    )\n  }\n}\n\nexport type AbiEncodingBytesSizeMismatchErrorType =\n  AbiEncodingBytesSizeMismatchError & {\n    name: 'AbiEncodingBytesSizeMismatchError'\n  }\nexport class AbiEncodingBytesSizeMismatchError extends BaseError {\n  override name = 'AbiEncodingBytesSizeMismatchError'\n  constructor({ expectedSize, value }: { expectedSize: number; value: Hex }) {\n    super(\n      `Size of bytes \"${value}\" (bytes${size(\n        value,\n      )}) does not match expected size (bytes${expectedSize}).`,\n    )\n  }\n}\n\nexport type AbiEncodingLengthMismatchErrorType =\n  AbiEncodingLengthMismatchError & {\n    name: 'AbiEncodingLengthMismatchError'\n  }\nexport class AbiEncodingLengthMismatchError extends BaseError {\n  override name = 'AbiEncodingLengthMismatchError'\n  constructor({\n    expectedLength,\n    givenLength,\n  }: { expectedLength: number; givenLength: number }) {\n    super(\n      [\n        'ABI encoding params/values length mismatch.',\n        `Expected length (params): ${expectedLength}`,\n        `Given length (values): ${givenLength}`,\n      ].join('\\n'),\n    )\n  }\n}\n\nexport type AbiErrorInputsNotFoundErrorType = AbiErrorInputsNotFoundError & {\n  name: 'AbiErrorInputsNotFoundError'\n}\nexport class AbiErrorInputsNotFoundError extends BaseError {\n  override name = 'AbiErrorInputsNotFoundError'\n  constructor(errorName: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Arguments (\\`args\\`) were provided to \"${errorName}\", but \"${errorName}\" on the ABI does not contain any parameters (\\`inputs\\`).`,\n        'Cannot encode error result without knowing what the parameter types are.',\n        'Make sure you are using the correct ABI and that the inputs exist on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n  }\n}\n\nexport type AbiErrorNotFoundErrorType = AbiErrorNotFoundError & {\n  name: 'AbiErrorNotFoundError'\n}\nexport class AbiErrorNotFoundError extends BaseError {\n  override name = 'AbiErrorNotFoundError'\n  constructor(errorName?: string, { docsPath }: { docsPath?: string } = {}) {\n    super(\n      [\n        `Error ${errorName ? `\"${errorName}\" ` : ''}not found on ABI.`,\n        'Make sure you are using the correct ABI and that the error exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n  }\n}\n\nexport type AbiErrorSignatureNotFoundErrorType =\n  AbiErrorSignatureNotFoundError & {\n    name: 'AbiErrorSignatureNotFoundError'\n  }\nexport class AbiErrorSignatureNotFoundError extends BaseError {\n  override name = 'AbiErrorSignatureNotFoundError'\n\n  signature: Hex\n\n  constructor(signature: Hex, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Encoded error signature \"${signature}\" not found on ABI.`,\n        'Make sure you are using the correct ABI and that the error exists on it.',\n        `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n    this.signature = signature\n  }\n}\n\nexport type AbiEventSignatureEmptyTopicsErrorType =\n  AbiEventSignatureEmptyTopicsError & {\n    name: 'AbiEventSignatureEmptyTopicsError'\n  }\nexport class AbiEventSignatureEmptyTopicsError extends BaseError {\n  override name = 'AbiEventSignatureEmptyTopicsError'\n  constructor({ docsPath }: { docsPath: string }) {\n    super('Cannot extract event signature from empty topics.', {\n      docsPath,\n    })\n  }\n}\n\nexport type AbiEventSignatureNotFoundErrorType =\n  AbiEventSignatureNotFoundError & {\n    name: 'AbiEventSignatureNotFoundError'\n  }\nexport class AbiEventSignatureNotFoundError extends BaseError {\n  override name = 'AbiEventSignatureNotFoundError'\n  constructor(signature: Hex, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Encoded event signature \"${signature}\" not found on ABI.`,\n        'Make sure you are using the correct ABI and that the event exists on it.',\n        `You can look up the signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n  }\n}\n\nexport type AbiEventNotFoundErrorType = AbiEventNotFoundError & {\n  name: 'AbiEventNotFoundError'\n}\nexport class AbiEventNotFoundError extends BaseError {\n  override name = 'AbiEventNotFoundError'\n  constructor(eventName?: string, { docsPath }: { docsPath?: string } = {}) {\n    super(\n      [\n        `Event ${eventName ? `\"${eventName}\" ` : ''}not found on ABI.`,\n        'Make sure you are using the correct ABI and that the event exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n  }\n}\n\nexport type AbiFunctionNotFoundErrorType = AbiFunctionNotFoundError & {\n  name: 'AbiFunctionNotFoundError'\n}\nexport class AbiFunctionNotFoundError extends BaseError {\n  override name = 'AbiFunctionNotFoundError'\n  constructor(functionName?: string, { docsPath }: { docsPath?: string } = {}) {\n    super(\n      [\n        `Function ${functionName ? `\"${functionName}\" ` : ''}not found on ABI.`,\n        'Make sure you are using the correct ABI and that the function exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n  }\n}\n\nexport type AbiFunctionOutputsNotFoundErrorType =\n  AbiFunctionOutputsNotFoundError & {\n    name: 'AbiFunctionOutputsNotFoundError'\n  }\nexport class AbiFunctionOutputsNotFoundError extends BaseError {\n  override name = 'AbiFunctionOutputsNotFoundError'\n  constructor(functionName: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Function \"${functionName}\" does not contain any \\`outputs\\` on ABI.`,\n        'Cannot decode function result without knowing what the parameter types are.',\n        'Make sure you are using the correct ABI and that the function exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n  }\n}\n\nexport type AbiFunctionSignatureNotFoundErrorType =\n  AbiFunctionSignatureNotFoundError & {\n    name: 'AbiFunctionSignatureNotFoundError'\n  }\nexport class AbiFunctionSignatureNotFoundError extends BaseError {\n  override name = 'AbiFunctionSignatureNotFoundError'\n  constructor(signature: Hex, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Encoded function signature \"${signature}\" not found on ABI.`,\n        'Make sure you are using the correct ABI and that the function exists on it.',\n        `You can look up the signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ].join('\\n'),\n      {\n        docsPath,\n      },\n    )\n  }\n}\n\nexport type AbiItemAmbiguityErrorType = AbiItemAmbiguityError & {\n  name: 'AbiItemAmbiguityError'\n}\nexport class AbiItemAmbiguityError extends BaseError {\n  override name = 'AbiItemAmbiguityError'\n  constructor(\n    x: { abiItem: Abi[number]; type: string },\n    y: { abiItem: Abi[number]; type: string },\n  ) {\n    super('Found ambiguous types in overloaded ABI items.', {\n      metaMessages: [\n        `\\`${x.type}\\` in \\`${formatAbiItem(x.abiItem)}\\`, and`,\n        `\\`${y.type}\\` in \\`${formatAbiItem(y.abiItem)}\\``,\n        '',\n        'These types encode differently and cannot be distinguished at runtime.',\n        'Remove one of the ambiguous items in the ABI.',\n      ],\n    })\n  }\n}\n\nexport type BytesSizeMismatchErrorType = BytesSizeMismatchError & {\n  name: 'BytesSizeMismatchError'\n}\nexport class BytesSizeMismatchError extends BaseError {\n  override name = 'BytesSizeMismatchError'\n  constructor({\n    expectedSize,\n    givenSize,\n  }: { expectedSize: number; givenSize: number }) {\n    super(`Expected bytes${expectedSize}, got bytes${givenSize}.`)\n  }\n}\n\nexport type DecodeLogDataMismatchErrorType = DecodeLogDataMismatch & {\n  name: 'DecodeLogDataMismatch'\n}\nexport class DecodeLogDataMismatch extends BaseError {\n  override name = 'DecodeLogDataMismatch'\n\n  abiItem: AbiEvent\n  data: Hex\n  params: readonly AbiParameter[]\n  size: number\n\n  constructor({\n    abiItem,\n    data,\n    params,\n    size,\n  }: {\n    abiItem: AbiEvent\n    data: Hex\n    params: readonly AbiParameter[]\n    size: number\n  }) {\n    super(\n      [\n        `Data size of ${size} bytes is too small for non-indexed event parameters.`,\n      ].join('\\n'),\n      {\n        metaMessages: [\n          `Params: (${formatAbiParams(params, { includeName: true })})`,\n          `Data:   ${data} (${size} bytes)`,\n        ],\n      },\n    )\n\n    this.abiItem = abiItem\n    this.data = data\n    this.params = params\n    this.size = size\n  }\n}\n\nexport type DecodeLogTopicsMismatchErrorType = DecodeLogTopicsMismatch & {\n  name: 'DecodeLogTopicsMismatch'\n}\nexport class DecodeLogTopicsMismatch extends BaseError {\n  override name = 'DecodeLogTopicsMismatch'\n\n  abiItem: AbiEvent\n\n  constructor({\n    abiItem,\n    param,\n  }: {\n    abiItem: AbiEvent\n    param: AbiParameter & { indexed: boolean }\n  }) {\n    super(\n      [\n        `Expected a topic for indexed event parameter${\n          param.name ? ` \"${param.name}\"` : ''\n        } on event \"${formatAbiItem(abiItem, { includeName: true })}\".`,\n      ].join('\\n'),\n    )\n\n    this.abiItem = abiItem\n  }\n}\n\nexport type InvalidAbiEncodingTypeErrorType = InvalidAbiEncodingTypeError & {\n  name: 'InvalidAbiEncodingTypeError'\n}\nexport class InvalidAbiEncodingTypeError extends BaseError {\n  override name = 'InvalidAbiEncodingType'\n  constructor(type: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Type \"${type}\" is not a valid encoding type.`,\n        'Please provide a valid ABI type.',\n      ].join('\\n'),\n      { docsPath },\n    )\n  }\n}\n\nexport type InvalidAbiDecodingTypeErrorType = InvalidAbiDecodingTypeError & {\n  name: 'InvalidAbiDecodingTypeError'\n}\nexport class InvalidAbiDecodingTypeError extends BaseError {\n  override name = 'InvalidAbiDecodingType'\n  constructor(type: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Type \"${type}\" is not a valid decoding type.`,\n        'Please provide a valid ABI type.',\n      ].join('\\n'),\n      { docsPath },\n    )\n  }\n}\n\nexport type InvalidArrayErrorType = InvalidArrayError & {\n  name: 'InvalidArrayError'\n}\nexport class InvalidArrayError extends BaseError {\n  override name = 'InvalidArrayError'\n  constructor(value: unknown) {\n    super([`Value \"${value}\" is not a valid array.`].join('\\n'))\n  }\n}\n\nexport type InvalidDefinitionTypeErrorType = InvalidDefinitionTypeError & {\n  name: 'InvalidDefinitionTypeError'\n}\nexport class InvalidDefinitionTypeError extends BaseError {\n  override name = 'InvalidDefinitionTypeError'\n  constructor(type: string) {\n    super(\n      [\n        `\"${type}\" is not a valid definition type.`,\n        'Valid types: \"function\", \"event\", \"error\"',\n      ].join('\\n'),\n    )\n  }\n}\n\nexport type UnsupportedPackedAbiTypeErrorType = UnsupportedPackedAbiType & {\n  name: 'UnsupportedPackedAbiType'\n}\nexport class UnsupportedPackedAbiType extends BaseError {\n  override name = 'UnsupportedPackedAbiType'\n  constructor(type: unknown) {\n    super(`Type \"${type}\" is not supported for packed encoding.`)\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2984, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2990, "column": 0}, "map": {"version":3,"file":"getAbiItem.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/abi/getAbiItem.ts"],"sourcesContent":["import { type Abi, type AbiParameter, type Address } from 'abitype'\n\nimport { AbiItemAmbiguityError } from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  AbiItem,\n  GetFunctionArgs,\n  InferItemName,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../../utils/data/isHex.js'\nimport { getEventSelector } from '../../utils/hash/getEventSelector.js'\nimport {\n  type GetFunctionSelectorErrorType,\n  getFunctionSelector,\n} from '../../utils/hash/getFunctionSelector.js'\nimport { type IsAddressErrorType, isAddress } from '../address/isAddress.js'\n\nexport type GetAbiItemParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TItemName extends string = string,\n> = {\n  abi: TAbi\n  name: InferItemName<TAbi, TItemName> | Hex\n} & Partial<GetFunctionArgs<TAbi, TItemName>>\n\nexport type GetAbiItemReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TItemName extends string = string,\n> = Extract<\n  TAbi[number],\n  {\n    name: TItemName\n  }\n>\n\nexport type GetAbiItemErrorType =\n  | IsArgOfTypeErrorType\n  | IsHexErrorType\n  | GetFunctionSelectorErrorType\n  | ErrorType\n\nexport function getAbiItem<\n  const TAbi extends Abi | readonly unknown[],\n  TItemName extends string,\n>({\n  abi,\n  args = [],\n  name,\n}: GetAbiItemParameters<TAbi, TItemName>): GetAbiItemReturnType<\n  TAbi,\n  TItemName\n> {\n  const isSelector = isHex(name, { strict: false })\n\n  const abiItems = (abi as Abi).filter((abiItem) => {\n    if (isSelector) {\n      if (abiItem.type === 'function')\n        return getFunctionSelector(abiItem) === name\n      if (abiItem.type === 'event') return getEventSelector(abiItem) === name\n      return false\n    }\n    return 'name' in abiItem && abiItem.name === name\n  })\n\n  if (abiItems.length === 0) return undefined as any\n  if (abiItems.length === 1) return abiItems[0] as any\n\n  let matchedAbiItem: AbiItem | undefined = undefined\n  for (const abiItem of abiItems) {\n    if (!('inputs' in abiItem)) continue\n    if (!args || args.length === 0) {\n      if (!abiItem.inputs || abiItem.inputs.length === 0) return abiItem as any\n      continue\n    }\n    if (!abiItem.inputs) continue\n    if (abiItem.inputs.length === 0) continue\n    if (abiItem.inputs.length !== args.length) continue\n    const matched = (args as readonly unknown[]).every((arg, index) => {\n      const abiParameter = 'inputs' in abiItem && abiItem.inputs![index]\n      if (!abiParameter) return false\n      return isArgOfType(arg, abiParameter as AbiParameter)\n    })\n    if (matched) {\n      // Check for ambiguity against already matched parameters (e.g. `address` vs `bytes20`).\n      if (\n        matchedAbiItem &&\n        'inputs' in matchedAbiItem &&\n        matchedAbiItem.inputs\n      ) {\n        const ambiguousTypes = getAmbiguousTypes(\n          abiItem.inputs,\n          matchedAbiItem.inputs,\n          args as readonly unknown[],\n        )\n        if (ambiguousTypes)\n          throw new AbiItemAmbiguityError(\n            {\n              abiItem,\n              type: ambiguousTypes[0],\n            },\n            {\n              abiItem: matchedAbiItem,\n              type: ambiguousTypes[1],\n            },\n          )\n      }\n\n      matchedAbiItem = abiItem\n    }\n  }\n\n  if (matchedAbiItem)\n    return matchedAbiItem as GetAbiItemReturnType<TAbi, TItemName>\n  return abiItems[0] as GetAbiItemReturnType<TAbi, TItemName>\n}\n\nexport type IsArgOfTypeErrorType = IsAddressErrorType | ErrorType\n\nexport function isArgOfType(arg: unknown, abiParameter: AbiParameter): boolean {\n  const argType = typeof arg\n  const abiParameterType = abiParameter.type\n  switch (abiParameterType) {\n    case 'address':\n      return isAddress(arg as Address)\n    case 'bool':\n      return argType === 'boolean'\n    case 'function':\n      return argType === 'string'\n    case 'string':\n      return argType === 'string'\n    default: {\n      if (abiParameterType === 'tuple' && 'components' in abiParameter)\n        return Object.values(abiParameter.components).every(\n          (component, index) => {\n            return isArgOfType(\n              Object.values(arg as unknown[] | Record<string, unknown>)[index],\n              component as AbiParameter,\n            )\n          },\n        )\n\n      // `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n      // https://regexr.com/6v8hp\n      if (\n        /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(\n          abiParameterType,\n        )\n      )\n        return argType === 'number' || argType === 'bigint'\n\n      // `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n      // https://regexr.com/6va55\n      if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(abiParameterType))\n        return argType === 'string' || arg instanceof Uint8Array\n\n      // fixed-length (`<type>[M]`) and dynamic (`<type>[]`) arrays\n      // https://regexr.com/6va6i\n      if (/[a-z]+[1-9]{0,3}(\\[[0-9]{0,}\\])+$/.test(abiParameterType)) {\n        return (\n          Array.isArray(arg) &&\n          arg.every((x: unknown) =>\n            isArgOfType(x, {\n              ...abiParameter,\n              // Pop off `[]` or `[M]` from end of type\n              type: abiParameterType.replace(/(\\[[0-9]{0,}\\])$/, ''),\n            } as AbiParameter),\n          )\n        )\n      }\n\n      return false\n    }\n  }\n}\n\nexport function getAmbiguousTypes(\n  sourceParameters: readonly AbiParameter[],\n  targetParameters: readonly AbiParameter[],\n  args: readonly unknown[],\n): AbiParameter['type'][] | undefined {\n  for (const parameterIndex in sourceParameters) {\n    const sourceParameter = sourceParameters[parameterIndex]\n    const targetParameter = targetParameters[parameterIndex]\n\n    if (\n      sourceParameter.type === 'tuple' &&\n      targetParameter.type === 'tuple' &&\n      'components' in sourceParameter &&\n      'components' in targetParameter\n    )\n      return getAmbiguousTypes(\n        sourceParameter.components,\n        targetParameter.components,\n        (args as any)[parameterIndex],\n      )\n\n    const types = [sourceParameter.type, targetParameter.type]\n\n    const ambiguous = (() => {\n      if (types.includes('address') && types.includes('bytes20')) return true\n      if (types.includes('address') && types.includes('string'))\n        return isAddress(args[parameterIndex] as Address)\n      if (types.includes('address') && types.includes('bytes'))\n        return isAddress(args[parameterIndex] as Address)\n      return false\n    })()\n\n    if (ambiguous) return types\n  }\n\n  return\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3108, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3114, "column": 0}, "map": {"version":3,"file":"formatAbiItemWithArgs.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/abi/formatAbiItemWithArgs.ts"],"sourcesContent":["import type { AbiParameter } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { AbiItem } from '../../types/contract.js'\nimport { stringify } from '../stringify.js'\n\nexport type FormatAbiItemWithArgsErrorType = ErrorType\n\nexport function formatAbiItemWithArgs({\n  abiItem,\n  args,\n  includeFunctionName = true,\n  includeName = false,\n}: {\n  abiItem: AbiItem\n  args: readonly unknown[]\n  includeFunctionName?: boolean\n  includeName?: boolean\n}) {\n  if (!('name' in abiItem)) return\n  if (!('inputs' in abiItem)) return\n  if (!abiItem.inputs) return\n  return `${includeFunctionName ? abiItem.name : ''}(${abiItem.inputs\n    .map(\n      (input: AbiParameter, i: number) =>\n        `${includeName && input.name ? `${input.name}: ` : ''}${\n          typeof args[i] === 'object' ? stringify(args[i]) : args[i]\n        }`,\n    )\n    .join(', ')})`\n}\n"],"names":[],"mappings":";;;AAIA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAA;;AAIrC,SAAU,qBAAqB,CAAC,EACpC,OAAO,EACP,IAAI,EACJ,mBAAmB,GAAG,IAAI,EAC1B,WAAW,GAAG,KAAK,EAMpB;IACC,IAAI,CAAC,CAAC,MAAM,IAAI,OAAO,CAAC,EAAE,OAAM;IAChC,IAAI,CAAC,CAAC,QAAQ,IAAI,OAAO,CAAC,EAAE,OAAM;IAClC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAM;IAC3B,OAAO,GAAG,mBAAmB,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAA,CAAA,EAAI,OAAO,CAAC,MAAM,CAChE,GAAG,CACF,CAAC,KAAmB,EAAE,CAAS,EAAE,CAC/B,CADiC,EAC9B,WAAW,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,IAAI,CAAA,EAAA,CAAI,CAAC,CAAC,CAAC,EAAE,GACnD,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,oOAAC,YAAA,AAAS,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAC3D,EAAE,CACL,CACA,IAAI,CAAC,IAAI,CAAC,CAAA,CAAA,CAAG,CAAA;AAClB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3125, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3131, "column": 0}, "map": {"version":3,"file":"solidity.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/constants/solidity.ts"],"sourcesContent":["import type { AbiError } from 'abitype'\n\n// https://docs.soliditylang.org/en/v0.8.16/control-structures.html#panic-via-assert-and-error-via-require\nexport const panicReasons = {\n  1: 'An `assert` condition failed.',\n  17: 'Arithmic operation resulted in underflow or overflow.',\n  18: 'Division or modulo by zero (e.g. `5 / 0` or `23 % 0`).',\n  33: 'Attempted to convert to an invalid type.',\n  34: 'Attempted to access a storage byte array that is incorrectly encoded.',\n  49: 'Performed `.pop()` on an empty array',\n  50: 'Array index is out of bounds.',\n  65: 'Allocated too much memory or created an array which is too large.',\n  81: 'Attempted to call a zero-initialized variable of internal function type.',\n} as const\n\nexport const solidityError: AbiError = {\n  inputs: [\n    {\n      name: 'message',\n      type: 'string',\n    },\n  ],\n  name: 'Error',\n  type: 'error',\n}\nexport const solidityPanic: AbiError = {\n  inputs: [\n    {\n      name: 'reason',\n      type: 'uint256',\n    },\n  ],\n  name: 'Panic',\n  type: 'error',\n}\n"],"names":[],"mappings":"AAEA,0GAA0G;;;;;;AACnG,MAAM,YAAY,GAAG;IAC1B,CAAC,EAAE,+BAA+B;IAClC,EAAE,EAAE,uDAAuD;IAC3D,EAAE,EAAE,wDAAwD;IAC5D,EAAE,EAAE,0CAA0C;IAC9C,EAAE,EAAE,uEAAuE;IAC3E,EAAE,EAAE,sCAAsC;IAC1C,EAAE,EAAE,+BAA+B;IACnC,EAAE,EAAE,mEAAmE;IACvE,EAAE,EAAE,0EAA0E;CACtE,CAAA;AAEH,MAAM,aAAa,GAAa;IACrC,MAAM,EAAE;QACN;YACE,IAAI,EAAE,SAAS;YACf,IAAI,EAAE,QAAQ;SACf;KACF;IACD,IAAI,EAAE,OAAO;IACb,IAAI,EAAE,OAAO;CACd,CAAA;AACM,MAAM,aAAa,GAAa;IACrC,MAAM,EAAE;QACN;YACE,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE,SAAS;SAChB;KACF;IACD,IAAI,EAAE,OAAO;IACb,IAAI,EAAE,OAAO;CACd,CAAA","ignoreList":[0]}},
    {"offset": {"line": 3168, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3174, "column": 0}, "map": {"version":3,"file":"concat.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/data/concat.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nexport type ConcatReturnType<TValue extends Hex | ByteArray> =\n  TValue extends Hex ? Hex : ByteArray\n\nexport type ConcatErrorType =\n  | ConcatBytesErrorType\n  | ConcatHexErrorType\n  | ErrorType\n\nexport function concat<TValue extends Hex | ByteArray>(\n  values: readonly TValue[],\n): ConcatReturnType<TValue> {\n  if (typeof values[0] === 'string')\n    return concatHex(values as readonly Hex[]) as ConcatReturnType<TValue>\n  return concatBytes(values as readonly ByteArray[]) as ConcatReturnType<TValue>\n}\n\nexport type ConcatBytesErrorType = ErrorType\n\nexport function concatBytes(values: readonly ByteArray[]): ByteArray {\n  let length = 0\n  for (const arr of values) {\n    length += arr.length\n  }\n  const result = new Uint8Array(length)\n  let offset = 0\n  for (const arr of values) {\n    result.set(arr, offset)\n    offset += arr.length\n  }\n  return result\n}\n\nexport type ConcatHexErrorType = ErrorType\n\nexport function concatHex(values: readonly Hex[]): Hex {\n  return `0x${(values as Hex[]).reduce(\n    (acc, x) => acc + x.replace('0x', ''),\n    '',\n  )}`\n}\n"],"names":[],"mappings":";;;;;AAWM,SAAU,MAAM,CACpB,MAAyB;IAEzB,IAAI,OAAO,MAAM,CAAC,CAAC,CAAC,KAAK,QAAQ,EAC/B,OAAO,SAAS,CAAC,MAAwB,CAA6B,CAAA;IACxE,OAAO,WAAW,CAAC,MAA8B,CAA6B,CAAA;AAChF,CAAC;AAIK,SAAU,WAAW,CAAC,MAA4B;IACtD,IAAI,MAAM,GAAG,CAAC,CAAA;IACd,KAAK,MAAM,GAAG,IAAI,MAAM,CAAE;QACxB,MAAM,IAAI,GAAG,CAAC,MAAM,CAAA;KACrB;IACD,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,CAAA;IACrC,IAAI,MAAM,GAAG,CAAC,CAAA;IACd,KAAK,MAAM,GAAG,IAAI,MAAM,CAAE;QACxB,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAA;QACvB,MAAM,IAAI,GAAG,CAAC,MAAM,CAAA;KACrB;IACD,OAAO,MAAM,CAAA;AACf,CAAC;AAIK,SAAU,SAAS,CAAC,MAAsB;IAC9C,OAAO,CAAA,EAAA,EAAM,MAAgB,CAAC,MAAM,CAClC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAG,CAAD,EAAI,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EACrC,EAAE,CACH,EAAE,CAAA;AACL,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3199, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3205, "column": 0}, "map": {"version":3,"file":"encodeAbiParameters.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/abi/encodeAbiParameters.ts"],"sourcesContent":["import type {\n  AbiParameter,\n  AbiParameterToPrimitiveType,\n  AbiParametersToPrimitiveTypes,\n} from 'abitype'\n\nimport {\n  AbiEncodingArrayLengthMismatchError,\n  type AbiEncodingArrayLengthMismatchErrorType,\n  AbiEncodingBytesSizeMismatchError,\n  type AbiEncodingBytesSizeMismatchErrorType,\n  AbiEncodingLengthMismatchError,\n  type AbiEncodingLengthMismatchErrorType,\n  InvalidAbiEncodingTypeError,\n  type InvalidAbiEncodingTypeErrorType,\n  InvalidArrayError,\n  type InvalidArrayErrorType,\n} from '../../errors/abi.js'\nimport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type IsAddressErrorType, isAddress } from '../address/isAddress.js'\nimport { type ConcatErrorType, concat } from '../data/concat.js'\nimport { type PadHexErrorType, padHex } from '../data/pad.js'\nimport { type SizeErrorType, size } from '../data/size.js'\nimport { type SliceErrorType, slice } from '../data/slice.js'\nimport {\n  type BoolToHexErrorType,\n  type NumberToHexErrorType,\n  type StringToHexErrorType,\n  boolToHex,\n  numberToHex,\n  stringToHex,\n} from '../encoding/toHex.js'\n\nexport type EncodeAbiParametersReturnType = Hex\n\nexport type EncodeAbiParametersErrorType =\n  | AbiEncodingLengthMismatchErrorType\n  | PrepareParamsErrorType\n  | EncodeParamsErrorType\n  | ErrorType\n\n/**\n * @description Encodes a list of primitive values into an ABI-encoded hex value.\n */\nexport function encodeAbiParameters<\n  const TParams extends readonly AbiParameter[] | readonly unknown[],\n>(\n  params: TParams,\n  values: TParams extends readonly AbiParameter[]\n    ? AbiParametersToPrimitiveTypes<TParams>\n    : never,\n): EncodeAbiParametersReturnType {\n  if (params.length !== values.length)\n    throw new AbiEncodingLengthMismatchError({\n      expectedLength: params.length as number,\n      givenLength: values.length,\n    })\n  // Prepare the parameters to determine dynamic types to encode.\n  const preparedParams = prepareParams({\n    params: params as readonly AbiParameter[],\n    values,\n  })\n  const data = encodeParams(preparedParams)\n  if (data.length === 0) return '0x'\n  return data\n}\n\n/////////////////////////////////////////////////////////////////\n\ntype PreparedParam = { dynamic: boolean; encoded: Hex }\n\ntype TupleAbiParameter = AbiParameter & { components: readonly AbiParameter[] }\ntype Tuple = AbiParameterToPrimitiveType<TupleAbiParameter>\n\nexport type PrepareParamsErrorType = ErrorType\n\nfunction prepareParams<const TParams extends readonly AbiParameter[]>({\n  params,\n  values,\n}: {\n  params: TParams\n  values: AbiParametersToPrimitiveTypes<TParams>\n}) {\n  const preparedParams: PreparedParam[] = []\n  for (let i = 0; i < params.length; i++) {\n    preparedParams.push(prepareParam({ param: params[i], value: values[i] }))\n  }\n  return preparedParams\n}\n\nexport type PrepareParamErrorType =\n  | GetArrayComponentsErrorType\n  | InvalidAbiEncodingTypeErrorType\n  | ErrorType\n\nfunction prepareParam<const TParam extends AbiParameter>({\n  param,\n  value,\n}: {\n  param: TParam\n  value: AbiParameterToPrimitiveType<TParam>\n}): PreparedParam {\n  const arrayComponents = getArrayComponents(param.type)\n  if (arrayComponents) {\n    const [length, type] = arrayComponents\n    return encodeArray(value, { length, param: { ...param, type } })\n  }\n  if (param.type === 'tuple') {\n    return encodeTuple(value as unknown as Tuple, {\n      param: param as TupleAbiParameter,\n    })\n  }\n  if (param.type === 'address') {\n    return encodeAddress(value as unknown as Hex)\n  }\n  if (param.type === 'bool') {\n    return encodeBool(value as unknown as boolean)\n  }\n  if (param.type.startsWith('uint') || param.type.startsWith('int')) {\n    const signed = param.type.startsWith('int')\n    return encodeNumber(value as unknown as number, { signed })\n  }\n  if (param.type.startsWith('bytes')) {\n    return encodeBytes(value as unknown as Hex, { param })\n  }\n  if (param.type === 'string') {\n    return encodeString(value as unknown as string)\n  }\n  throw new InvalidAbiEncodingTypeError(param.type, {\n    docsPath: '/docs/contract/encodeAbiParameters',\n  })\n}\n\n/////////////////////////////////////////////////////////////////\n\nexport type EncodeParamsErrorType =\n  | NumberToHexErrorType\n  | SizeErrorType\n  | ErrorType\n\nfunction encodeParams(preparedParams: PreparedParam[]): Hex {\n  // 1. Compute the size of the static part of the parameters.\n  let staticSize = 0\n  for (let i = 0; i < preparedParams.length; i++) {\n    const { dynamic, encoded } = preparedParams[i]\n    if (dynamic) staticSize += 32\n    else staticSize += size(encoded)\n  }\n\n  // 2. Split the parameters into static and dynamic parts.\n  const staticParams: Hex[] = []\n  const dynamicParams: Hex[] = []\n  let dynamicSize = 0\n  for (let i = 0; i < preparedParams.length; i++) {\n    const { dynamic, encoded } = preparedParams[i]\n    if (dynamic) {\n      staticParams.push(numberToHex(staticSize + dynamicSize, { size: 32 }))\n      dynamicParams.push(encoded)\n      dynamicSize += size(encoded)\n    } else {\n      staticParams.push(encoded)\n    }\n  }\n\n  // 3. Concatenate static and dynamic parts.\n  return concat([...staticParams, ...dynamicParams])\n}\n\n/////////////////////////////////////////////////////////////////\n\nexport type EncodeAddressErrorType =\n  | InvalidAddressErrorType\n  | IsAddressErrorType\n  | ErrorType\n\nfunction encodeAddress(value: Hex): PreparedParam {\n  if (!isAddress(value)) throw new InvalidAddressError({ address: value })\n  return { dynamic: false, encoded: padHex(value.toLowerCase() as Hex) }\n}\n\nexport type EncodeArrayErrorType =\n  | AbiEncodingArrayLengthMismatchErrorType\n  | ConcatErrorType\n  | EncodeParamsErrorType\n  | InvalidArrayErrorType\n  | NumberToHexErrorType\n  | PrepareParamErrorType\n  | ErrorType\n\nfunction encodeArray<const TParam extends AbiParameter>(\n  value: AbiParameterToPrimitiveType<TParam>,\n  {\n    length,\n    param,\n  }: {\n    length: number | null\n    param: TParam\n  },\n): PreparedParam {\n  const dynamic = length === null\n\n  if (!Array.isArray(value)) throw new InvalidArrayError(value)\n  if (!dynamic && value.length !== length)\n    throw new AbiEncodingArrayLengthMismatchError({\n      expectedLength: length!,\n      givenLength: value.length,\n      type: `${param.type}[${length}]`,\n    })\n\n  let dynamicChild = false\n  const preparedParams: PreparedParam[] = []\n  for (let i = 0; i < value.length; i++) {\n    const preparedParam = prepareParam({ param, value: value[i] })\n    if (preparedParam.dynamic) dynamicChild = true\n    preparedParams.push(preparedParam)\n  }\n\n  if (dynamic || dynamicChild) {\n    const data = encodeParams(preparedParams)\n    if (dynamic) {\n      const length = numberToHex(preparedParams.length, { size: 32 })\n      return {\n        dynamic: true,\n        encoded: preparedParams.length > 0 ? concat([length, data]) : length,\n      }\n    }\n    if (dynamicChild) return { dynamic: true, encoded: data }\n  }\n  return {\n    dynamic: false,\n    encoded: concat(preparedParams.map(({ encoded }) => encoded)),\n  }\n}\n\nexport type EncodeBytesErrorType =\n  | AbiEncodingBytesSizeMismatchErrorType\n  | ConcatErrorType\n  | PadHexErrorType\n  | NumberToHexErrorType\n  | SizeErrorType\n  | ErrorType\n\nfunction encodeBytes<const TParam extends AbiParameter>(\n  value: Hex,\n  { param }: { param: TParam },\n): PreparedParam {\n  const [, paramSize] = param.type.split('bytes')\n  const bytesSize = size(value)\n  if (!paramSize) {\n    let value_ = value\n    // If the size is not divisible by 32 bytes, pad the end\n    // with empty bytes to the ceiling 32 bytes.\n    if (bytesSize % 32 !== 0)\n      value_ = padHex(value_, {\n        dir: 'right',\n        size: Math.ceil((value.length - 2) / 2 / 32) * 32,\n      })\n    return {\n      dynamic: true,\n      encoded: concat([padHex(numberToHex(bytesSize, { size: 32 })), value_]),\n    }\n  }\n  if (bytesSize !== parseInt(paramSize))\n    throw new AbiEncodingBytesSizeMismatchError({\n      expectedSize: parseInt(paramSize),\n      value,\n    })\n  return { dynamic: false, encoded: padHex(value, { dir: 'right' }) }\n}\n\nexport type EncodeBoolErrorType =\n  | PadHexErrorType\n  | BoolToHexErrorType\n  | ErrorType\n\nfunction encodeBool(value: boolean): PreparedParam {\n  return { dynamic: false, encoded: padHex(boolToHex(value)) }\n}\n\nexport type EncodeNumberErrorType = NumberToHexErrorType | ErrorType\n\nfunction encodeNumber(\n  value: number,\n  { signed }: { signed: boolean },\n): PreparedParam {\n  return {\n    dynamic: false,\n    encoded: numberToHex(value, {\n      size: 32,\n      signed,\n    }),\n  }\n}\n\nexport type EncodeStringErrorType =\n  | ConcatErrorType\n  | NumberToHexErrorType\n  | PadHexErrorType\n  | SizeErrorType\n  | SliceErrorType\n  | StringToHexErrorType\n  | ErrorType\n\nfunction encodeString(value: string): PreparedParam {\n  const hexValue = stringToHex(value)\n  const partsLength = Math.ceil(size(hexValue) / 32)\n  const parts: Hex[] = []\n  for (let i = 0; i < partsLength; i++) {\n    parts.push(\n      padHex(slice(hexValue, i * 32, (i + 1) * 32), {\n        dir: 'right',\n      }),\n    )\n  }\n  return {\n    dynamic: true,\n    encoded: concat([\n      padHex(numberToHex(size(hexValue), { size: 32 })),\n      ...parts,\n    ]),\n  }\n}\n\nexport type EncodeTupleErrorType =\n  | ConcatErrorType\n  | EncodeParamsErrorType\n  | PrepareParamErrorType\n  | ErrorType\n\nfunction encodeTuple<\n  const TParam extends AbiParameter & { components: readonly AbiParameter[] },\n>(\n  value: AbiParameterToPrimitiveType<TParam>,\n  { param }: { param: TParam },\n): PreparedParam {\n  let dynamic = false\n  const preparedParams: PreparedParam[] = []\n  for (let i = 0; i < param.components.length; i++) {\n    const param_ = param.components[i]\n    const index = Array.isArray(value) ? i : param_.name\n    const preparedParam = prepareParam({\n      param: param_,\n      value: (value as any)[index!] as readonly unknown[],\n    })\n    preparedParams.push(preparedParam)\n    if (preparedParam.dynamic) dynamic = true\n  }\n  return {\n    dynamic,\n    encoded: dynamic\n      ? encodeParams(preparedParams)\n      : concat(preparedParams.map(({ encoded }) => encoded)),\n  }\n}\n\nexport type GetArrayComponentsErrorType = ErrorType\n\nexport function getArrayComponents(\n  type: string,\n): [length: number | null, innerType: string] | undefined {\n  const matches = type.match(/^(.*)\\[(\\d+)?\\]$/)\n  return matches\n    ? // Return `null` if the array is dynamic.\n      [matches[2] ? Number(matches[2]) : null, matches[1]]\n    : undefined\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3462, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3468, "column": 0}, "map": {"version":3,"file":"getAddress.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/address/getAddress.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport { InvalidAddressError } from '../../errors/address.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type StringToBytesErrorType,\n  stringToBytes,\n} from '../encoding/toBytes.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport { type IsAddressErrorType, isAddress } from './isAddress.js'\n\nexport type ChecksumAddressErrorType =\n  | Keccak256ErrorType\n  | StringToBytesErrorType\n  | ErrorType\n\nexport function checksumAddress(address_: Address, chainId?: number): Address {\n  const hexAddress = chainId\n    ? `${chainId}${address_.toLowerCase()}`\n    : address_.substring(2).toLowerCase()\n  const hash = keccak256(stringToBytes(hexAddress), 'bytes')\n\n  const address = (\n    chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress\n  ).split('')\n  for (let i = 0; i < 40; i += 2) {\n    if (hash[i >> 1] >> 4 >= 8 && address[i]) {\n      address[i] = address[i].toUpperCase()\n    }\n    if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {\n      address[i + 1] = address[i + 1].toUpperCase()\n    }\n  }\n\n  return `0x${address.join('')}`\n}\n\nexport type GetAddressErrorType =\n  | ChecksumAddressErrorType\n  | IsAddressErrorType\n  | ErrorType\n\nexport function getAddress(address: string, chainId?: number): Address {\n  if (!isAddress(address)) throw new InvalidAddressError({ address })\n  return checksumAddress(address, chainId)\n}\n"],"names":[],"mappings":";;;;AAQA,OAAO,EAA2B,SAAS,EAAE,MAAM,sBAAsB,CAAA;AAJzE,OAAO,EAEL,aAAa,GACd,MAAM,wBAAwB,CAAA;AAE/B,OAAO,EAA2B,SAAS,EAAE,MAAM,gBAAgB,CAAA;AAPnE,OAAO,EAAE,mBAAmB,EAAE,MAAM,yBAAyB,CAAA;;;;;AAcvD,SAAU,eAAe,CAAC,QAAiB,EAAE,OAAgB;IACjE,MAAM,UAAU,GAAG,OAAO,GACtB,GAAG,OAAO,GAAG,QAAQ,CAAC,WAAW,EAAE,EAAE,GACrC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAA;IACvC,MAAM,IAAI,IAAG,sPAAA,AAAS,+OAAC,gBAAA,AAAa,EAAC,UAAU,CAAC,EAAE,OAAO,CAAC,CAAA;IAE1D,MAAM,OAAO,GAAG,CACd,OAAO,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,OAAO,CAAA,EAAA,CAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CACnE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;IACX,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,CAAE;QAC9B,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;YACxC,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAA;SACtC;QACD,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;YAChD,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,CAAA;SAC9C;KACF;IAED,OAAO,CAAA,EAAA,EAAK,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAA;AAChC,CAAC;AAOK,SAAU,UAAU,CAAC,OAAe,EAAE,OAAgB;IAC1D,IAAI,+OAAC,YAAA,AAAS,EAAC,OAAO,CAAC,EAAE,MAAM,kOAAI,sBAAmB,CAAC;QAAE,OAAO;IAAA,CAAE,CAAC,CAAA;IACnE,OAAO,eAAe,CAAC,OAAO,EAAE,OAAO,CAAC,CAAA;AAC1C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3500, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3506, "column": 0}, "map": {"version":3,"file":"decodeAbiParameters.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/abi/decodeAbiParameters.ts"],"sourcesContent":["import type {\n  AbiParameter,\n  AbiParameterToPrimitiveType,\n  AbiParametersToPrimitiveTypes,\n} from 'abitype'\n\nimport {\n  AbiDecodingDataSizeTooSmallError,\n  type AbiDecodingDataSizeTooSmallErrorType,\n  AbiDecodingZeroDataError,\n  type AbiDecodingZeroDataErrorType,\n  InvalidAbiDecodingTypeError,\n  type InvalidAbiDecodingTypeErrorType,\n} from '../../errors/abi.js'\nimport type { Hex } from '../../types/misc.js'\nimport {\n  type ChecksumAddressErrorType,\n  checksumAddress,\n} from '../address/getAddress.js'\nimport { type SizeErrorType, size } from '../data/size.js'\nimport { type SliceErrorType, slice } from '../data/slice.js'\nimport { type TrimErrorType, trim } from '../data/trim.js'\nimport {\n  type HexToBigIntErrorType,\n  type HexToBoolErrorType,\n  type HexToNumberErrorType,\n  type HexToStringErrorType,\n  hexToBigInt,\n  hexToBool,\n  hexToNumber,\n  hexToString,\n} from '../encoding/fromHex.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type GetArrayComponentsErrorType,\n  getArrayComponents,\n} from './encodeAbiParameters.js'\n\nexport type DecodeAbiParametersReturnType<\n  TParams extends\n    | readonly AbiParameter[]\n    | readonly unknown[] = readonly AbiParameter[],\n> = AbiParametersToPrimitiveTypes<\n  TParams extends readonly AbiParameter[] ? TParams : AbiParameter[]\n>\n\nexport type DecodeAbiParametersErrorType =\n  | AbiDecodingDataSizeTooSmallErrorType\n  | AbiDecodingZeroDataErrorType\n  | DecodeParamsErrorType\n  | SizeErrorType\n  | ErrorType\n\nexport function decodeAbiParameters<\n  const TParams extends readonly AbiParameter[] | readonly unknown[],\n>(params: TParams, data: Hex): DecodeAbiParametersReturnType<TParams> {\n  if (data === '0x' && (params as unknown[]).length > 0)\n    throw new AbiDecodingZeroDataError()\n  if (size(data) && size(data) < 32)\n    throw new AbiDecodingDataSizeTooSmallError({\n      data,\n      params: params as readonly AbiParameter[],\n      size: size(data),\n    })\n  return decodeParams({\n    data,\n    params: params as readonly AbiParameter[],\n  }) as unknown as DecodeAbiParametersReturnType<TParams>\n}\n\n////////////////////////////////////////////////////////////////////\n\ntype TupleAbiParameter = AbiParameter & { components: readonly AbiParameter[] }\n\ntype DecodeParamsErrorType = DecodeParamErrorType | SizeErrorType | ErrorType\n\nfunction decodeParams<const TParams extends readonly AbiParameter[]>({\n  data,\n  params,\n}: { data: Hex; params: TParams }) {\n  const decodedValues: unknown[] = []\n  let position = 0\n\n  for (let i = 0; i < params.length; i++) {\n    if (position >= size(data))\n      throw new AbiDecodingDataSizeTooSmallError({\n        data,\n        params,\n        size: size(data),\n      })\n\n    const param = params[i]\n    const { consumed, value } = decodeParam({ data, param, position })\n    decodedValues.push(value)\n    // Step across the data by the amount of data consumed by this parameter.\n    position += consumed\n  }\n\n  return decodedValues as unknown as AbiParametersToPrimitiveTypes<TParams>\n}\n\ntype DecodeParamErrorType =\n  | DecodeArrayErrorType\n  | DecodeTupleErrorType\n  | DecodeStringErrorType\n  | DecodeBytesErrorType\n  | DecodeNumberErrorType\n  | DecodeAddressErrorType\n  | DecodeBoolErrorType\n  | InvalidAbiDecodingTypeErrorType\n  | ErrorType\n\nfunction decodeParam({\n  data,\n  param,\n  position,\n}: { data: Hex; param: AbiParameter; position: number }): {\n  consumed: number\n  value: any\n} {\n  const arrayComponents = getArrayComponents(param.type)\n  if (arrayComponents) {\n    const [length, type] = arrayComponents\n    return decodeArray(data, {\n      length,\n      param: { ...param, type: type } as AbiParameter,\n      position,\n    })\n  }\n  if (param.type === 'tuple') {\n    return decodeTuple(data, { param: param as TupleAbiParameter, position })\n  }\n  if (param.type === 'string') {\n    return decodeString(data, { position })\n  }\n  if (param.type.startsWith('bytes')) {\n    return decodeBytes(data, { param, position })\n  }\n\n  const value = slice(data, position, position + 32, { strict: true }) as Hex\n  if (param.type.startsWith('uint') || param.type.startsWith('int')) {\n    return decodeNumber(value, { param })\n  }\n  if (param.type === 'address') {\n    return decodeAddress(value)\n  }\n  if (param.type === 'bool') {\n    return decodeBool(value)\n  }\n  throw new InvalidAbiDecodingTypeError(param.type, {\n    docsPath: '/docs/contract/decodeAbiParameters',\n  })\n}\n\n////////////////////////////////////////////////////////////////////\n\ntype DecodeAddressErrorType =\n  | ChecksumAddressErrorType\n  | SliceErrorType\n  | ErrorType\n\nfunction decodeAddress(value: Hex) {\n  return { consumed: 32, value: checksumAddress(slice(value, -20)) }\n}\n\ntype DecodeArrayErrorType = HexToNumberErrorType | SliceErrorType | ErrorType\n\nfunction decodeArray<const TParam extends AbiParameter>(\n  data: Hex,\n  {\n    param,\n    length,\n    position,\n  }: {\n    param: TParam\n    length: number | null\n    position: number\n  },\n) {\n  // If the length of the array is not known in advance (dynamic array),\n  // we will need to decode the offset of the array data.\n  if (!length) {\n    // Get the offset of the array data.\n    const offset = hexToNumber(\n      slice(data, position, position + 32, { strict: true }),\n    )\n    // Get the length of the array from the offset.\n    const length = hexToNumber(\n      slice(data, offset, offset + 32, { strict: true }),\n    )\n\n    let consumed = 0\n    const value: AbiParameterToPrimitiveType<TParam>[] = []\n    for (let i = 0; i < length; ++i) {\n      const decodedChild = decodeParam({\n        data: slice(data, offset + 32),\n        param,\n        position: consumed,\n      })\n      consumed += decodedChild.consumed\n      value.push(decodedChild.value)\n    }\n    return { value, consumed: 32 }\n  }\n\n  // If the length of the array is known in advance,\n  // and the length of an element deeply nested in the array is not known,\n  // we need to decode the offset of the array data.\n  if (hasDynamicChild(param)) {\n    // Get the child type of the array.\n    const arrayComponents = getArrayComponents(param.type)\n    // If the child type is not known, the array is dynamic.\n    const dynamicChild = !arrayComponents?.[0]\n\n    let consumed = 0\n    const value: AbiParameterToPrimitiveType<TParam>[] = []\n    for (let i = 0; i < length; ++i) {\n      const offset = hexToNumber(\n        slice(data, position, position + 32, { strict: true }),\n      )\n      const decodedChild = decodeParam({\n        data: slice(data, offset),\n        param,\n        position: dynamicChild ? consumed : i * 32,\n      })\n      consumed += decodedChild.consumed\n      value.push(decodedChild.value)\n    }\n    return { value, consumed: 32 }\n  }\n\n  // If the length of the array is known in advance,\n  // and the length of each element in the array is known,\n  // the array data is encoded contiguously after the array.\n  let consumed = 0\n  const value: AbiParameterToPrimitiveType<TParam>[] = []\n  for (let i = 0; i < length; ++i) {\n    const decodedChild = decodeParam({\n      data,\n      param,\n      position: position + consumed,\n    })\n    consumed += decodedChild.consumed\n    value.push(decodedChild.value)\n  }\n  return { value, consumed }\n}\n\ntype DecodeBoolErrorType = HexToBoolErrorType | ErrorType\n\nfunction decodeBool(value: Hex) {\n  return { consumed: 32, value: hexToBool(value) }\n}\n\ntype DecodeBytesErrorType = HexToNumberErrorType | SliceErrorType | ErrorType\n\nfunction decodeBytes<const TParam extends AbiParameter>(\n  data: Hex,\n  { param, position }: { param: TParam; position: number },\n) {\n  const [_, size] = param.type.split('bytes')\n  if (!size) {\n    // If we don't have a size, we're dealing with a dynamic-size array\n    // so we need to read the offset of the data part first.\n    const offset = hexToNumber(\n      slice(data, position, position + 32, { strict: true }),\n    )\n    const length = hexToNumber(\n      slice(data, offset, offset + 32, { strict: true }),\n    )\n    // If there is no length, we have zero data.\n    if (length === 0) return { consumed: 32, value: '0x' }\n    const value = slice(data, offset + 32, offset + 32 + length, {\n      strict: true,\n    })\n    return { consumed: 32, value }\n  }\n\n  const value = slice(data, position, position + parseInt(size), {\n    strict: true,\n  })\n  return { consumed: 32, value }\n}\n\ntype DecodeNumberErrorType =\n  | HexToBigIntErrorType\n  | HexToNumberErrorType\n  | ErrorType\n\nfunction decodeNumber<const TParam extends AbiParameter>(\n  value: Hex,\n  { param }: { param: TParam },\n) {\n  const signed = param.type.startsWith('int')\n  const size = parseInt(param.type.split('int')[1] || '256')\n  return {\n    consumed: 32,\n    value:\n      size > 48\n        ? hexToBigInt(value, { signed })\n        : hexToNumber(value, { signed }),\n  }\n}\n\ntype DecodeStringErrorType =\n  | HexToNumberErrorType\n  | HexToStringErrorType\n  | SliceErrorType\n  | TrimErrorType\n  | ErrorType\n\nfunction decodeString(data: Hex, { position }: { position: number }) {\n  const offset = hexToNumber(\n    slice(data, position, position + 32, { strict: true }),\n  )\n  const length = hexToNumber(slice(data, offset, offset + 32, { strict: true }))\n  // If there is no length, we have zero data (empty string).\n  if (length === 0) return { consumed: 32, value: '' }\n  const value = hexToString(\n    trim(slice(data, offset + 32, offset + 32 + length, { strict: true })),\n  )\n  return { consumed: 32, value }\n}\n\ntype DecodeTupleErrorType =\n  | HasDynamicChildErrorType\n  | HexToNumberErrorType\n  | SliceErrorType\n  | ErrorType\n\nfunction decodeTuple<\n  const TParam extends AbiParameter & { components: readonly AbiParameter[] },\n>(data: Hex, { param, position }: { param: TParam; position: number }) {\n  // Tuples can have unnamed components (i.e. they are arrays), so we must\n  // determine whether the tuple is named or unnamed. In the case of a named\n  // tuple, the value will be an object where each property is the name of the\n  // component. In the case of an unnamed tuple, the value will be an array.\n  const hasUnnamedChild =\n    param.components.length === 0 || param.components.some(({ name }) => !name)\n\n  // Initialize the value to an object or an array, depending on whether the\n  // tuple is named or unnamed.\n  const value: any = hasUnnamedChild ? [] : {}\n  let consumed = 0\n\n  // If the tuple has a dynamic child, we must first decode the offset to the\n  // tuple data.\n  if (hasDynamicChild(param)) {\n    const offset = hexToNumber(\n      slice(data, position, position + 32, { strict: true }),\n    )\n    // Decode each component of the tuple, starting at the offset.\n    for (let i = 0; i < param.components.length; ++i) {\n      const component = param.components[i]\n      const decodedChild = decodeParam({\n        data: slice(data, offset),\n        param: component,\n        position: consumed,\n      })\n      consumed += decodedChild.consumed\n      value[hasUnnamedChild ? i : component?.name!] = decodedChild.value\n    }\n    return { consumed: 32, value }\n  }\n\n  // If the tuple has static children, we can just decode each component\n  // in sequence.\n  for (let i = 0; i < param.components.length; ++i) {\n    const component = param.components[i]\n    const decodedChild = decodeParam({\n      data,\n      param: component,\n      position: position + consumed,\n    })\n    consumed += decodedChild.consumed\n    value[hasUnnamedChild ? i : component?.name!] = decodedChild.value\n  }\n  return { consumed, value }\n}\n\ntype HasDynamicChildErrorType = GetArrayComponentsErrorType | ErrorType\n\nfunction hasDynamicChild(param: AbiParameter) {\n  const { type } = param\n  if (type === 'string') return true\n  if (type === 'bytes') return true\n  if (type.endsWith('[]')) return true\n\n  if (type === 'tuple') return (param as any).components?.some(hasDynamicChild)\n\n  const arrayComponents = getArrayComponents(param.type)\n  if (\n    arrayComponents &&\n    hasDynamicChild({ ...param, type: arrayComponents[1] } as AbiParameter)\n  )\n    return true\n\n  return false\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3816, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3822, "column": 0}, "map": {"version":3,"file":"decodeErrorResult.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/abi/decodeErrorResult.ts"],"sourcesContent":["import type { Abi, ExtractAbiError, ExtractAbiErrorNames } from 'abitype'\n\nimport { solidityError, solidityPanic } from '../../constants/solidity.js'\nimport {\n  AbiDecodingZeroDataError,\n  type AbiDecodingZeroDataErrorType,\n  AbiErrorSignatureNotFoundError,\n  type AbiErrorSignatureNotFoundErrorType,\n} from '../../errors/abi.js'\nimport type { AbiItem, GetErrorArgs } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport { slice } from '../data/slice.js'\nimport {\n  type GetFunctionSelectorErrorType,\n  getFunctionSelector,\n} from '../hash/getFunctionSelector.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type DecodeAbiParametersErrorType,\n  decodeAbiParameters,\n} from './decodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\n\nexport type DecodeErrorResultParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n> = { abi?: TAbi; data: Hex }\n\nexport type DecodeErrorResultReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  _ErrorNames extends string = TAbi extends Abi\n    ? Abi extends TAbi\n      ? string\n      : ExtractAbiErrorNames<TAbi>\n    : string,\n> = {\n  [TName in _ErrorNames]: {\n    abiItem: TAbi extends Abi ? ExtractAbiError<TAbi, TName> : AbiItem\n    args: GetErrorArgs<TAbi, TName>['args']\n    errorName: TName\n  }\n}[_ErrorNames]\n\nexport type DecodeErrorResultErrorType =\n  | AbiDecodingZeroDataErrorType\n  | AbiErrorSignatureNotFoundErrorType\n  | DecodeAbiParametersErrorType\n  | FormatAbiItemErrorType\n  | GetFunctionSelectorErrorType\n  | ErrorType\n\nexport function decodeErrorResult<const TAbi extends Abi | readonly unknown[]>({\n  abi,\n  data,\n}: DecodeErrorResultParameters<TAbi>): DecodeErrorResultReturnType<TAbi> {\n  const signature = slice(data, 0, 4)\n  if (signature === '0x') throw new AbiDecodingZeroDataError()\n\n  const abi_ = [...((abi as Abi) || []), solidityError, solidityPanic]\n  const abiItem = abi_.find(\n    (x) =>\n      x.type === 'error' && signature === getFunctionSelector(formatAbiItem(x)),\n  )\n  if (!abiItem)\n    throw new AbiErrorSignatureNotFoundError(signature, {\n      docsPath: '/docs/contract/decodeErrorResult',\n    })\n  return {\n    abiItem,\n    args: ('inputs' in abiItem && abiItem.inputs && abiItem.inputs.length > 0\n      ? decodeAbiParameters(abiItem.inputs, slice(data, 4))\n      : undefined) as readonly unknown[] | undefined,\n    errorName: (abiItem as { name: string }).name,\n  } as DecodeErrorResultReturnType<TAbi>\n}\n"],"names":[],"mappings":";;;AAWA,OAAO,EAAE,KAAK,EAAE,MAAM,kBAAkB,CAAA;AARxC,OAAO,EACL,wBAAwB,EAExB,8BAA8B,GAE/B,MAAM,qBAAqB,CAAA;AAN5B,OAAO,EAAE,aAAa,EAAE,aAAa,EAAE,MAAM,6BAA6B,CAAA;AAU1E,OAAO,EAEL,mBAAmB,GACpB,MAAM,gCAAgC,CAAA;AAOvC,OAAO,EAA+B,aAAa,EAAE,MAAM,oBAAoB,CAAA;AAJ/E,OAAO,EAEL,mBAAmB,GACpB,MAAM,0BAA0B,CAAA;;;;;;;AA8B3B,SAAU,iBAAiB,CAA8C,EAC7E,GAAG,EACH,IAAI,EAC8B;IAClC,MAAM,SAAS,GAAG,+OAAA,AAAK,EAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;IACnC,IAAI,SAAS,KAAK,IAAI,EAAE,MAAM,8NAAI,2BAAwB,EAAE,CAAA;IAE5D,MAAM,IAAI,GAAG,CAAC,GAAG;WAAE,GAAW,IAAI,EAAE,CAAC;0OAAE,gBAAa;0OAAE,gBAAa;KAAC,CAAA;IACpE,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CACvB,CAAC,CAAC,EAAE,CACF,CAAC,AADG,CACF,IAAI,KAAK,OAAO,IAAI,SAAS,0PAAK,sBAAA,AAAmB,GAAC,6PAAA,AAAa,EAAC,CAAC,CAAC,CAAC,CAC5E,CAAA;IACD,IAAI,CAAC,OAAO,EACV,MAAM,8NAAI,iCAA8B,CAAC,SAAS,EAAE;QAClD,QAAQ,EAAE,kCAAkC;KAC7C,CAAC,CAAA;IACJ,OAAO;QACL,OAAO;QACP,IAAI,EAAE,AAAC,QAAQ,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,uPACrE,sBAAA,AAAmB,EAAC,OAAO,CAAC,MAAM,yOAAE,QAAA,AAAK,EAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GACnD,SAAS,CAAmC;QAChD,SAAS,EAAG,OAA4B,CAAC,IAAI;KACT,CAAA;AACxC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3855, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3861, "column": 0}, "map": {"version":3,"file":"contract.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/errors/contract.ts"],"sourcesContent":["import type { Abi, Address } from 'abitype'\n\nimport { parseAccount } from '../accounts/utils/parseAccount.js'\nimport type { CallParameters } from '../actions/public/call.js'\nimport { panicReasons } from '../constants/solidity.js'\nimport type { Chain } from '../types/chain.js'\nimport type { Hex } from '../types/misc.js'\nimport {\n  type DecodeErrorResultReturnType,\n  decodeErrorResult,\n} from '../utils/abi/decodeErrorResult.js'\nimport { formatAbiItem } from '../utils/abi/formatAbiItem.js'\nimport { formatAbiItemWithArgs } from '../utils/abi/formatAbiItemWithArgs.js'\nimport { getAbiItem } from '../utils/abi/getAbiItem.js'\nimport { formatEther } from '../utils/unit/formatEther.js'\nimport { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { AbiErrorSignatureNotFoundError } from './abi.js'\nimport { BaseError } from './base.js'\nimport { prettyPrint } from './transaction.js'\nimport { getContractAddress } from './utils.js'\n\nexport type CallExecutionErrorType = CallExecutionError & {\n  name: 'CallExecutionError'\n}\nexport class CallExecutionError extends BaseError {\n  override cause: BaseError\n\n  override name = 'CallExecutionError'\n\n  constructor(\n    cause: BaseError,\n    {\n      account: account_,\n      docsPath,\n      chain,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    }: CallParameters & { chain?: Chain; docsPath?: string },\n  ) {\n    const account = account_ ? parseAccount(account_) : undefined\n    const prettyArgs = prettyPrint({\n      from: account?.address,\n      to,\n      value:\n        typeof value !== 'undefined' &&\n        `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n      data,\n      gas,\n      gasPrice:\n        typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n      maxFeePerGas:\n        typeof maxFeePerGas !== 'undefined' &&\n        `${formatGwei(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas:\n        typeof maxPriorityFeePerGas !== 'undefined' &&\n        `${formatGwei(maxPriorityFeePerGas)} gwei`,\n      nonce,\n    })\n\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [\n        ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n        'Raw Call Arguments:',\n        prettyArgs,\n      ].filter(Boolean) as string[],\n    })\n    this.cause = cause\n  }\n}\n\nexport type ContractFunctionExecutionErrorType =\n  ContractFunctionExecutionError & {\n    name: 'ContractFunctionExecutionError'\n  }\nexport class ContractFunctionExecutionError extends BaseError {\n  abi: Abi\n  args?: unknown[]\n  override cause: BaseError\n  contractAddress?: Address\n  formattedArgs?: string\n  functionName: string\n  sender?: Address\n\n  override name = 'ContractFunctionExecutionError'\n\n  constructor(\n    cause: BaseError,\n    {\n      abi,\n      args,\n      contractAddress,\n      docsPath,\n      functionName,\n      sender,\n    }: {\n      abi: Abi\n      args?: any\n      contractAddress?: Address\n      docsPath?: string\n      functionName: string\n      sender?: Address\n    },\n  ) {\n    const abiItem = getAbiItem({ abi, args, name: functionName })\n    const formattedArgs = abiItem\n      ? formatAbiItemWithArgs({\n          abiItem,\n          args,\n          includeFunctionName: false,\n          includeName: false,\n        })\n      : undefined\n    const functionWithParams = abiItem\n      ? formatAbiItem(abiItem, { includeName: true })\n      : undefined\n\n    const prettyArgs = prettyPrint({\n      address: contractAddress && getContractAddress(contractAddress),\n      function: functionWithParams,\n      args:\n        formattedArgs &&\n        formattedArgs !== '()' &&\n        `${[...Array(functionName?.length ?? 0).keys()]\n          .map(() => ' ')\n          .join('')}${formattedArgs}`,\n      sender,\n    })\n\n    super(\n      cause.shortMessage ||\n        `An unknown error occurred while executing the contract function \"${functionName}\".`,\n      {\n        cause,\n        docsPath,\n        metaMessages: [\n          ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n          'Contract Call:',\n          prettyArgs,\n        ].filter(Boolean) as string[],\n      },\n    )\n    this.abi = abi\n    this.args = args\n    this.cause = cause\n    this.contractAddress = contractAddress\n    this.functionName = functionName\n    this.sender = sender\n  }\n}\n\nexport type ContractFunctionRevertedErrorType =\n  ContractFunctionRevertedError & {\n    name: 'ContractFunctionRevertedError'\n  }\nexport class ContractFunctionRevertedError extends BaseError {\n  override name = 'ContractFunctionRevertedError'\n\n  data?: DecodeErrorResultReturnType\n  reason?: string\n  signature?: Hex\n\n  constructor({\n    abi,\n    data,\n    functionName,\n    message,\n  }: { abi: Abi; data?: Hex; functionName: string; message?: string }) {\n    let cause: Error | undefined\n    let decodedData: DecodeErrorResultReturnType | undefined = undefined\n    let metaMessages\n    let reason\n    if (data && data !== '0x') {\n      try {\n        decodedData = decodeErrorResult({ abi, data })\n        const { abiItem, errorName, args: errorArgs } = decodedData\n        if (errorName === 'Error') {\n          reason = (errorArgs as [string])[0]\n        } else if (errorName === 'Panic') {\n          const [firstArg] = errorArgs as [number]\n          reason = panicReasons[firstArg as keyof typeof panicReasons]\n        } else {\n          const errorWithParams = abiItem\n            ? formatAbiItem(abiItem, { includeName: true })\n            : undefined\n          const formattedArgs =\n            abiItem && errorArgs\n              ? formatAbiItemWithArgs({\n                  abiItem,\n                  args: errorArgs,\n                  includeFunctionName: false,\n                  includeName: false,\n                })\n              : undefined\n\n          metaMessages = [\n            errorWithParams ? `Error: ${errorWithParams}` : '',\n            formattedArgs && formattedArgs !== '()'\n              ? `       ${[...Array(errorName?.length ?? 0).keys()]\n                  .map(() => ' ')\n                  .join('')}${formattedArgs}`\n              : '',\n          ]\n        }\n      } catch (err) {\n        cause = err as Error\n      }\n    } else if (message) reason = message\n\n    let signature: Hex | undefined\n    if (cause instanceof AbiErrorSignatureNotFoundError) {\n      signature = cause.signature\n      metaMessages = [\n        `Unable to decode signature \"${signature}\" as it was not found on the provided ABI.`,\n        'Make sure you are using the correct ABI and that the error exists on it.',\n        `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ]\n    }\n\n    super(\n      (reason && reason !== 'execution reverted') || signature\n        ? [\n            `The contract function \"${functionName}\" reverted with the following ${\n              signature ? 'signature' : 'reason'\n            }:`,\n            reason || signature,\n          ].join('\\n')\n        : `The contract function \"${functionName}\" reverted.`,\n      {\n        cause,\n        metaMessages,\n      },\n    )\n\n    this.data = decodedData\n    this.reason = reason\n    this.signature = signature\n  }\n}\n\nexport type ContractFunctionZeroDataErrorType =\n  ContractFunctionZeroDataError & {\n    name: 'ContractFunctionZeroDataError'\n  }\nexport class ContractFunctionZeroDataError extends BaseError {\n  override name = 'ContractFunctionZeroDataError'\n  constructor({ functionName }: { functionName: string }) {\n    super(`The contract function \"${functionName}\" returned no data (\"0x\").`, {\n      metaMessages: [\n        'This could be due to any of the following:',\n        `  - The contract does not have the function \"${functionName}\",`,\n        '  - The parameters passed to the contract function may be invalid, or',\n        '  - The address is not a contract.',\n      ],\n    })\n  }\n}\n\nexport type RawContractErrorType = RawContractError & {\n  name: 'RawContractError'\n}\nexport class RawContractError extends BaseError {\n  code = 3\n  override name = 'RawContractError'\n\n  data?: Hex | { data?: Hex }\n\n  constructor({\n    data,\n    message,\n  }: { data?: Hex | { data?: Hex }; message?: string }) {\n    super(message || '')\n    this.data = data\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4151, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4157, "column": 0}, "map": {"version":3,"file":"getCallError.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/errors/getCallError.ts"],"sourcesContent":["import type { CallParameters } from '../../actions/public/call.js'\nimport type { BaseError } from '../../errors/base.js'\nimport {\n  CallExecutionError,\n  type CallExecutionErrorType,\n} from '../../errors/contract.js'\nimport { UnknownNodeError } from '../../errors/node.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\n\nimport {\n  type GetNodeErrorParameters,\n  type GetNodeErrorReturnType,\n  getNodeError,\n} from './getNodeError.js'\n\nexport type GetCallErrorReturnType<cause = ErrorType> = Omit<\n  CallExecutionErrorType,\n  'cause'\n> & {\n  cause: cause | GetNodeErrorReturnType\n}\n\nexport function getCallError<err extends ErrorType<string>>(\n  err: err,\n  {\n    docsPath,\n    ...args\n  }: CallParameters & {\n    chain?: Chain\n    docsPath?: string\n  },\n): GetCallErrorReturnType<err> {\n  const cause = (() => {\n    const cause = getNodeError(\n      err as {} as BaseError,\n      args as GetNodeErrorParameters,\n    )\n    if (cause instanceof UnknownNodeError) return err as {} as BaseError\n    return cause\n  })()\n  return new CallExecutionError(cause, {\n    docsPath,\n    ...args,\n  }) as GetCallErrorReturnType<err>\n}\n"],"names":[],"mappings":";;;AAUA,OAAO,EAGL,YAAY,GACb,MAAM,mBAAmB,CAAA;AAR1B,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAA;AAJvD,OAAO,EACL,kBAAkB,GAEnB,MAAM,0BAA0B,CAAA;;;;AAkB3B,SAAU,YAAY,CAC1B,GAAQ,EACR,EACE,QAAQ,EACR,GAAG,IAAI,EAIR;IAED,MAAM,KAAK,GAAG,CAAC,GAAG,EAAE;QAClB,MAAM,KAAK,mPAAG,eAAY,AAAZ,EACZ,GAAsB,EACtB,IAA8B,CAC/B,CAAA;QACD,IAAI,KAAK,uOAAY,mBAAgB,EAAE,OAAO,GAAsB,CAAA;QACpE,OAAO,KAAK,CAAA;IACd,CAAC,CAAC,EAAE,CAAA;IACJ,OAAO,mOAAI,qBAAkB,CAAC,KAAK,EAAE;QACnC,QAAQ;QACR,GAAG,IAAI;KACR,CAAgC,CAAA;AACnC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4177, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4183, "column": 0}, "map": {"version":3,"file":"contract.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/constants/contract.ts"],"sourcesContent":["export const aggregate3Signature = '0x82ad56cb'\n"],"names":[],"mappings":";;;AAAO,MAAM,mBAAmB,GAAG,YAAY,CAAA","ignoreList":[0]}},
    {"offset": {"line": 4187, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4193, "column": 0}, "map": {"version":3,"file":"getChainContractAddress.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/chain/getChainContractAddress.ts"],"sourcesContent":["import {\n  ChainDoesNotSupportContract,\n  type ChainDoesNotSupportContractErrorType,\n} from '../../errors/chain.js'\nimport type { Chain, ChainContract } from '../../types/chain.js'\n\nexport type GetChainContractAddressErrorType =\n  ChainDoesNotSupportContractErrorType\n\nexport function getChainContractAddress({\n  blockNumber,\n  chain,\n  contract: name,\n}: {\n  blockNumber?: bigint\n  chain: Chain\n  contract: string\n}) {\n  const contract = (chain?.contracts as Record<string, ChainContract>)?.[name]\n  if (!contract)\n    throw new ChainDoesNotSupportContract({\n      chain,\n      contract: { name },\n    })\n\n  if (\n    blockNumber &&\n    contract.blockCreated &&\n    contract.blockCreated > blockNumber\n  )\n    throw new ChainDoesNotSupportContract({\n      blockNumber,\n      chain,\n      contract: {\n        name,\n        blockCreated: contract.blockCreated,\n      },\n    })\n\n  return contract.address\n}\n"],"names":[],"mappings":";;;AAAA,OAAO,EACL,2BAA2B,GAE5B,MAAM,uBAAuB,CAAA;;AAMxB,SAAU,uBAAuB,CAAC,EACtC,WAAW,EACX,KAAK,EACL,QAAQ,EAAE,IAAI,EAKf;IACC,MAAM,QAAQ,GAAI,KAAK,EAAE,SAA2C,EAAE,CAAC,IAAI,CAAC,CAAA;IAC5E,IAAI,CAAC,QAAQ,EACX,MAAM,gOAAI,8BAA2B,CAAC;QACpC,KAAK;QACL,QAAQ,EAAE;YAAE,IAAI;QAAA,CAAE;KACnB,CAAC,CAAA;IAEJ,IACE,WAAW,IACX,QAAQ,CAAC,YAAY,IACrB,QAAQ,CAAC,YAAY,GAAG,WAAW,EAEnC,MAAM,gOAAI,8BAA2B,CAAC;QACpC,WAAW;QACX,KAAK;QACL,QAAQ,EAAE;YACR,IAAI;YACJ,YAAY,EAAE,QAAQ,CAAC,YAAY;SACpC;KACF,CAAC,CAAA;IAEJ,OAAO,QAAQ,CAAC,OAAO,CAAA;AACzB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4216, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4222, "column": 0}, "map": {"version":3,"file":"createBatchScheduler.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/promise/createBatchScheduler.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\n\ntype Resolved<TReturnType extends readonly unknown[] = any> = [\n  result: TReturnType[number],\n  results: TReturnType,\n]\n\ntype PendingPromise<TReturnType extends readonly unknown[] = any> = {\n  resolve?: (data: Resolved<TReturnType>) => void\n  reject?: (reason?: unknown) => void\n}\n\ntype SchedulerItem = { args: unknown; pendingPromise: PendingPromise }\n\ntype BatchResultsCompareFn<TResult = unknown> = (\n  a: TResult,\n  b: TResult,\n) => number\n\nexport type CreateBatchSchedulerArguments<\n  TParameters = unknown,\n  TReturnType extends readonly unknown[] = readonly unknown[],\n> = {\n  fn: (args: TParameters[]) => Promise<TReturnType>\n  id: number | string\n  shouldSplitBatch?: (args: TParameters[]) => boolean\n  wait?: number\n  sort?: BatchResultsCompareFn<TReturnType[number]>\n}\n\nexport type CreateBatchSchedulerReturnType<\n  TParameters = unknown,\n  TReturnType extends readonly unknown[] = readonly unknown[],\n> = {\n  flush: () => void\n  schedule: TParameters extends undefined\n    ? (args?: TParameters) => Promise<Resolved<TReturnType>>\n    : (args: TParameters) => Promise<Resolved<TReturnType>>\n}\n\nexport type CreateBatchSchedulerErrorType = ErrorType\n\nconst schedulerCache = /*#__PURE__*/ new Map<number | string, SchedulerItem[]>()\n\nexport function createBatchScheduler<\n  TParameters,\n  TReturnType extends readonly unknown[],\n>({\n  fn,\n  id,\n  shouldSplitBatch,\n  wait = 0,\n  sort,\n}: CreateBatchSchedulerArguments<\n  TParameters,\n  TReturnType\n>): CreateBatchSchedulerReturnType<TParameters, TReturnType> {\n  const exec = async () => {\n    const scheduler = getScheduler()\n    flush()\n\n    const args = scheduler.map(({ args }) => args)\n\n    if (args.length === 0) return\n\n    fn(args as TParameters[])\n      .then((data) => {\n        if (sort && Array.isArray(data)) data.sort(sort)\n        for (let i = 0; i < scheduler.length; i++) {\n          const { pendingPromise } = scheduler[i]\n          pendingPromise.resolve?.([data[i], data])\n        }\n      })\n      .catch((err) => {\n        for (let i = 0; i < scheduler.length; i++) {\n          const { pendingPromise } = scheduler[i]\n          pendingPromise.reject?.(err)\n        }\n      })\n  }\n\n  const flush = () => schedulerCache.delete(id)\n\n  const getBatchedArgs = () =>\n    getScheduler().map(({ args }) => args) as TParameters[]\n\n  const getScheduler = () => schedulerCache.get(id) || []\n\n  const setScheduler = (item: SchedulerItem) =>\n    schedulerCache.set(id, [...getScheduler(), item])\n\n  return {\n    flush,\n    async schedule(args: TParameters) {\n      const pendingPromise: PendingPromise<TReturnType> = {}\n      const promise = new Promise<Resolved<TReturnType>>((resolve, reject) => {\n        pendingPromise.resolve = resolve\n        pendingPromise.reject = reject\n      })\n\n      const split = shouldSplitBatch?.([...getBatchedArgs(), args])\n\n      if (split) exec()\n\n      const hasActiveScheduler = getScheduler().length > 0\n      if (hasActiveScheduler) {\n        setScheduler({ args, pendingPromise })\n        return promise\n      }\n\n      setScheduler({ args, pendingPromise })\n      setTimeout(exec, wait)\n      return promise\n    },\n  } as unknown as CreateBatchSchedulerReturnType<TParameters, TReturnType>\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4285, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4291, "column": 0}, "map": {"version":3,"file":"encodeFunctionData.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/abi/encodeFunctionData.ts"],"sourcesContent":["import type { Abi } from 'abitype'\n\nimport {\n  AbiFunctionNotFoundError,\n  type AbiFunctionNotFoundErrorType,\n} from '../../errors/abi.js'\nimport type {\n  AbiItem,\n  GetFunctionArgs,\n  InferFunctionName,\n} from '../../types/contract.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\nimport {\n  type GetFunctionSelectorErrorType,\n  getFunctionSelector,\n} from '../hash/getFunctionSelector.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\nimport {\n  type GetAbiItemErrorType,\n  type GetAbiItemParameters,\n  getAbiItem,\n} from './getAbiItem.js'\n\nexport type EncodeFunctionDataParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string | undefined = string,\n  _FunctionName = InferFunctionName<TAbi, TFunctionName>,\n> = {\n  functionName?: _FunctionName\n} & (TFunctionName extends string\n  ? { abi: TAbi } & GetFunctionArgs<TAbi, TFunctionName>\n  : _FunctionName extends string\n    ? { abi: [TAbi[number]] } & GetFunctionArgs<TAbi, _FunctionName>\n    : never)\n\nexport type EncodeFunctionDataErrorType =\n  | AbiFunctionNotFoundErrorType\n  | ConcatHexErrorType\n  | EncodeAbiParametersErrorType\n  | FormatAbiItemErrorType\n  | GetAbiItemErrorType\n  | GetFunctionSelectorErrorType\n  | ErrorType\n\nexport function encodeFunctionData<\n  const TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string | undefined = undefined,\n>({\n  abi,\n  args,\n  functionName,\n}: EncodeFunctionDataParameters<TAbi, TFunctionName>) {\n  let abiItem = abi[0] as AbiItem\n  if (functionName) {\n    abiItem = getAbiItem({\n      abi,\n      args,\n      name: functionName,\n    } as GetAbiItemParameters)\n    if (!abiItem)\n      throw new AbiFunctionNotFoundError(functionName, {\n        docsPath: '/docs/contract/encodeFunctionData',\n      })\n  }\n\n  if (abiItem.type !== 'function')\n    throw new AbiFunctionNotFoundError(undefined, {\n      docsPath: '/docs/contract/encodeFunctionData',\n    })\n\n  const definition = formatAbiItem(abiItem)\n  const signature = getFunctionSelector(definition)\n  const data =\n    'inputs' in abiItem && abiItem.inputs\n      ? encodeAbiParameters(abiItem.inputs, (args ?? []) as readonly unknown[])\n      : undefined\n  return concatHex([signature, data ?? '0x'])\n}\n"],"names":[],"mappings":";;;AAuBA,OAAO,EAGL,UAAU,GACX,MAAM,iBAAiB,CAAA;AAzBxB,OAAO,EACL,wBAAwB,GAEzB,MAAM,qBAAqB,CAAA;AAiB5B,OAAO,EAA+B,aAAa,EAAE,MAAM,oBAAoB,CAAA;AAV/E,OAAO,EAEL,mBAAmB,GACpB,MAAM,gCAAgC,CAAA;AAGvC,OAAO,EAEL,mBAAmB,GACpB,MAAM,0BAA0B,CAAA;AAVjC,OAAO,EAA2B,SAAS,EAAE,MAAM,mBAAmB,CAAA;;;;;;;AAuChE,SAAU,kBAAkB,CAGhC,EACA,GAAG,EACH,IAAI,EACJ,YAAY,EACsC;IAClD,IAAI,OAAO,GAAG,GAAG,CAAC,CAAC,CAAY,CAAA;IAC/B,IAAI,YAAY,EAAE;QAChB,OAAO,8OAAG,aAAA,AAAU,EAAC;YACnB,GAAG;YACH,IAAI;YACJ,IAAI,EAAE,YAAY;SACK,CAAC,CAAA;QAC1B,IAAI,CAAC,OAAO,EACV,MAAM,8NAAI,2BAAwB,CAAC,YAAY,EAAE;YAC/C,QAAQ,EAAE,mCAAmC;SAC9C,CAAC,CAAA;KACL;IAED,IAAI,OAAO,CAAC,IAAI,KAAK,UAAU,EAC7B,MAAM,8NAAI,2BAAwB,CAAC,SAAS,EAAE;QAC5C,QAAQ,EAAE,mCAAmC;KAC9C,CAAC,CAAA;IAEJ,MAAM,UAAU,iPAAG,gBAAA,AAAa,EAAC,OAAO,CAAC,CAAA;IACzC,MAAM,SAAS,wPAAG,sBAAA,AAAmB,EAAC,UAAU,CAAC,CAAA;IACjD,MAAM,IAAI,GACR,QAAQ,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,uPACjC,sBAAA,AAAmB,EAAC,OAAO,CAAC,MAAM,EAAE,AAAC,IAAI,IAAI,EAAE,CAAuB,CAAC,EACvE,SAAS,CAAA;IACf,+OAAO,YAAA,AAAS,EAAC;QAAC,SAAS;QAAE,IAAI,IAAI,IAAI;KAAC,CAAC,CAAA;AAC7C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4329, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4335, "column": 0}, "map": {"version":3,"file":"abis.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/constants/abis.ts"],"sourcesContent":["/* [Multicall3](https://github.com/mds1/multicall) */\nexport const multicall3Abi = [\n  {\n    inputs: [\n      {\n        components: [\n          {\n            name: 'target',\n            type: 'address',\n          },\n          {\n            name: 'allowFailure',\n            type: 'bool',\n          },\n          {\n            name: 'callData',\n            type: 'bytes',\n          },\n        ],\n        name: 'calls',\n        type: 'tuple[]',\n      },\n    ],\n    name: 'aggregate3',\n    outputs: [\n      {\n        components: [\n          {\n            name: 'success',\n            type: 'bool',\n          },\n          {\n            name: 'returnData',\n            type: 'bytes',\n          },\n        ],\n        name: 'returnData',\n        type: 'tuple[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n] as const\n\nconst universalResolverErrors = [\n  {\n    inputs: [],\n    name: 'ResolverNotFound',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'ResolverWildcardNotSupported',\n    type: 'error',\n  },\n] as const\n\nexport const universalResolverResolveAbi = [\n  ...universalResolverErrors,\n  {\n    name: 'resolve',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'name', type: 'bytes' },\n      { name: 'data', type: 'bytes' },\n    ],\n    outputs: [\n      { name: '', type: 'bytes' },\n      { name: 'address', type: 'address' },\n    ],\n  },\n] as const\n\nexport const universalResolverReverseAbi = [\n  ...universalResolverErrors,\n  {\n    name: 'reverse',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [{ type: 'bytes', name: 'reverseName' }],\n    outputs: [\n      { type: 'string', name: 'resolvedName' },\n      { type: 'address', name: 'resolvedAddress' },\n      { type: 'address', name: 'reverseResolver' },\n      { type: 'address', name: 'resolver' },\n    ],\n  },\n] as const\n\nexport const textResolverAbi = [\n  {\n    name: 'text',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'name', type: 'bytes32' },\n      { name: 'key', type: 'string' },\n    ],\n    outputs: [{ name: '', type: 'string' }],\n  },\n] as const\n\nexport const addressResolverAbi = [\n  {\n    name: 'addr',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [{ name: 'name', type: 'bytes32' }],\n    outputs: [{ name: '', type: 'address' }],\n  },\n  {\n    name: 'addr',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'name', type: 'bytes32' },\n      { name: 'coinType', type: 'uint256' },\n    ],\n    outputs: [{ name: '', type: 'bytes' }],\n  },\n] as const\n\n// ERC-1271\n// isValidSignature(bytes32 hash, bytes signature) → bytes4 magicValue\nexport const smartAccountAbi = [\n  {\n    name: 'isValidSignature',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'hash', type: 'bytes32' },\n      { name: 'signature', type: 'bytes' },\n    ],\n    outputs: [{ name: '', type: 'bytes4' }],\n  },\n] as const\n\n// ERC-6492 - universal deployless signature validator contract\n// constructor(address _signer, bytes32 _hash, bytes _signature) → bytes4 returnValue\n// returnValue is either 0x1 (valid) or 0x0 (invalid)\nexport const universalSignatureValidatorAbi = [\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_signer',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: '_hash',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes',\n        name: '_signature',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n] as const\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4568, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4574, "column": 0}, "map": {"version":3,"file":"decodeFunctionResult.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/abi/decodeFunctionResult.ts"],"sourcesContent":["import type { Abi, ExtractAbiFunctionNames } from 'abitype'\n\nimport {\n  AbiFunctionNotFoundError,\n  type AbiFunctionNotFoundErrorType,\n  AbiFunctionOutputsNotFoundError,\n  type AbiFunctionOutputsNotFoundErrorType,\n} from '../../errors/abi.js'\nimport type {\n  AbiItem,\n  ContractFunctionResult,\n  GetFunctionArgs,\n  InferFunctionName,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type DecodeAbiParametersErrorType,\n  decodeAbiParameters,\n} from './decodeAbiParameters.js'\nimport {\n  type GetAbiItemErrorType,\n  type GetAbiItemParameters,\n  getAbiItem,\n} from './getAbiItem.js'\n\nconst docsPath = '/docs/contract/decodeFunctionResult'\n\nexport type DecodeFunctionResultParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string | undefined = string,\n  _FunctionName = InferFunctionName<TAbi, TFunctionName>,\n> = {\n  functionName?: _FunctionName\n  data: Hex\n} & (TFunctionName extends string\n  ? { abi: TAbi } & Partial<GetFunctionArgs<TAbi, TFunctionName>>\n  : _FunctionName extends string\n    ? { abi: [TAbi[number]] } & Partial<GetFunctionArgs<TAbi, _FunctionName>>\n    : never)\n\nexport type DecodeFunctionResultReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string | undefined = string,\n  _FunctionName extends string = TAbi extends Abi\n    ? Abi extends TAbi\n      ? string\n      : ExtractAbiFunctionNames<TAbi>[number]\n    : string,\n> = TFunctionName extends string\n  ? ContractFunctionResult<TAbi, TFunctionName>\n  : ContractFunctionResult<TAbi, _FunctionName>\n\nexport type DecodeFunctionResultErrorType =\n  | AbiFunctionNotFoundErrorType\n  | AbiFunctionOutputsNotFoundErrorType\n  | DecodeAbiParametersErrorType\n  | GetAbiItemErrorType\n  | ErrorType\n\nexport function decodeFunctionResult<\n  const TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string | undefined = undefined,\n>({\n  abi,\n  args,\n  functionName,\n  data,\n}: DecodeFunctionResultParameters<\n  TAbi,\n  TFunctionName\n>): DecodeFunctionResultReturnType<TAbi, TFunctionName> {\n  let abiItem = abi[0] as AbiItem\n  if (functionName) {\n    abiItem = getAbiItem({\n      abi,\n      args,\n      name: functionName,\n    } as GetAbiItemParameters)\n    if (!abiItem) throw new AbiFunctionNotFoundError(functionName, { docsPath })\n  }\n\n  if (abiItem.type !== 'function')\n    throw new AbiFunctionNotFoundError(undefined, { docsPath })\n  if (!abiItem.outputs)\n    throw new AbiFunctionOutputsNotFoundError(abiItem.name, { docsPath })\n\n  const values = decodeAbiParameters(abiItem.outputs, data)\n  if (values && values.length > 1) return values as any\n  if (values && values.length === 1) return values[0] as any\n  return undefined as any\n}\n"],"names":[],"mappings":";;;AAqBA,OAAO,EAGL,UAAU,GACX,MAAM,iBAAiB,CAAA;AAvBxB,OAAO,EACL,wBAAwB,EAExB,+BAA+B,GAEhC,MAAM,qBAAqB,CAAA;AAU5B,OAAO,EAEL,mBAAmB,GACpB,MAAM,0BAA0B,CAAA;;;;AAOjC,MAAM,QAAQ,GAAG,qCAAqC,CAAA;AAkChD,SAAU,oBAAoB,CAGlC,EACA,GAAG,EACH,IAAI,EACJ,YAAY,EACZ,IAAI,EAIL;IACC,IAAI,OAAO,GAAG,GAAG,CAAC,CAAC,CAAY,CAAA;IAC/B,IAAI,YAAY,EAAE;QAChB,OAAO,GAAG,wPAAA,AAAU,EAAC;YACnB,GAAG;YACH,IAAI;YACJ,IAAI,EAAE,YAAY;SACK,CAAC,CAAA;QAC1B,IAAI,CAAC,OAAO,EAAE,MAAM,6NAAI,4BAAwB,CAAC,YAAY,EAAE;YAAE,QAAQ;QAAA,CAAE,CAAC,CAAA;KAC7E;IAED,IAAI,OAAO,CAAC,IAAI,KAAK,UAAU,EAC7B,MAAM,6NAAI,4BAAwB,CAAC,SAAS,EAAE;QAAE,QAAQ;IAAA,CAAE,CAAC,CAAA;IAC7D,IAAI,CAAC,OAAO,CAAC,OAAO,EAClB,MAAM,8NAAI,kCAA+B,CAAC,OAAO,CAAC,IAAI,EAAE;QAAE,QAAQ;IAAA,CAAE,CAAC,CAAA;IAEvE,MAAM,MAAM,IAAG,yQAAA,AAAmB,EAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,CAAA;IACzD,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,OAAO,MAAa,CAAA;IACrD,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO,MAAM,CAAC,CAAC,CAAQ,CAAA;IAC1D,OAAO,SAAgB,CAAA;AACzB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4607, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4613, "column": 0}, "map": {"version":3,"file":"call.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/call.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { multicall3Abi } from '../../constants/abis.js'\nimport { aggregate3Signature } from '../../constants/contract.js'\nimport { BaseError } from '../../errors/base.js'\nimport {\n  ChainDoesNotSupportContract,\n  ClientChainNotConfiguredError,\n} from '../../errors/chain.js'\nimport {\n  RawContractError,\n  type RawContractErrorType,\n} from '../../errors/contract.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RpcTransactionRequest } from '../../types/rpc.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type GetCallErrorReturnType,\n  getCallError,\n} from '../../utils/errors/getCallError.js'\nimport { extract } from '../../utils/formatters/extract.js'\nimport {\n  type FormatTransactionRequestErrorType,\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport {\n  type CreateBatchSchedulerErrorType,\n  createBatchScheduler,\n} from '../../utils/promise/createBatchScheduler.js'\nimport { assertRequest } from '../../utils/transaction/assertRequest.js'\nimport type {\n  AssertRequestErrorType,\n  AssertRequestParameters,\n} from '../../utils/transaction/assertRequest.js'\n\nexport type FormattedCall<\n  TChain extends Chain | undefined = Chain | undefined,\n> = FormattedTransactionRequest<TChain>\n\nexport type CallParameters<\n  TChain extends Chain | undefined = Chain | undefined,\n> = UnionOmit<FormattedCall<TChain>, 'from'> & {\n  account?: Account | Address\n  batch?: boolean\n} & (\n    | {\n        /** The balance of the account at a block number. */\n        blockNumber?: bigint\n        blockTag?: never\n      }\n    | {\n        blockNumber?: never\n        /**\n         * The balance of the account at a block tag.\n         * @default 'latest'\n         */\n        blockTag?: BlockTag\n      }\n  )\n\nexport type CallReturnType = { data: Hex | undefined }\n\nexport type CallErrorType = GetCallErrorReturnType<\n  | ParseAccountErrorType\n  | AssertRequestErrorType\n  | NumberToHexErrorType\n  | FormatTransactionRequestErrorType\n  | ScheduleMulticallErrorType\n  | RequestErrorType\n>\n\n/**\n * Executes a new message call immediately without submitting a transaction to the network.\n *\n * - Docs: https://viem.sh/docs/actions/public/call.html\n * - JSON-RPC Methods: [`eth_call`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_call)\n *\n * @param client - Client to use\n * @param parameters - {@link CallParameters}\n * @returns The call data. {@link CallReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { call } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const data = await call(client, {\n *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n *   data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n * })\n */\nexport async function call<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  args: CallParameters<TChain>,\n): Promise<CallReturnType> {\n  const {\n    account: account_ = client.account,\n    batch = Boolean(client.batch?.multicall),\n    blockNumber,\n    blockTag = 'latest',\n    accessList,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    to,\n    value,\n    ...rest\n  } = args\n  const account = account_ ? parseAccount(account_) : undefined\n\n  try {\n    assertRequest(args as AssertRequestParameters)\n\n    const blockNumberHex = blockNumber ? numberToHex(blockNumber) : undefined\n    const block = blockNumberHex || blockTag\n\n    const chainFormat = client.chain?.formatters?.transactionRequest?.format\n    const format = chainFormat || formatTransactionRequest\n\n    const request = format({\n      // Pick out extra data that might exist on the chain's transaction request type.\n      ...extract(rest, { format: chainFormat }),\n      from: account?.address,\n      accessList,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    } as TransactionRequest) as TransactionRequest\n\n    if (batch && shouldPerformMulticall({ request })) {\n      try {\n        return await scheduleMulticall(client, {\n          ...request,\n          blockNumber,\n          blockTag,\n        } as unknown as ScheduleMulticallParameters<TChain>)\n      } catch (err) {\n        if (\n          !(err instanceof ClientChainNotConfiguredError) &&\n          !(err instanceof ChainDoesNotSupportContract)\n        )\n          throw err\n      }\n    }\n\n    const response = await client.request({\n      method: 'eth_call',\n      params: block\n        ? [request as Partial<RpcTransactionRequest>, block]\n        : [request as Partial<RpcTransactionRequest>],\n    })\n    if (response === '0x') return { data: undefined }\n    return { data: response }\n  } catch (err) {\n    const data = getRevertErrorData(err)\n    const { offchainLookup, offchainLookupSignature } = await import(\n      '../../utils/ccip.js'\n    )\n    if (data?.slice(0, 10) === offchainLookupSignature && to) {\n      return { data: await offchainLookup(client, { data, to }) }\n    }\n    throw getCallError(err as ErrorType, {\n      ...args,\n      account,\n      chain: client.chain,\n    })\n  }\n}\n\n// We only want to perform a scheduled multicall if:\n// - The request has calldata,\n// - The request has a target address,\n// - The target address is not already the aggregate3 signature,\n// - The request has no other properties (`nonce`, `gas`, etc cannot be sent with a multicall).\nfunction shouldPerformMulticall({ request }: { request: TransactionRequest }) {\n  const { data, to, ...request_ } = request\n  if (!data) return false\n  if (data.startsWith(aggregate3Signature)) return false\n  if (!to) return false\n  if (\n    Object.values(request_).filter((x) => typeof x !== 'undefined').length > 0\n  )\n    return false\n  return true\n}\n\ntype ScheduleMulticallParameters<TChain extends Chain | undefined> = Pick<\n  CallParameters<TChain>,\n  'blockNumber' | 'blockTag'\n> & {\n  data: Hex\n  multicallAddress?: Address\n  to: Address\n}\n\nexport type ScheduleMulticallErrorType =\n  | GetChainContractAddressErrorType\n  | NumberToHexErrorType\n  | CreateBatchSchedulerErrorType\n  | EncodeFunctionDataErrorType\n  | DecodeFunctionResultErrorType\n  | RawContractErrorType\n  | ErrorType\n\nasync function scheduleMulticall<TChain extends Chain | undefined>(\n  client: Client<Transport>,\n  args: ScheduleMulticallParameters<TChain>,\n) {\n  const { batchSize = 1024, wait = 0 } =\n    typeof client.batch?.multicall === 'object' ? client.batch.multicall : {}\n  const {\n    blockNumber,\n    blockTag = 'latest',\n    data,\n    multicallAddress: multicallAddress_,\n    to,\n  } = args\n\n  let multicallAddress = multicallAddress_\n  if (!multicallAddress) {\n    if (!client.chain) throw new ClientChainNotConfiguredError()\n\n    multicallAddress = getChainContractAddress({\n      blockNumber,\n      chain: client.chain,\n      contract: 'multicall3',\n    })\n  }\n\n  const blockNumberHex = blockNumber ? numberToHex(blockNumber) : undefined\n  const block = blockNumberHex || blockTag\n\n  const { schedule } = createBatchScheduler({\n    id: `${client.uid}.${block}`,\n    wait,\n    shouldSplitBatch(args) {\n      const size = args.reduce((size, { data }) => size + (data.length - 2), 0)\n      return size > batchSize * 2\n    },\n    fn: async (\n      requests: {\n        data: Hex\n        to: Address\n      }[],\n    ) => {\n      const calls = requests.map((request) => ({\n        allowFailure: true,\n        callData: request.data,\n        target: request.to,\n      }))\n\n      const calldata = encodeFunctionData({\n        abi: multicall3Abi,\n        args: [calls],\n        functionName: 'aggregate3',\n      })\n\n      const data = await client.request({\n        method: 'eth_call',\n        params: [\n          {\n            data: calldata,\n            to: multicallAddress,\n          },\n          block,\n        ],\n      })\n\n      return decodeFunctionResult({\n        abi: multicall3Abi,\n        args: [calls],\n        functionName: 'aggregate3',\n        data: data || '0x',\n      })\n    },\n  })\n\n  const [{ returnData, success }] = await schedule({ data, to })\n\n  if (!success) throw new RawContractError({ data: returnData })\n  if (returnData === '0x') return { data: undefined }\n  return { data: returnData }\n}\n\nexport type GetRevertErrorDataErrorType = ErrorType\n\nexport function getRevertErrorData(err: unknown) {\n  if (!(err instanceof BaseError)) return undefined\n  const error = err.walk() as RawContractError\n  return typeof error.data === 'object' ? error.data.data : error.data\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4804, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4810, "column": 0}, "map": {"version":3,"file":"createFilterRequestScope.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/filters/createFilterRequestScope.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { OnResponseFn } from '../../clients/transports/fallback.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { PublicRpcSchema } from '../../types/eip1193.js'\nimport type { EIP1193RequestFn } from '../../types/eip1193.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { Filter } from '../../types/utils.js'\n\ntype CreateFilterRequestScopeParameters = {\n  method:\n    | 'eth_newFilter'\n    | 'eth_newPendingTransactionFilter'\n    | 'eth_newBlockFilter'\n}\n\ntype FilterRpcSchema = Filter<\n  PublicRpcSchema,\n  { Method: 'eth_getFilterLogs' | 'eth_getFilterChanges' }\n>\n\ntype CreateFilterRequestScopeReturnType = (\n  id: Hex,\n) => EIP1193RequestFn<FilterRpcSchema>\n\n/**\n * Scopes `request` to the filter ID. If the client is a fallback, it will\n * listen for responses and scope the child transport `request` function\n * to the successful filter ID.\n */\nexport function createFilterRequestScope<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  { method }: CreateFilterRequestScopeParameters,\n): CreateFilterRequestScopeReturnType {\n  const requestMap: Record<Hex, EIP1193RequestFn> = {}\n\n  if (client.transport.type === 'fallback')\n    client.transport.onResponse?.(\n      ({\n        method: method_,\n        response: id,\n        status,\n        transport,\n      }: Parameters<OnResponseFn>[0]) => {\n        if (status === 'success' && method === method_)\n          requestMap[id as Hex] = transport.request\n      },\n    )\n\n  return ((id) =>\n    requestMap[id] || client.request) as CreateFilterRequestScopeReturnType\n}\n"],"names":[],"mappings":"AAyBA;;;;GAIG;;;AACG,SAAU,wBAAwB,CACtC,MAAiC,EACjC,EAAE,MAAM,EAAsC;IAE9C,MAAM,UAAU,GAAkC,CAAA,CAAE,CAAA;IAEpD,IAAI,MAAM,CAAC,SAAS,CAAC,IAAI,KAAK,UAAU,EACtC,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,CAC3B,CAAC,EACC,MAAM,EAAE,OAAO,EACf,QAAQ,EAAE,EAAE,EACZ,MAAM,EACN,SAAS,EACmB,EAAE,EAAE;QAChC,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,OAAO,EAC5C,UAAU,CAAC,EAAS,CAAC,GAAG,SAAS,CAAC,OAAO,CAAA;IAC7C,CAAC,CACF,CAAA;IAEH,OAAO,AAAC,CAAC,EAAE,EAAE,CACX,CADa,SACH,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,OAAO,CAAuC,CAAA;AAC3E,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4824, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4830, "column": 0}, "map": {"version":3,"file":"createBlockFilter.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/createBlockFilter.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js'\n\nexport type CreateBlockFilterReturnType = Filter<'block'>\n\nexport type CreateBlockFilterErrorType = RequestErrorType | ErrorType\n\n/**\n * Creates a [`Filter`](https://viem.sh/docs/glossary/types.html#filter) to listen for new block hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html).\n *\n * - Docs: https://viem.sh/docs/actions/public/createBlockFilter.html\n * - JSON-RPC Methods: [`eth_newBlockFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newBlockFilter)\n *\n * @param client - Client to use\n * @returns [`Filter`](https://viem.sh/docs/glossary/types.html#filter). {@link CreateBlockFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createBlockFilter } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createBlockFilter(client)\n * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'block' }\n */\nexport async function createBlockFilter<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n): Promise<CreateBlockFilterReturnType> {\n  const getRequest = createFilterRequestScope(client, {\n    method: 'eth_newBlockFilter',\n  })\n  const id = await client.request({\n    method: 'eth_newBlockFilter',\n  })\n  return { id, request: getRequest(id), type: 'block' }\n}\n"],"names":[],"mappings":";;;AAMA,OAAO,EAAE,wBAAwB,EAAE,MAAM,iDAAiD,CAAA;;AA2BnF,KAAK,UAAU,iBAAiB,CACrC,MAAiC;IAEjC,MAAM,UAAU,gQAAG,2BAAA,AAAwB,EAAC,MAAM,EAAE;QAClD,MAAM,EAAE,oBAAoB;KAC7B,CAAC,CAAA;IACF,MAAM,EAAE,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;QAC9B,MAAM,EAAE,oBAAoB;KAC7B,CAAC,CAAA;IACF,OAAO;QAAE,EAAE;QAAE,OAAO,EAAE,UAAU,CAAC,EAAE,CAAC;QAAE,IAAI,EAAE,OAAO;IAAA,CAAE,CAAA;AACvD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4848, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4854, "column": 0}, "map": {"version":3,"file":"log.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/errors/log.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type FilterTypeNotSupportedErrorType = FilterTypeNotSupportedError & {\n  name: 'FilterTypeNotSupportedError'\n}\nexport class FilterTypeNotSupportedError extends BaseError {\n  override name = 'FilterTypeNotSupportedError'\n  constructor(type: string) {\n    super(`Filter type \"${type}\" is not supported.`)\n  }\n}\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;;AAK/B,MAAO,2BAA4B,oOAAQ,YAAS;IAExD,YAAY,IAAY,CAAA;QACtB,KAAK,CAAC,CAAA,aAAA,EAAgB,IAAI,CAAA,mBAAA,CAAqB,CAAC,CAAA;QAFzC,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,6BAA6B;WAAA;IAG7C,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 4870, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4876, "column": 0}, "map": {"version":3,"file":"encodeEventTopics.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/abi/encodeEventTopics.ts"],"sourcesContent":["import type { Abi, AbiParameter, AbiParameterToPrimitiveType } from 'abitype'\n\nimport {\n  AbiEventNotFoundError,\n  type AbiEventNotFoundErrorType,\n} from '../../errors/abi.js'\nimport {\n  FilterTypeNotSupportedError,\n  type FilterTypeNotSupportedErrorType,\n} from '../../errors/log.js'\nimport type {\n  AbiItem,\n  EventDefinition,\n  GetEventArgs,\n  InferEventName,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport {\n  type GetEventSelectorErrorType,\n  getEventSelector,\n} from '../hash/getEventSelector.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\nimport { type GetAbiItemParameters, getAbiItem } from './getAbiItem.js'\n\nexport type EncodeEventTopicsParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TEventName extends string | undefined = string,\n  _EventName = InferEventName<TAbi, TEventName>,\n> = {\n  eventName?: _EventName\n} & (TEventName extends string\n  ? { abi: TAbi; args?: GetEventArgs<TAbi, TEventName> }\n  : _EventName extends string\n    ? { abi: [TAbi[number]]; args?: GetEventArgs<TAbi, _EventName> }\n    : never)\n\nexport type EncodeEventTopicsErrorType =\n  | AbiEventNotFoundErrorType\n  | EncodeArgErrorType\n  | FormatAbiItemErrorType\n  | GetEventSelectorErrorType\n  | ErrorType\n\nexport function encodeEventTopics<\n  const TAbi extends Abi | readonly unknown[],\n  TEventName extends string | undefined = undefined,\n>({ abi, eventName, args }: EncodeEventTopicsParameters<TAbi, TEventName>) {\n  let abiItem = abi[0] as AbiItem\n  if (eventName) {\n    abiItem = getAbiItem({\n      abi,\n      args,\n      name: eventName,\n    } as GetAbiItemParameters)\n    if (!abiItem)\n      throw new AbiEventNotFoundError(eventName, {\n        docsPath: '/docs/contract/encodeEventTopics',\n      })\n  }\n\n  if (abiItem.type !== 'event')\n    throw new AbiEventNotFoundError(undefined, {\n      docsPath: '/docs/contract/encodeEventTopics',\n    })\n\n  const definition = formatAbiItem(abiItem)\n  const signature = getEventSelector(definition as EventDefinition)\n\n  let topics: Hex[] = []\n  if (args && 'inputs' in abiItem) {\n    const indexedInputs = abiItem.inputs?.filter(\n      (param) => 'indexed' in param && param.indexed,\n    )\n    const args_ = Array.isArray(args)\n      ? args\n      : Object.values(args).length > 0\n        ? indexedInputs?.map((x: any) => (args as any)[x.name]) ?? []\n        : []\n\n    if (args_.length > 0) {\n      topics =\n        indexedInputs?.map((param, i) =>\n          Array.isArray(args_[i])\n            ? args_[i].map((_: any, j: number) =>\n                encodeArg({ param, value: args_[i][j] }),\n              )\n            : args_[i]\n              ? encodeArg({ param, value: args_[i] })\n              : null,\n        ) ?? []\n    }\n  }\n  return [signature, ...topics]\n}\n\nexport type EncodeArgErrorType =\n  | Keccak256ErrorType\n  | ToBytesErrorType\n  | EncodeAbiParametersErrorType\n  | FilterTypeNotSupportedErrorType\n  | ErrorType\n\nfunction encodeArg({\n  param,\n  value,\n}: { param: AbiParameter; value: AbiParameterToPrimitiveType<AbiParameter> }) {\n  if (param.type === 'string' || param.type === 'bytes')\n    return keccak256(toBytes(value as string))\n  if (param.type === 'tuple' || param.type.match(/^(.*)\\[(\\d+)?\\]$/))\n    throw new FilterTypeNotSupportedError(param.type)\n  return encodeAbiParameters([param], [value])\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4940, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4946, "column": 0}, "map": {"version":3,"file":"createContractEventFilter.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/createContractEventFilter.ts"],"sourcesContent":["import type { Abi, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  InferEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Hex } from '../../types/misc.js'\nimport {\n  type EncodeEventTopicsErrorType,\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from '../../utils/abi/encodeEventTopics.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js'\n\nexport type CreateContractEventFilterParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TEventName extends string | undefined = undefined,\n  TArgs extends\n    | MaybeExtractEventArgsFromAbi<TAbi, TEventName>\n    | undefined = undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = {\n  address?: Address | Address[]\n  abi: TAbi\n  eventName?: InferEventName<TAbi, TEventName>\n  fromBlock?: TFromBlock | BlockNumber | BlockTag\n  /**\n   * Whether or not the logs must match the indexed/non-indexed arguments in the event ABI item.\n   * @default false\n   */\n  strict?: TStrict\n  toBlock?: TToBlock | BlockNumber | BlockTag\n} & (undefined extends TEventName\n  ? {\n      args?: never\n    }\n  : MaybeExtractEventArgsFromAbi<\n        TAbi,\n        TEventName\n      > extends infer TEventFilterArgs\n    ? {\n        args?:\n          | TEventFilterArgs\n          | (TArgs extends TEventFilterArgs ? TArgs : never)\n      }\n    : {\n        args?: never\n      })\n\nexport type CreateContractEventFilterReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TEventName extends string | undefined = undefined,\n  TArgs extends\n    | MaybeExtractEventArgsFromAbi<TAbi, TEventName>\n    | undefined = undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = Filter<'event', TAbi, TEventName, TArgs, TStrict, TFromBlock, TToBlock>\n\nexport type CreateContractEventFilterErrorType =\n  | EncodeEventTopicsErrorType\n  | RequestErrorType\n  | NumberToHexErrorType\n  | ErrorType\n\n/**\n * Creates a Filter to retrieve event logs that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html) or [`getFilterLogs`](https://viem.sh/docs/actions/public/getFilterLogs.html).\n *\n * - Docs: https://viem.sh/docs/contract/createContractEventFilter.html\n *\n * @param client - Client to use\n * @param parameters - {@link CreateContractEventFilterParameters}\n * @returns [`Filter`](https://viem.sh/docs/glossary/types.html#filter). {@link CreateContractEventFilterReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createContractEventFilter } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createContractEventFilter(client, {\n *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n * })\n */\nexport async function createContractEventFilter<\n  TChain extends Chain | undefined,\n  const TAbi extends Abi | readonly unknown[],\n  TEventName extends string | undefined,\n  TArgs extends MaybeExtractEventArgsFromAbi<TAbi, TEventName> | undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  client: Client<Transport, TChain>,\n  {\n    address,\n    abi,\n    args,\n    eventName,\n    fromBlock,\n    strict,\n    toBlock,\n  }: CreateContractEventFilterParameters<\n    TAbi,\n    TEventName,\n    TArgs,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >,\n): Promise<\n  CreateContractEventFilterReturnType<\n    TAbi,\n    TEventName,\n    TArgs,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >\n> {\n  const getRequest = createFilterRequestScope(client, {\n    method: 'eth_newFilter',\n  })\n\n  const topics = eventName\n    ? encodeEventTopics({\n        abi,\n        args,\n        eventName,\n      } as unknown as EncodeEventTopicsParameters)\n    : undefined\n  const id: Hex = await client.request({\n    method: 'eth_newFilter',\n    params: [\n      {\n        address,\n        fromBlock:\n          typeof fromBlock === 'bigint' ? numberToHex(fromBlock) : fromBlock,\n        toBlock: typeof toBlock === 'bigint' ? numberToHex(toBlock) : toBlock,\n        topics,\n      },\n    ],\n  })\n\n  return {\n    abi,\n    args,\n    eventName,\n    id,\n    request: getRequest(id),\n    strict,\n    type: 'event',\n  } as unknown as CreateContractEventFilterReturnType<\n    TAbi,\n    TEventName,\n    TArgs,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >\n}\n"],"names":[],"mappings":";;;AAuBA,OAAO,EAAE,wBAAwB,EAAE,MAAM,iDAAiD,CAAA;AAV1F,OAAO,EAGL,iBAAiB,GAClB,MAAM,sCAAsC,CAAA;AAE7C,OAAO,EAEL,WAAW,GACZ,MAAM,+BAA+B,CAAA;;;;AA+E/B,KAAK,UAAU,yBAAyB,CAS7C,MAAiC,EACjC,EACE,OAAO,EACP,GAAG,EACH,IAAI,EACJ,SAAS,EACT,SAAS,EACT,MAAM,EACN,OAAO,EAQR;IAWD,MAAM,UAAU,IAAG,uRAAwB,AAAxB,EAAyB,MAAM,EAAE;QAClD,MAAM,EAAE,eAAe;KACxB,CAAC,CAAA;IAEF,MAAM,MAAM,GAAG,SAAS,IACpB,qQAAA,AAAiB,EAAC;QAChB,GAAG;QACH,IAAI;QACJ,SAAS;KACgC,CAAC,GAC5C,SAAS,CAAA;IACb,MAAM,EAAE,GAAQ,MAAM,MAAM,CAAC,OAAO,CAAC;QACnC,MAAM,EAAE,eAAe;QACvB,MAAM,EAAE;YACN;gBACE,OAAO;gBACP,SAAS,EACP,OAAO,SAAS,KAAK,QAAQ,CAAC,CAAC,4OAAC,cAAA,AAAW,EAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS;gBACpE,OAAO,EAAE,OAAO,OAAO,KAAK,QAAQ,CAAC,CAAC,4OAAC,cAAA,AAAW,EAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;gBACrE,MAAM;aACP;SACF;KACF,CAAC,CAAA;IAEF,OAAO;QACL,GAAG;QACH,IAAI;QACJ,SAAS;QACT,EAAE;QACF,OAAO,EAAE,UAAU,CAAC,EAAE,CAAC;QACvB,MAAM;QACN,IAAI,EAAE,OAAO;KAQd,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4985, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4991, "column": 0}, "map": {"version":3,"file":"createEventFilter.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/createEventFilter.ts"],"sourcesContent":["import type { AbiEvent, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  MaybeAbiEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Hex, LogTopic } from '../../types/misc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type EncodeEventTopicsErrorType,\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from '../../utils/abi/encodeEventTopics.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js'\n\nexport type CreateEventFilterParameters<\n  TAbiEvent extends AbiEvent | undefined = undefined,\n  TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _EventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n  _Args extends\n    | MaybeExtractEventArgsFromAbi<TAbiEvents, _EventName>\n    | undefined = undefined,\n> = {\n  address?: Address | Address[]\n  fromBlock?: TFromBlock | BlockNumber | BlockTag\n  toBlock?: TToBlock | BlockNumber | BlockTag\n} & (MaybeExtractEventArgsFromAbi<\n  TAbiEvents,\n  _EventName\n> extends infer TEventFilterArgs\n  ?\n      | {\n          args:\n            | TEventFilterArgs\n            | (_Args extends TEventFilterArgs ? _Args : never)\n          event: TAbiEvent\n          events?: never\n          /**\n           * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n           * @default false\n           */\n          strict?: TStrict\n        }\n      | {\n          args?: never\n          event?: TAbiEvent\n          events?: never\n          /**\n           * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n           * @default false\n           */\n          strict?: TStrict\n        }\n      | {\n          args?: never\n          event?: never\n          events: TAbiEvents\n          /**\n           * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n           * @default false\n           */\n          strict?: TStrict\n        }\n      | {\n          args?: never\n          event?: never\n          events?: never\n          strict?: never\n        }\n  : {\n      args?: never\n      event?: never\n      events?: never\n      strict?: never\n    })\n\nexport type CreateEventFilterReturnType<\n  TAbiEvent extends AbiEvent | undefined = undefined,\n  TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _EventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n  _Args extends\n    | MaybeExtractEventArgsFromAbi<TAbiEvents, _EventName>\n    | undefined = undefined,\n> = Prettify<\n  Filter<'event', TAbiEvents, _EventName, _Args, TStrict, TFromBlock, TToBlock>\n>\n\nexport type CreateEventFilterErrorType =\n  | EncodeEventTopicsErrorType\n  | RequestErrorType\n  | NumberToHexErrorType\n  | ErrorType\n\n/**\n * Creates a [`Filter`](https://viem.sh/docs/glossary/types.html#filter) to listen for new events that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html).\n *\n * - Docs: https://viem.sh/docs/actions/public/createEventFilter.html\n * - JSON-RPC Methods: [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter)\n *\n * @param client - Client to use\n * @param parameters - {@link CreateEventFilterParameters}\n * @returns [`Filter`](https://viem.sh/docs/glossary/types.html#filter). {@link CreateEventFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createEventFilter } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createEventFilter(client, {\n *   address: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\n * })\n */\nexport async function createEventFilter<\n  TChain extends Chain | undefined,\n  const TAbiEvent extends AbiEvent | undefined = undefined,\n  const TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber<bigint> | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber<bigint> | BlockTag | undefined = undefined,\n  _EventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n  _Args extends\n    | MaybeExtractEventArgsFromAbi<TAbiEvents, _EventName>\n    | undefined = undefined,\n>(\n  client: Client<Transport, TChain>,\n  {\n    address,\n    args,\n    event,\n    events: events_,\n    fromBlock,\n    strict,\n    toBlock,\n  }: CreateEventFilterParameters<\n    TAbiEvent,\n    TAbiEvents,\n    TStrict,\n    TFromBlock,\n    TToBlock,\n    _EventName,\n    _Args\n  > = {} as any,\n): Promise<\n  CreateEventFilterReturnType<\n    TAbiEvent,\n    TAbiEvents,\n    TStrict,\n    TFromBlock,\n    TToBlock,\n    _EventName,\n    _Args\n  >\n> {\n  const events = events_ ?? (event ? [event] : undefined)\n\n  const getRequest = createFilterRequestScope(client, {\n    method: 'eth_newFilter',\n  })\n\n  let topics: LogTopic[] = []\n  if (events) {\n    topics = [\n      (events as AbiEvent[]).flatMap((event) =>\n        encodeEventTopics({\n          abi: [event],\n          eventName: (event as AbiEvent).name,\n          args,\n        } as EncodeEventTopicsParameters),\n      ),\n    ]\n    if (event) topics = topics[0] as LogTopic[]\n  }\n\n  const id: Hex = await client.request({\n    method: 'eth_newFilter',\n    params: [\n      {\n        address,\n        fromBlock:\n          typeof fromBlock === 'bigint' ? numberToHex(fromBlock) : fromBlock,\n        toBlock: typeof toBlock === 'bigint' ? numberToHex(toBlock) : toBlock,\n        ...(topics.length ? { topics } : {}),\n      },\n    ],\n  })\n\n  return {\n    abi: events,\n    args,\n    eventName: event ? (event as AbiEvent).name : undefined,\n    fromBlock,\n    id,\n    request: getRequest(id),\n    strict,\n    toBlock,\n    type: 'event',\n  } as unknown as CreateEventFilterReturnType<\n    TAbiEvent,\n    TAbiEvents,\n    TStrict,\n    TFromBlock,\n    TToBlock,\n    _EventName,\n    _Args\n  >\n}\n"],"names":[],"mappings":";;;AAwBA,OAAO,EAAE,wBAAwB,EAAE,MAAM,iDAAiD,CAAA;AAV1F,OAAO,EAGL,iBAAiB,GAClB,MAAM,sCAAsC,CAAA;AAE7C,OAAO,EAEL,WAAW,GACZ,MAAM,+BAA+B,CAAA;;;;AAoH/B,KAAK,UAAU,iBAAiB,CAerC,MAAiC,EACjC,EACE,OAAO,EACP,IAAI,EACJ,KAAK,EACL,MAAM,EAAE,OAAO,EACf,SAAS,EACT,MAAM,EACN,OAAO,EAAA,GASL,CAAA,CAAS;IAYb,MAAM,MAAM,GAAG,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAAC,KAAK;KAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAA;IAEvD,MAAM,UAAU,gQAAG,2BAAA,AAAwB,EAAC,MAAM,EAAE;QAClD,MAAM,EAAE,eAAe;KACxB,CAAC,CAAA;IAEF,IAAI,MAAM,GAAe,EAAE,CAAA;IAC3B,IAAI,MAAM,EAAE;QACV,MAAM,GAAG;YACN,MAAqB,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,iPACvC,oBAAA,AAAiB,EAAC;oBAChB,GAAG,EAAE;wBAAC,KAAK;qBAAC;oBACZ,SAAS,EAAG,KAAkB,CAAC,IAAI;oBACnC,IAAI;iBAC0B,CAAC,CAClC;SACF,CAAA;QACD,IAAI,KAAK,EAAE,MAAM,GAAG,MAAM,CAAC,CAAC,CAAe,CAAA;KAC5C;IAED,MAAM,EAAE,GAAQ,MAAM,MAAM,CAAC,OAAO,CAAC;QACnC,MAAM,EAAE,eAAe;QACvB,MAAM,EAAE;YACN;gBACE,OAAO;gBACP,SAAS,EACP,OAAO,SAAS,KAAK,QAAQ,CAAC,CAAC,4OAAC,cAAA,AAAW,EAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS;gBACpE,OAAO,EAAE,OAAO,OAAO,KAAK,QAAQ,CAAC,CAAC,4OAAC,cAAA,AAAW,EAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO;gBACrE,GAAG,AAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;oBAAE,MAAM;gBAAA,CAAE,CAAC,CAAC,CAAC,CAAA,CAAE,CAAC;aACrC;SACF;KACF,CAAC,CAAA;IAEF,OAAO;QACL,GAAG,EAAE,MAAM;QACX,IAAI;QACJ,SAAS,EAAE,KAAK,CAAC,CAAC,CAAE,KAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS;QACvD,SAAS;QACT,EAAE;QACF,OAAO,EAAE,UAAU,CAAC,EAAE,CAAC;QACvB,MAAM;QACN,OAAO;QACP,IAAI,EAAE,OAAO;KASd,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5045, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5051, "column": 0}, "map": {"version":3,"file":"createPendingTransactionFilter.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/createPendingTransactionFilter.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js'\n\nexport type CreatePendingTransactionFilterReturnType = Filter<'transaction'>\n\nexport type CreatePendingTransactionFilterErrorType =\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Creates a Filter to listen for new pending transaction hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html).\n *\n * - Docs: https://viem.sh/docs/actions/public/createPendingTransactionFilter.html\n * - JSON-RPC Methods: [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter)\n *\n * @param client - Client to use\n * @returns [`Filter`](https://viem.sh/docs/glossary/types.html#filter). {@link CreateBlockFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createPendingTransactionFilter } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createPendingTransactionFilter(client)\n * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'transaction' }\n */\nexport async function createPendingTransactionFilter<\n  TTransport extends Transport,\n  TChain extends Chain | undefined,\n>(\n  client: Client<TTransport, TChain>,\n): Promise<CreatePendingTransactionFilterReturnType> {\n  const getRequest = createFilterRequestScope(client, {\n    method: 'eth_newPendingTransactionFilter',\n  })\n  const id = await client.request({\n    method: 'eth_newPendingTransactionFilter',\n  })\n  return { id, request: getRequest(id), type: 'transaction' }\n}\n"],"names":[],"mappings":";;;AAMA,OAAO,EAAE,wBAAwB,EAAE,MAAM,iDAAiD,CAAA;;AA6BnF,KAAK,UAAU,8BAA8B,CAIlD,MAAkC;IAElC,MAAM,UAAU,gQAAG,2BAAA,AAAwB,EAAC,MAAM,EAAE;QAClD,MAAM,EAAE,iCAAiC;KAC1C,CAAC,CAAA;IACF,MAAM,EAAE,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;QAC9B,MAAM,EAAE,iCAAiC;KAC1C,CAAC,CAAA;IACF,OAAO;QAAE,EAAE;QAAE,OAAO,EAAE,UAAU,CAAC,EAAE,CAAC;QAAE,IAAI,EAAE,aAAa;IAAA,CAAE,CAAA;AAC7D,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5069, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5075, "column": 0}, "map": {"version":3,"file":"getAction.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/getAction.ts"],"sourcesContent":["import type { Client } from '../clients/createClient.js'\n\n/**\n * Retrieves and returns an action from the client (if exists), and falls\n * back to the tree-shakable action.\n *\n * Useful for extracting overridden actions from a client (ie. if a consumer\n * wants to override the `sendTransaction` implementation).\n */\nexport function getAction<params extends {}, returnType extends {}>(\n  client: Client,\n  action: (_: any, params: params) => returnType,\n  // Some minifiers drop `Function.prototype.name`, meaning that `action.name`\n  // will not work. For that case, the consumer needs to pass the name explicitly.\n  name: string,\n) {\n  return (params: params): returnType =>\n    (\n      client as Client & {\n        [key: string]: (params: params) => returnType\n      }\n    )[action.name || name]?.(params) ?? action(client, params)\n}\n"],"names":[],"mappings":"AAEA;;;;;;GAMG;;;AACG,SAAU,SAAS,CACvB,MAAc,EACd,MAA8C,EAC9C,4EAA4E;AAC5E,gFAAgF;AAChF,IAAY;IAEZ,OAAO,CAAC,MAAc,EAAc,CAEhC,CAFkC,KAKnC,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;AAC9D,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5089, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5095, "column": 0}, "map": {"version":3,"file":"account.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/errors/account.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type AccountNotFoundErrorType = AccountNotFoundError & {\n  name: 'AccountNotFoundError'\n}\nexport class AccountNotFoundError extends BaseError {\n  override name = 'AccountNotFoundError'\n  constructor({ docsPath }: { docsPath?: string } = {}) {\n    super(\n      [\n        'Could not find an Account to execute with this Action.',\n        'Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the WalletClient.',\n      ].join('\\n'),\n      {\n        docsPath,\n        docsSlug: 'account',\n      },\n    )\n  }\n}\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;;AAK/B,MAAO,oBAAqB,oOAAQ,YAAS;IAEjD,YAAY,EAAE,QAAQ,EAAA,GAA4B,CAAA,CAAE,CAAA;QAClD,KAAK,CACH;YACE,wDAAwD;YACxD,wHAAwH;SACzH,CAAC,IAAI,CAAC,IAAI,CAAC,EACZ;YACE,QAAQ;YACR,QAAQ,EAAE,SAAS;SACpB,CACF,CAAA;QAXM,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,sBAAsB;WAAA;IAYtC,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 5117, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5123, "column": 0}, "map": {"version":3,"file":"block.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/errors/block.ts"],"sourcesContent":["import type { Hash } from '../types/misc.js'\n\nimport { BaseError } from './base.js'\n\nexport type BlockNotFoundErrorType = BlockNotFoundError & {\n  name: 'BlockNotFoundError'\n}\nexport class BlockNotFoundError extends BaseError {\n  override name = 'BlockNotFoundError'\n  constructor({\n    blockHash,\n    blockNumber,\n  }: {\n    blockHash?: Hash\n    blockNumber?: bigint\n  }) {\n    let identifier = 'Block'\n    if (blockHash) identifier = `Block at hash \"${blockHash}\"`\n    if (blockNumber) identifier = `Block at number \"${blockNumber}\"`\n    super(`${identifier} could not be found.`)\n  }\n}\n"],"names":[],"mappings":";;;AAEA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;;AAK/B,MAAO,kBAAmB,oOAAQ,YAAS;IAE/C,YAAY,EACV,SAAS,EACT,WAAW,EAIZ,CAAA;QACC,IAAI,UAAU,GAAG,OAAO,CAAA;QACxB,IAAI,SAAS,EAAE,UAAU,GAAG,CAAA,eAAA,EAAkB,SAAS,CAAA,CAAA,CAAG,CAAA;QAC1D,IAAI,WAAW,EAAE,UAAU,GAAG,CAAA,iBAAA,EAAoB,WAAW,CAAA,CAAA,CAAG,CAAA;QAChE,KAAK,CAAC,GAAG,UAAU,CAAA,oBAAA,CAAsB,CAAC,CAAA;QAXnC,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,oBAAoB;WAAA;IAYpC,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 5142, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5148, "column": 0}, "map": {"version":3,"file":"transaction.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/formatters/transaction.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ExtractChainFormatterExclude,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { RpcTransaction } from '../../types/rpc.js'\nimport type { Transaction } from '../../types/transaction.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\n\ntype TransactionPendingDependencies =\n  | 'blockHash'\n  | 'blockNumber'\n  | 'transactionIndex'\n\nexport type FormattedTransaction<\n  TChain extends { formatters?: Chain['formatters'] } | undefined =\n    | { formatters?: Chain['formatters'] }\n    | undefined,\n  TBlockTag extends BlockTag = BlockTag,\n  _FormatterReturnType = ExtractChainFormatterReturnType<\n    TChain,\n    'transaction',\n    Transaction\n  >,\n  _ExcludedPendingDependencies extends string = TransactionPendingDependencies &\n    ExtractChainFormatterExclude<TChain, 'transaction'>,\n> = UnionOmit<_FormatterReturnType, TransactionPendingDependencies> & {\n  [_key in _ExcludedPendingDependencies]: never\n} & Pick<\n    Transaction<bigint, number, TBlockTag extends 'pending' ? true : false>,\n    TransactionPendingDependencies\n  >\n\nexport const transactionType = {\n  '0x0': 'legacy',\n  '0x1': 'eip2930',\n  '0x2': 'eip1559',\n} as const\n\nexport type FormatTransactionErrorType = ErrorType\n\nexport function formatTransaction(transaction: Partial<RpcTransaction>) {\n  const transaction_ = {\n    ...transaction,\n    blockHash: transaction.blockHash ? transaction.blockHash : null,\n    blockNumber: transaction.blockNumber\n      ? BigInt(transaction.blockNumber)\n      : null,\n    chainId: transaction.chainId ? hexToNumber(transaction.chainId) : undefined,\n    gas: transaction.gas ? BigInt(transaction.gas) : undefined,\n    gasPrice: transaction.gasPrice ? BigInt(transaction.gasPrice) : undefined,\n    maxFeePerGas: transaction.maxFeePerGas\n      ? BigInt(transaction.maxFeePerGas)\n      : undefined,\n    maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n      ? BigInt(transaction.maxPriorityFeePerGas)\n      : undefined,\n    nonce: transaction.nonce ? hexToNumber(transaction.nonce) : undefined,\n    to: transaction.to ? transaction.to : null,\n    transactionIndex: transaction.transactionIndex\n      ? Number(transaction.transactionIndex)\n      : null,\n    type: transaction.type ? transactionType[transaction.type] : undefined,\n    typeHex: transaction.type ? transaction.type : undefined,\n    value: transaction.value ? BigInt(transaction.value) : undefined,\n    v: transaction.v ? BigInt(transaction.v) : undefined,\n  } as Transaction\n\n  transaction_.yParity = (() => {\n    // If `yParity` is provided, we will use it.\n    if (transaction.yParity) return Number(transaction.yParity)\n\n    // If no `yParity` provided, try derive from `v`.\n    if (typeof transaction_.v === 'bigint') {\n      if (transaction_.v === 0n || transaction_.v === 27n) return 0\n      if (transaction_.v === 1n || transaction_.v === 28n) return 1\n      if (transaction_.v >= 35n) return transaction_.v % 2n === 0n ? 1 : 0\n    }\n\n    return undefined\n  })()\n\n  if (transaction_.type === 'legacy') {\n    delete transaction_.accessList\n    delete transaction_.maxFeePerGas\n    delete transaction_.maxPriorityFeePerGas\n    delete transaction_.yParity\n  }\n  if (transaction_.type === 'eip2930') {\n    delete transaction_.maxFeePerGas\n    delete transaction_.maxPriorityFeePerGas\n  }\n  return transaction_\n}\n\nexport type DefineTransactionErrorType = DefineFormatterErrorType | ErrorType\n\nexport const defineTransaction = /*#__PURE__*/ defineFormatter(\n  'transaction',\n  formatTransaction,\n)\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5204, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5210, "column": 0}, "map": {"version":3,"file":"block.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/formatters/block.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { Block, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ExtractChainFormatterExclude,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RpcBlock } from '../../types/rpc.js'\nimport type { Prettify } from '../../types/utils.js'\n\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\nimport { type FormattedTransaction, formatTransaction } from './transaction.js'\n\ntype BlockPendingDependencies = 'hash' | 'logsBloom' | 'nonce' | 'number'\n\nexport type FormattedBlock<\n  TChain extends { formatters?: Chain['formatters'] } | undefined =\n    | { formatters?: Chain['formatters'] }\n    | undefined,\n  TIncludeTransactions extends boolean = boolean,\n  TBlockTag extends BlockTag = BlockTag,\n  _FormatterReturnType = ExtractChainFormatterReturnType<\n    TChain,\n    'block',\n    Block<bigint, TIncludeTransactions>\n  >,\n  _ExcludedPendingDependencies extends string = BlockPendingDependencies &\n    ExtractChainFormatterExclude<TChain, 'block'>,\n  _Formatted = Omit<_FormatterReturnType, BlockPendingDependencies> & {\n    [_key in _ExcludedPendingDependencies]: never\n  } & Pick<\n      Block<bigint, TIncludeTransactions, TBlockTag>,\n      BlockPendingDependencies\n    >,\n  _Transactions = TIncludeTransactions extends true\n    ? Prettify<FormattedTransaction<TChain, TBlockTag>>[]\n    : Hash[],\n> = Omit<_Formatted, 'transactions'> & {\n  transactions: _Transactions\n}\n\nexport type FormatBlockErrorType = ErrorType\n\nexport function formatBlock(block: Partial<RpcBlock>) {\n  const transactions = block.transactions?.map((transaction) => {\n    if (typeof transaction === 'string') return transaction\n    return formatTransaction(transaction)\n  })\n  return {\n    ...block,\n    baseFeePerGas: block.baseFeePerGas ? BigInt(block.baseFeePerGas) : null,\n    difficulty: block.difficulty ? BigInt(block.difficulty) : undefined,\n    gasLimit: block.gasLimit ? BigInt(block.gasLimit) : undefined,\n    gasUsed: block.gasUsed ? BigInt(block.gasUsed) : undefined,\n    hash: block.hash ? block.hash : null,\n    logsBloom: block.logsBloom ? block.logsBloom : null,\n    nonce: block.nonce ? block.nonce : null,\n    number: block.number ? BigInt(block.number) : null,\n    size: block.size ? BigInt(block.size) : undefined,\n    timestamp: block.timestamp ? BigInt(block.timestamp) : undefined,\n    transactions,\n    totalDifficulty: block.totalDifficulty\n      ? BigInt(block.totalDifficulty)\n      : null,\n  } as Block\n}\n\nexport type DefineBlockErrorType = DefineFormatterErrorType | ErrorType\n\nexport const defineBlock = /*#__PURE__*/ defineFormatter('block', formatBlock)\n"],"names":[],"mappings":";;;;AAWA,OAAO,EAAiC,eAAe,EAAE,MAAM,gBAAgB,CAAA;AAC/E,OAAO,EAA6B,iBAAiB,EAAE,MAAM,kBAAkB,CAAA;;;AAgCzE,SAAU,WAAW,CAAC,KAAwB;IAClD,MAAM,YAAY,GAAG,KAAK,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC,WAAW,EAAE,EAAE;QAC3D,IAAI,OAAO,WAAW,KAAK,QAAQ,EAAE,OAAO,WAAW,CAAA;QACvD,WAAO,mQAAA,AAAiB,EAAC,WAAW,CAAC,CAAA;IACvC,CAAC,CAAC,CAAA;IACF,OAAO;QACL,GAAG,KAAK;QACR,aAAa,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI;QACvE,UAAU,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS;QACnE,QAAQ,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS;QAC7D,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS;QAC1D,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI;QACpC,SAAS,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI;QACnD,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI;QACvC,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI;QAClD,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS;QACjD,SAAS,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS;QAChE,YAAY;QACZ,eAAe,EAAE,KAAK,CAAC,eAAe,GAClC,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,GAC7B,IAAI;KACA,CAAA;AACZ,CAAC;AAIM,MAAM,WAAW,GAAG,WAAA,EAAa,kPAAC,kBAAA,AAAe,EAAC,OAAO,EAAE,WAAW,CAAC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 5240, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5246, "column": 0}, "map": {"version":3,"file":"getBlock.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/getBlock.ts"],"sourcesContent":["import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  BlockNotFoundError,\n  type BlockNotFoundErrorType,\n} from '../../errors/block.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RpcBlock } from '../../types/rpc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type FormattedBlock,\n  formatBlock,\n} from '../../utils/formatters/block.js'\n\nexport type GetBlockParameters<\n  TIncludeTransactions extends boolean = false,\n  TBlockTag extends BlockTag = 'latest',\n> = {\n  /** Whether or not to include transaction data in the response. */\n  includeTransactions?: TIncludeTransactions\n} & (\n  | {\n      /** Hash of the block. */\n      blockHash?: Hash\n      blockNumber?: never\n      blockTag?: never\n    }\n  | {\n      blockHash?: never\n      /** The block number. */\n      blockNumber?: bigint\n      blockTag?: never\n    }\n  | {\n      blockHash?: never\n      blockNumber?: never\n      /**\n       * The block tag.\n       * @default 'latest'\n       */\n      blockTag?: TBlockTag | BlockTag\n    }\n)\n\nexport type GetBlockReturnType<\n  TChain extends Chain | undefined = Chain | undefined,\n  TIncludeTransactions extends boolean = false,\n  TBlockTag extends BlockTag = 'latest',\n> = FormattedBlock<TChain, TIncludeTransactions, TBlockTag>\n\nexport type GetBlockErrorType =\n  | BlockNotFoundErrorType\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns information about a block at a block number, hash, or tag.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlock.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks/fetching-blocks\n * - JSON-RPC Methods:\n *   - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) for `blockNumber` & `blockTag`.\n *   - Calls [`eth_getBlockByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbyhash) for `blockHash`.\n *\n * @param client - Client to use\n * @param parameters - {@link GetBlockParameters}\n * @returns Information about the block. {@link GetBlockReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlock } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const block = await getBlock(client)\n */\nexport async function getBlock<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n  TIncludeTransactions extends boolean = false,\n  TBlockTag extends BlockTag = 'latest',\n>(\n  client: Client<Transport, TChain, TAccount>,\n  {\n    blockHash,\n    blockNumber,\n    blockTag: blockTag_,\n    includeTransactions: includeTransactions_,\n  }: GetBlockParameters<TIncludeTransactions, TBlockTag> = {},\n): Promise<GetBlockReturnType<TChain, TIncludeTransactions, TBlockTag>> {\n  const blockTag = blockTag_ ?? 'latest'\n  const includeTransactions = includeTransactions_ ?? false\n\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n\n  let block: RpcBlock | null = null\n  if (blockHash) {\n    block = await client.request({\n      method: 'eth_getBlockByHash',\n      params: [blockHash, includeTransactions],\n    })\n  } else {\n    block = await client.request({\n      method: 'eth_getBlockByNumber',\n      params: [blockNumberHex || blockTag, includeTransactions],\n    })\n  }\n\n  if (!block) throw new BlockNotFoundError({ blockHash, blockNumber })\n\n  const format = client.chain?.formatters?.block?.format || formatBlock\n  return format(block)\n}\n"],"names":[],"mappings":";;;AAaA,OAAO,EAEL,WAAW,GACZ,MAAM,+BAA+B,CAAA;AAbtC,OAAO,EACL,kBAAkB,GAEnB,MAAM,uBAAuB,CAAA;AAW9B,OAAO,EAEL,WAAW,GACZ,MAAM,iCAAiC,CAAA;;;;AAoEjC,KAAK,UAAU,QAAQ,CAM5B,MAA2C,EAC3C,EACE,SAAS,EACT,WAAW,EACX,QAAQ,EAAE,SAAS,EACnB,mBAAmB,EAAE,oBAAoB,EAAA,GACc,CAAA,CAAE;IAE3D,MAAM,QAAQ,GAAG,SAAS,IAAI,QAAQ,CAAA;IACtC,MAAM,mBAAmB,GAAG,oBAAoB,IAAI,KAAK,CAAA;IAEzD,MAAM,cAAc,GAClB,WAAW,KAAK,SAAS,CAAC,CAAC,4OAAC,cAAA,AAAW,EAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAA;IAElE,IAAI,KAAK,GAAoB,IAAI,CAAA;IACjC,IAAI,SAAS,EAAE;QACb,KAAK,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;YAC3B,MAAM,EAAE,oBAAoB;YAC5B,MAAM,EAAE;gBAAC,SAAS;gBAAE,mBAAmB;aAAC;SACzC,CAAC,CAAA;KACH,MAAM;QACL,KAAK,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;YAC3B,MAAM,EAAE,sBAAsB;YAC9B,MAAM,EAAE;gBAAC,cAAc,IAAI,QAAQ;gBAAE,mBAAmB;aAAC;SAC1D,CAAC,CAAA;KACH;IAED,IAAI,CAAC,KAAK,EAAE,MAAM,gOAAI,qBAAkB,CAAC;QAAE,SAAS;QAAE,WAAW;IAAA,CAAE,CAAC,CAAA;IAEpE,MAAM,MAAM,GAAG,MAAM,CAAC,KAAK,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,6OAAI,cAAW,CAAA;IACrE,OAAO,MAAM,CAAC,KAAK,CAAC,CAAA;AACtB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5284, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5290, "column": 0}, "map": {"version":3,"file":"getTransactionCount.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/getTransactionCount.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type HexToNumberErrorType,\n  hexToNumber,\n} from '../../utils/encoding/fromHex.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type GetTransactionCountParameters = {\n  /** The account address. */\n  address: Address\n} & (\n  | {\n      /** The block number. */\n      blockNumber?: bigint\n      blockTag?: never\n    }\n  | {\n      blockNumber?: never\n      /** The block tag. Defaults to 'latest'. */\n      blockTag?: BlockTag\n    }\n)\nexport type GetTransactionCountReturnType = number\n\nexport type GetTransactionCountErrorType =\n  | RequestErrorType\n  | NumberToHexErrorType\n  | HexToNumberErrorType\n  | ErrorType\n\n/**\n * Returns the number of [Transactions](https://viem.sh/docs/glossary/terms.html#transaction) an Account has broadcast / sent.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransactionCount.html\n * - JSON-RPC Methods: [`eth_getTransactionCount`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactioncount)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionCountParameters}\n * @returns The number of transactions an account has sent. {@link GetTransactionCountReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransactionCount } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transactionCount = await getTransactionCount(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n */\nexport async function getTransactionCount<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  { address, blockTag = 'latest', blockNumber }: GetTransactionCountParameters,\n): Promise<GetTransactionCountReturnType> {\n  const count = await client.request({\n    method: 'eth_getTransactionCount',\n    params: [address, blockNumber ? numberToHex(blockNumber) : blockTag],\n  })\n  return hexToNumber(count)\n}\n"],"names":[],"mappings":";;;AAaA,OAAO,EAEL,WAAW,GACZ,MAAM,+BAA+B,CAAA;AAPtC,OAAO,EAEL,WAAW,GACZ,MAAM,iCAAiC,CAAA;;;AAoDjC,KAAK,UAAU,mBAAmB,CAIvC,MAA2C,EAC3C,EAAE,OAAO,EAAE,QAAQ,GAAG,QAAQ,EAAE,WAAW,EAAiC;IAE5E,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;QACjC,MAAM,EAAE,yBAAyB;QACjC,MAAM,EAAE;YAAC,OAAO;YAAE,WAAW,CAAC,CAAC,4OAAC,cAAA,AAAW,EAAC,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ;SAAC;KACrE,CAAC,CAAA;IACF,oPAAO,cAAA,AAAW,EAAC,KAAK,CAAC,CAAA;AAC3B,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5307, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5313, "column": 0}, "map": {"version":3,"file":"getTransactionType.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/transaction/getTransactionType.ts"],"sourcesContent":["import {\n  InvalidSerializableTransactionError,\n  type InvalidSerializableTransactionErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  TransactionSerializable,\n  TransactionSerializableEIP1559,\n  TransactionSerializableEIP2930,\n  TransactionSerializableGeneric,\n  TransactionSerializableLegacy,\n} from '../../types/transaction.js'\n\nexport type GetTransactionType<\n  TTransactionSerializable extends\n    TransactionSerializable = TransactionSerializable,\n> =\n  | (TTransactionSerializable extends TransactionSerializableLegacy\n      ? 'legacy'\n      : never)\n  | (TTransactionSerializable extends TransactionSerializableEIP1559\n      ? 'eip1559'\n      : never)\n  | (TTransactionSerializable extends TransactionSerializableEIP2930\n      ? 'eip2930'\n      : never)\n  | (TTransactionSerializable extends TransactionSerializableGeneric\n      ? TTransactionSerializable['type']\n      : never)\n\nexport type GetTransationTypeErrorType =\n  | InvalidSerializableTransactionErrorType\n  | ErrorType\n\nexport function getTransactionType<\n  TTransactionSerializable extends TransactionSerializable,\n>(\n  transaction: TTransactionSerializable,\n): GetTransactionType<TTransactionSerializable> {\n  if (transaction.type)\n    return transaction.type as GetTransactionType<TTransactionSerializable>\n\n  if (\n    typeof transaction.maxFeePerGas !== 'undefined' ||\n    typeof transaction.maxPriorityFeePerGas !== 'undefined'\n  )\n    return 'eip1559' as GetTransactionType<TTransactionSerializable>\n\n  if (typeof transaction.gasPrice !== 'undefined') {\n    if (typeof transaction.accessList !== 'undefined')\n      return 'eip2930' as GetTransactionType<TTransactionSerializable>\n    return 'legacy' as GetTransactionType<TTransactionSerializable>\n  }\n\n  throw new InvalidSerializableTransactionError({ transaction })\n}\n"],"names":[],"mappings":";;;AAAA,OAAO,EACL,mCAAmC,GAEpC,MAAM,6BAA6B,CAAA;;AA+B9B,SAAU,kBAAkB,CAGhC,WAAqC;IAErC,IAAI,WAAW,CAAC,IAAI,EAClB,OAAO,WAAW,CAAC,IAAoD,CAAA;IAEzE,IACE,OAAO,WAAW,CAAC,YAAY,KAAK,WAAW,IAC/C,OAAO,WAAW,CAAC,oBAAoB,KAAK,WAAW,EAEvD,OAAO,SAAyD,CAAA;IAElE,IAAI,OAAO,WAAW,CAAC,QAAQ,KAAK,WAAW,EAAE;QAC/C,IAAI,OAAO,WAAW,CAAC,UAAU,KAAK,WAAW,EAC/C,OAAO,SAAyD,CAAA;QAClE,OAAO,QAAwD,CAAA;KAChE;IAED,MAAM,sOAAI,sCAAmC,CAAC;QAAE,WAAW;IAAA,CAAE,CAAC,CAAA;AAChE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5329, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5335, "column": 0}, "map": {"version":3,"file":"fee.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/errors/fee.ts"],"sourcesContent":["import { formatGwei } from '../utils/unit/formatGwei.js'\nimport { BaseError } from './base.js'\n\nexport type BaseFeeScalarErrorType = BaseFeeScalarError & {\n  name: 'BaseFeeScalarError'\n}\nexport class BaseFeeScalarError extends BaseError {\n  override name = 'BaseFeeScalarError'\n  constructor() {\n    super('`baseFeeMultiplier` must be greater than 1.')\n  }\n}\n\nexport type Eip1559FeesNotSupportedErrorType = Eip1559FeesNotSupportedError & {\n  name: 'Eip1559FeesNotSupportedError'\n}\nexport class Eip1559FeesNotSupportedError extends BaseError {\n  override name = 'Eip1559FeesNotSupportedError'\n  constructor() {\n    super('Chain does not support EIP-1559 fees.')\n  }\n}\n\nexport type MaxFeePerGasTooLowErrorType = MaxFeePerGasTooLowError & {\n  name: 'MaxFeePerGasTooLowError'\n}\nexport class MaxFeePerGasTooLowError extends BaseError {\n  override name = 'MaxFeePerGasTooLowError'\n  constructor({ maxPriorityFeePerGas }: { maxPriorityFeePerGas: bigint }) {\n    super(\n      `\\`maxFeePerGas\\` cannot be less than the \\`maxPriorityFeePerGas\\` (${formatGwei(\n        maxPriorityFeePerGas,\n      )} gwei).`,\n    )\n  }\n}\n"],"names":[],"mappings":";;;;;AACA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;AADrC,OAAO,EAAE,UAAU,EAAE,MAAM,6BAA6B,CAAA;;;AAMlD,MAAO,kBAAmB,oOAAQ,YAAS;IAE/C,aAAA;QACE,KAAK,CAAC,6CAA6C,CAAC,CAAA;QAF7C,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,oBAAoB;WAAA;IAGpC,CAAC;CACF;AAKK,MAAO,4BAA6B,oOAAQ,YAAS;IAEzD,aAAA;QACE,KAAK,CAAC,uCAAuC,CAAC,CAAA;QAFvC,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,8BAA8B;WAAA;IAG9C,CAAC;CACF;AAKK,MAAO,uBAAwB,oOAAQ,YAAS;IAEpD,YAAY,EAAE,oBAAoB,EAAoC,CAAA;QACpE,KAAK,CACH,CAAA,mEAAA,EAAsE,yPAAA,AAAU,EAC9E,oBAAoB,CACrB,CAAA,OAAA,CAAS,CACX,CAAA;QANM,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,yBAAyB;WAAA;IAOzC,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 5377, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5383, "column": 0}, "map": {"version":3,"file":"getGasPrice.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/getGasPrice.ts"],"sourcesContent":["import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type GetGasPriceReturnType = bigint\n\nexport type GetGasPriceErrorType = RequestErrorType | ErrorType\n\n/**\n * Returns the current price of gas (in wei).\n *\n * - Docs: https://viem.sh/docs/actions/public/getGasPrice.html\n * - JSON-RPC Methods: [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice)\n *\n * @param client - Client to use\n * @returns The gas price (in wei). {@link GetGasPriceReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getGasPrice } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const gasPrice = await getGasPrice(client)\n */\nexport async function getGasPrice<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(client: Client<Transport, TChain, TAccount>): Promise<GetGasPriceReturnType> {\n  const gasPrice = await client.request({\n    method: 'eth_gasPrice',\n  })\n  return BigInt(gasPrice)\n}\n"],"names":[],"mappings":"AAWA;;;;;;;;;;;;;;;;;;;GAmBG;;;AACI,KAAK,UAAU,WAAW,CAG/B,MAA2C;IAC3C,MAAM,QAAQ,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;QACpC,MAAM,EAAE,cAAc;KACvB,CAAC,CAAA;IACF,OAAO,MAAM,CAAC,QAAQ,CAAC,CAAA;AACzB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5411, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5417, "column": 0}, "map": {"version":3,"file":"estimateMaxPriorityFeePerGas.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/estimateMaxPriorityFeePerGas.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  Eip1559FeesNotSupportedError,\n  type Eip1559FeesNotSupportedErrorType,\n} from '../../errors/fee.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Account } from '../../types/account.js'\nimport type { Block } from '../../types/block.js'\nimport type { Chain, ChainFeesFnParameters } from '../../types/chain.js'\nimport type { GetChain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type HexToBigIntErrorType,\n  hexToBigInt,\n} from '../../utils/encoding/fromHex.js'\nimport { getAction } from '../../utils/getAction.js'\nimport type { PrepareTransactionRequestParameters } from '../wallet/prepareTransactionRequest.js'\nimport { type GetBlockErrorType, getBlock } from './getBlock.js'\nimport { type GetGasPriceErrorType, getGasPrice } from './getGasPrice.js'\n\nexport type EstimateMaxPriorityFeePerGasParameters<\n  chain extends Chain | undefined = Chain | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n> = GetChain<chain, chainOverride>\n\nexport type EstimateMaxPriorityFeePerGasReturnType = bigint\n\nexport type EstimateMaxPriorityFeePerGasErrorType =\n  | GetBlockErrorType\n  | HexToBigIntErrorType\n  | RequestErrorType\n  | GetBlockErrorType\n  | GetGasPriceErrorType\n  | Eip1559FeesNotSupportedErrorType\n  | ErrorType\n\n/**\n * Returns an estimate for the max priority fee per gas (in wei) for a\n * transaction to be likely included in the next block.\n * Defaults to [`chain.fees.defaultPriorityFee`](/docs/clients/chains.html#fees-defaultpriorityfee) if set.\n *\n * - Docs: https://viem.sh/docs/actions/public/estimateMaxPriorityFeePerGas.html\n *\n * @param client - Client to use\n * @returns An estimate (in wei) for the max priority fee per gas. {@link EstimateMaxPriorityFeePerGasReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateMaxPriorityFeePerGas } from 'viem/actions'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const maxPriorityFeePerGas = await estimateMaxPriorityFeePerGas(client)\n * // 10000000n\n */\nexport async function estimateMaxPriorityFeePerGas<\n  chain extends Chain | undefined,\n  chainOverride extends Chain | undefined,\n>(\n  client: Client<Transport, chain>,\n  args?: EstimateMaxPriorityFeePerGasParameters<chain, chainOverride>,\n): Promise<EstimateMaxPriorityFeePerGasReturnType> {\n  return internal_estimateMaxPriorityFeePerGas(client, args as any)\n}\n\nexport async function internal_estimateMaxPriorityFeePerGas<\n  chain extends Chain | undefined,\n  chainOverride extends Chain | undefined,\n>(\n  client: Client<Transport, chain>,\n  args: EstimateMaxPriorityFeePerGasParameters<chain, chainOverride> & {\n    block?: Block\n    request?: PrepareTransactionRequestParameters<\n      chain,\n      Account | undefined,\n      chainOverride\n    >\n  },\n): Promise<EstimateMaxPriorityFeePerGasReturnType> {\n  const { block: block_, chain = client.chain, request } = args || {}\n  if (typeof chain?.fees?.defaultPriorityFee === 'function') {\n    const block = block_ || (await getAction(client, getBlock, 'getBlock')({}))\n    return chain.fees.defaultPriorityFee({\n      block,\n      client,\n      request,\n    } as ChainFeesFnParameters)\n  }\n\n  if (typeof chain?.fees?.defaultPriorityFee !== 'undefined')\n    return chain?.fees?.defaultPriorityFee\n\n  try {\n    const maxPriorityFeePerGasHex = await client.request({\n      method: 'eth_maxPriorityFeePerGas',\n    })\n    return hexToBigInt(maxPriorityFeePerGasHex)\n  } catch {\n    // If the RPC Provider does not support `eth_maxPriorityFeePerGas`\n    // fall back to calculating it manually via `gasPrice - baseFeePerGas`.\n    // See: https://github.com/ethereum/pm/issues/328#:~:text=eth_maxPriorityFeePerGas%20after%20London%20will%20effectively%20return%20eth_gasPrice%20%2D%20baseFee\n    const [block, gasPrice] = await Promise.all([\n      block_\n        ? Promise.resolve(block_)\n        : getAction(client, getBlock, 'getBlock')({}),\n      getAction(client, getGasPrice, 'getGasPrice')({}),\n    ])\n\n    if (typeof block.baseFeePerGas !== 'bigint')\n      throw new Eip1559FeesNotSupportedError()\n\n    const maxPriorityFeePerGas = gasPrice - block.baseFeePerGas\n\n    if (maxPriorityFeePerGas < 0n) return 0n\n    return maxPriorityFeePerGas\n  }\n}\n"],"names":[],"mappings":";;;;AAYA,OAAO,EAEL,WAAW,GACZ,MAAM,iCAAiC,CAAA;AACxC,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAA;AAEpD,OAAO,EAA0B,QAAQ,EAAE,MAAM,eAAe,CAAA;AAChE,OAAO,EAA6B,WAAW,EAAE,MAAM,kBAAkB,CAAA;AAjBzE,OAAO,EACL,4BAA4B,GAE7B,MAAM,qBAAqB,CAAA;;;;;;AAsDrB,KAAK,UAAU,4BAA4B,CAIhD,MAAgC,EAChC,IAAmE;IAEnE,OAAO,qCAAqC,CAAC,MAAM,EAAE,IAAW,CAAC,CAAA;AACnE,CAAC;AAEM,KAAK,UAAU,qCAAqC,CAIzD,MAAgC,EAChC,IAOC;IAED,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,GAAG,MAAM,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,IAAI,IAAI,CAAA,CAAE,CAAA;IACnE,IAAI,OAAO,KAAK,EAAE,IAAI,EAAE,kBAAkB,KAAK,UAAU,EAAE;QACzD,MAAM,KAAK,GAAG,MAAM,IAAI,AAAC,yOAAM,YAAA,AAAS,EAAC,MAAM,EAAE,qPAAQ,EAAE,UAAU,CAAC,CAAC,CAAA,CAAE,CAAC,CAAC,CAAA;QAC3E,OAAO,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC;YACnC,KAAK;YACL,MAAM;YACN,OAAO;SACiB,CAAC,CAAA;KAC5B;IAED,IAAI,OAAO,KAAK,EAAE,IAAI,EAAE,kBAAkB,KAAK,WAAW,EACxD,OAAO,KAAK,EAAE,IAAI,EAAE,kBAAkB,CAAA;IAExC,IAAI;QACF,MAAM,uBAAuB,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;YACnD,MAAM,EAAE,0BAA0B;SACnC,CAAC,CAAA;QACF,oPAAO,cAAW,AAAX,EAAY,uBAAuB,CAAC,CAAA;KAC5C,CAAC,OAAM;QACN,kEAAkE;QAClE,uEAAuE;QACvE,gKAAgK;QAChK,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;YAC1C,MAAM,GACF,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,IACvB,8OAAA,AAAS,EAAC,MAAM,4OAAE,WAAQ,EAAE,UAAU,CAAC,CAAC,CAAA,CAAE,CAAC;+OAC/C,YAAS,AAAT,EAAU,MAAM,8OAAE,eAAW,EAAE,aAAa,CAAC,CAAC,CAAA,CAAE,CAAC;SAClD,CAAC,CAAA;QAEF,IAAI,OAAO,KAAK,CAAC,aAAa,KAAK,QAAQ,EACzC,MAAM,8NAAI,+BAA4B,EAAE,CAAA;QAE1C,MAAM,oBAAoB,GAAG,QAAQ,GAAG,KAAK,CAAC,aAAa,CAAA;QAE3D,IAAI,oBAAoB,GAAG,EAAE,EAAE,OAAO,EAAE,CAAA;QACxC,OAAO,oBAAoB,CAAA;KAC5B;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5464, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5470, "column": 0}, "map": {"version":3,"file":"estimateFeesPerGas.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/estimateFeesPerGas.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  BaseFeeScalarError,\n  type BaseFeeScalarErrorType,\n  Eip1559FeesNotSupportedError,\n  type Eip1559FeesNotSupportedErrorType,\n} from '../../errors/fee.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Block } from '../../types/block.js'\nimport type {\n  Chain,\n  ChainEstimateFeesPerGasFnParameters,\n  ChainFeesFnParameters,\n} from '../../types/chain.js'\nimport type { GetChain } from '../../types/chain.js'\nimport type {\n  FeeValuesEIP1559,\n  FeeValuesLegacy,\n  FeeValuesType,\n} from '../../types/fee.js'\nimport { getAction } from '../../utils/getAction.js'\nimport type { PrepareTransactionRequestParameters } from '../wallet/prepareTransactionRequest.js'\nimport {\n  type EstimateMaxPriorityFeePerGasErrorType,\n  internal_estimateMaxPriorityFeePerGas,\n} from './estimateMaxPriorityFeePerGas.js'\nimport { getBlock } from './getBlock.js'\nimport { type GetGasPriceErrorType, getGasPrice } from './getGasPrice.js'\n\nexport type EstimateFeesPerGasParameters<\n  chain extends Chain | undefined = Chain | undefined,\n  chainOverride extends Chain | undefined = Chain | undefined,\n  type extends FeeValuesType = FeeValuesType,\n> = {\n  /**\n   * The type of fee values to return.\n   *\n   * - `legacy`: Returns the legacy gas price.\n   * - `eip1559`: Returns the max fee per gas and max priority fee per gas.\n   *\n   * @default 'eip1559'\n   */\n  type?: type | FeeValuesType\n} & GetChain<chain, chainOverride>\n\nexport type EstimateFeesPerGasReturnType<\n  type extends FeeValuesType = FeeValuesType,\n> =\n  | (type extends 'legacy' ? FeeValuesLegacy : never)\n  | (type extends 'eip1559' ? FeeValuesEIP1559 : never)\n\nexport type EstimateFeesPerGasErrorType =\n  | BaseFeeScalarErrorType\n  | EstimateMaxPriorityFeePerGasErrorType\n  | GetGasPriceErrorType\n  | Eip1559FeesNotSupportedErrorType\n  | ErrorType\n\n/**\n * Returns an estimate for the fees per gas (in wei) for a\n * transaction to be likely included in the next block.\n * Defaults to [`chain.fees.estimateFeesPerGas`](/docs/clients/chains.html#fees-estimatefeespergas) if set.\n *\n * - Docs: https://viem.sh/docs/actions/public/estimateFeesPerGas.html\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateFeesPerGasParameters}\n * @returns An estimate (in wei) for the fees per gas. {@link EstimateFeesPerGasReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateFeesPerGas } from 'viem/actions'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const maxPriorityFeePerGas = await estimateFeesPerGas(client)\n * // { maxFeePerGas: ..., maxPriorityFeePerGas: ... }\n */\nexport async function estimateFeesPerGas<\n  chain extends Chain | undefined,\n  chainOverride extends Chain | undefined,\n  type extends FeeValuesType = 'eip1559',\n>(\n  client: Client<Transport, chain>,\n  args?: EstimateFeesPerGasParameters<chain, chainOverride, type>,\n): Promise<EstimateFeesPerGasReturnType<type>> {\n  return internal_estimateFeesPerGas(client, args as any)\n}\n\nexport async function internal_estimateFeesPerGas<\n  chain extends Chain | undefined,\n  chainOverride extends Chain | undefined,\n  type extends FeeValuesType = 'eip1559',\n>(\n  client: Client<Transport, chain>,\n  args: EstimateFeesPerGasParameters<chain, chainOverride, type> & {\n    block?: Block\n    request?: PrepareTransactionRequestParameters\n  },\n): Promise<EstimateFeesPerGasReturnType<type>> {\n  const {\n    block: block_,\n    chain = client.chain,\n    request,\n    type = 'eip1559',\n  } = args || {}\n\n  const baseFeeMultiplier = await (async () => {\n    if (typeof chain?.fees?.baseFeeMultiplier === 'function')\n      return chain.fees.baseFeeMultiplier({\n        block: block_ as Block,\n        client,\n        request,\n      } as ChainFeesFnParameters)\n    return chain?.fees?.baseFeeMultiplier ?? 1.2\n  })()\n  if (baseFeeMultiplier < 1) throw new BaseFeeScalarError()\n\n  const decimals = baseFeeMultiplier.toString().split('.')[1]?.length ?? 0\n  const denominator = 10 ** decimals\n  const multiply = (base: bigint) =>\n    (base * BigInt(Math.ceil(baseFeeMultiplier * denominator))) /\n    BigInt(denominator)\n\n  const block = block_\n    ? block_\n    : await getAction(client, getBlock, 'getBlock')({})\n\n  if (typeof chain?.fees?.estimateFeesPerGas === 'function')\n    return chain.fees.estimateFeesPerGas({\n      block: block_ as Block,\n      client,\n      multiply,\n      request,\n      type,\n    } as ChainEstimateFeesPerGasFnParameters) as unknown as EstimateFeesPerGasReturnType<type>\n\n  if (type === 'eip1559') {\n    if (typeof block.baseFeePerGas !== 'bigint')\n      throw new Eip1559FeesNotSupportedError()\n\n    const maxPriorityFeePerGas = request?.maxPriorityFeePerGas\n      ? request.maxPriorityFeePerGas\n      : await internal_estimateMaxPriorityFeePerGas(\n          client as Client<Transport, Chain>,\n          {\n            block,\n            chain,\n            request,\n          },\n        )\n\n    const baseFeePerGas = multiply(block.baseFeePerGas)\n    const maxFeePerGas =\n      request?.maxFeePerGas ?? baseFeePerGas + maxPriorityFeePerGas\n\n    return {\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n    } as EstimateFeesPerGasReturnType<type>\n  }\n\n  const gasPrice =\n    request?.gasPrice ??\n    multiply(await getAction(client, getGasPrice, 'getGasPrice')({}))\n  return {\n    gasPrice,\n  } as EstimateFeesPerGasReturnType<type>\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5528, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5534, "column": 0}, "map": {"version":3,"file":"prepareTransactionRequest.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/wallet/prepareTransactionRequest.ts"],"sourcesContent":["import type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport {\n  type EstimateFeesPerGasErrorType,\n  internal_estimateFeesPerGas,\n} from '../../actions/public/estimateFeesPerGas.js'\nimport {\n  type EstimateGasErrorType,\n  type EstimateGasParameters,\n  estimateGas,\n} from '../../actions/public/estimateGas.js'\nimport {\n  type GetBlockErrorType,\n  getBlock,\n} from '../../actions/public/getBlock.js'\nimport {\n  type GetTransactionCountErrorType,\n  getTransactionCount,\n} from '../../actions/public/getTransactionCount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  AccountNotFoundError,\n  type AccountNotFoundErrorType,\n} from '../../errors/account.js'\nimport {\n  Eip1559FeesNotSupportedError,\n  MaxFeePerGasTooLowError,\n} from '../../errors/fee.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { GetChain } from '../../types/chain.js'\nimport type { TransactionSerializable } from '../../types/transaction.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport type { FormattedTransactionRequest } from '../../utils/formatters/transactionRequest.js'\nimport { getAction } from '../../utils/getAction.js'\nimport type {\n  AssertRequestErrorType,\n  AssertRequestParameters,\n} from '../../utils/transaction/assertRequest.js'\nimport { assertRequest } from '../../utils/transaction/assertRequest.js'\nimport { getTransactionType } from '../../utils/transaction/getTransactionType.js'\n\nexport type PrepareTransactionRequestParameters<\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n  TChainOverride extends Chain | undefined = Chain | undefined,\n> = UnionOmit<\n  FormattedTransactionRequest<\n    TChainOverride extends Chain ? TChainOverride : TChain\n  >,\n  'from'\n> &\n  GetAccountParameter<TAccount> &\n  GetChain<TChain, TChainOverride>\n\nexport type PrepareTransactionRequestReturnType<\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n  TChainOverride extends Chain | undefined = Chain | undefined,\n> = FormattedTransactionRequest<\n  TChainOverride extends Chain ? TChainOverride : TChain\n> &\n  GetAccountParameter<TAccount> &\n  GetChain<TChain, TChainOverride>\n\nexport type PrepareTransactionRequestErrorType =\n  | AccountNotFoundErrorType\n  | AssertRequestErrorType\n  | ParseAccountErrorType\n  | GetBlockErrorType\n  | GetTransactionCountErrorType\n  | EstimateGasErrorType\n  | EstimateFeesPerGasErrorType\n\n/**\n * Prepares a transaction request for signing.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/prepareTransactionRequest.html\n *\n * @param args - {@link PrepareTransactionRequestParameters}\n * @returns The transaction request. {@link PrepareTransactionRequestReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { prepareTransactionRequest } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const request = await prepareTransactionRequest(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { prepareTransactionRequest } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const request = await prepareTransactionRequest(client, {\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n */\nexport async function prepareTransactionRequest<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n  TChainOverride extends Chain | undefined = undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  args: PrepareTransactionRequestParameters<TChain, TAccount, TChainOverride>,\n): Promise<\n  PrepareTransactionRequestReturnType<TChain, TAccount, TChainOverride>\n> {\n  const { account: account_ = client.account, chain, gas, nonce, type } = args\n  if (!account_) throw new AccountNotFoundError()\n  const account = parseAccount(account_)\n\n  const block = await getAction(\n    client,\n    getBlock,\n    'getBlock',\n  )({ blockTag: 'latest' })\n\n  const request = { ...args, from: account.address }\n\n  if (typeof nonce === 'undefined')\n    request.nonce = await getAction(\n      client,\n      getTransactionCount,\n      'getTransactionCount',\n    )({\n      address: account.address,\n      blockTag: 'pending',\n    })\n\n  if (typeof type === 'undefined') {\n    try {\n      request.type = getTransactionType(\n        request as TransactionSerializable,\n      ) as any\n    } catch {\n      // infer type from block\n      request.type =\n        typeof block.baseFeePerGas === 'bigint' ? 'eip1559' : 'legacy'\n    }\n  }\n\n  if (request.type === 'eip1559') {\n    // EIP-1559 fees\n    const { maxFeePerGas, maxPriorityFeePerGas } =\n      await internal_estimateFeesPerGas(client, {\n        block,\n        chain,\n        request: request as PrepareTransactionRequestParameters,\n      })\n\n    if (\n      typeof args.maxPriorityFeePerGas === 'undefined' &&\n      args.maxFeePerGas &&\n      args.maxFeePerGas < maxPriorityFeePerGas\n    )\n      throw new MaxFeePerGasTooLowError({\n        maxPriorityFeePerGas,\n      })\n\n    request.maxPriorityFeePerGas = maxPriorityFeePerGas\n    request.maxFeePerGas = maxFeePerGas\n  } else {\n    // Legacy fees\n    if (\n      typeof args.maxFeePerGas !== 'undefined' ||\n      typeof args.maxPriorityFeePerGas !== 'undefined'\n    )\n      throw new Eip1559FeesNotSupportedError()\n\n    const { gasPrice: gasPrice_ } = await internal_estimateFeesPerGas(client, {\n      block,\n      chain,\n      request: request as PrepareTransactionRequestParameters,\n      type: 'legacy',\n    })\n    request.gasPrice = gasPrice_\n  }\n\n  if (typeof gas === 'undefined')\n    request.gas = await getAction(\n      client,\n      estimateGas,\n      'estimateGas',\n    )({\n      ...request,\n      account: { address: account.address, type: 'json-rpc' },\n    } as EstimateGasParameters)\n\n  assertRequest(request as AssertRequestParameters)\n\n  return request as unknown as PrepareTransactionRequestReturnType<\n    TChain,\n    TAccount,\n    TChainOverride\n  >\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5613, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5619, "column": 0}, "map": {"version":3,"file":"estimateGas.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/errors/estimateGas.ts"],"sourcesContent":["import type { Account } from '../accounts/types.js'\nimport type { EstimateGasParameters } from '../actions/public/estimateGas.js'\nimport type { Chain } from '../types/chain.js'\nimport { formatEther } from '../utils/unit/formatEther.js'\nimport { formatGwei } from '../utils/unit/formatGwei.js'\n\nimport { BaseError } from './base.js'\nimport { prettyPrint } from './transaction.js'\n\nexport type EstimateGasExecutionErrorType = EstimateGasExecutionError & {\n  name: 'EstimateGasExecutionError'\n}\nexport class EstimateGasExecutionError extends BaseError {\n  override cause: BaseError\n\n  override name = 'EstimateGasExecutionError'\n\n  constructor(\n    cause: BaseError,\n    {\n      account,\n      docsPath,\n      chain,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    }: Omit<EstimateGasParameters<any, any>, 'account'> & {\n      account?: Account\n      chain?: Chain\n      docsPath?: string\n    },\n  ) {\n    const prettyArgs = prettyPrint({\n      from: account?.address,\n      to,\n      value:\n        typeof value !== 'undefined' &&\n        `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n      data,\n      gas,\n      gasPrice:\n        typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n      maxFeePerGas:\n        typeof maxFeePerGas !== 'undefined' &&\n        `${formatGwei(maxFeePerGas)} gwei`,\n      maxPriorityFeePerGas:\n        typeof maxPriorityFeePerGas !== 'undefined' &&\n        `${formatGwei(maxPriorityFeePerGas)} gwei`,\n      nonce,\n    })\n\n    super(cause.shortMessage, {\n      cause,\n      docsPath,\n      metaMessages: [\n        ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n        'Estimate Gas Arguments:',\n        prettyArgs,\n      ].filter(Boolean) as string[],\n    })\n    this.cause = cause\n  }\n}\n"],"names":[],"mappings":";;;AAOA,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAA;AAJ9C,OAAO,EAAE,WAAW,EAAE,MAAM,8BAA8B,CAAA;AAC1D,OAAO,EAAE,UAAU,EAAE,MAAM,6BAA6B,CAAA;AAExD,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;;;;;AAM/B,MAAO,yBAA0B,oOAAQ,YAAS;IAKtD,YACE,KAAgB,EAChB,EACE,OAAO,EACP,QAAQ,EACR,KAAK,EACL,IAAI,EACJ,GAAG,EACH,QAAQ,EACR,YAAY,EACZ,oBAAoB,EACpB,KAAK,EACL,EAAE,EACF,KAAK,EAKN,CAAA;QAED,MAAM,UAAU,yOAAG,cAAA,AAAW,EAAC;YAC7B,IAAI,EAAE,OAAO,EAAE,OAAO;YACtB,EAAE;YACF,KAAK,EACH,OAAO,KAAK,KAAK,WAAW,IAC5B,IAAG,0PAAA,AAAW,EAAC,KAAK,CAAC,CAAA,CAAA,EAAI,KAAK,EAAE,cAAc,EAAE,MAAM,IAAI,KAAK,EAAE;YACnE,IAAI;YACJ,GAAG;YACH,QAAQ,EACN,OAAO,QAAQ,KAAK,WAAW,IAAI,IAAG,wPAAA,AAAU,EAAC,QAAQ,CAAC,CAAA,KAAA,CAAO;YACnE,YAAY,EACV,OAAO,YAAY,KAAK,WAAW,IACnC,+OAAG,aAAA,AAAU,EAAC,YAAY,CAAC,CAAA,KAAA,CAAO;YACpC,oBAAoB,EAClB,OAAO,oBAAoB,KAAK,WAAW,IAC3C,+OAAG,aAAA,AAAU,EAAC,oBAAoB,CAAC,CAAA,KAAA,CAAO;YAC5C,KAAK;SACN,CAAC,CAAA;QAEF,KAAK,CAAC,KAAK,CAAC,YAAY,EAAE;YACxB,KAAK;YACL,QAAQ;YACR,YAAY,EAAE;mBACR,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;uBAAG,KAAK,CAAC,YAAY;oBAAE,GAAG;iBAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC3D,yBAAyB;gBACzB,UAAU;aACX,CAAC,MAAM,CAAC,OAAO,CAAa;SAC9B,CAAC,CAAA;QAnDK,OAAA,cAAA,CAAA,IAAA,EAAA,SAAA;;;;;WAAgB;QAEhB,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,2BAA2B;WAAA;QAkDzC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;IACpB,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 5670, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5676, "column": 0}, "map": {"version":3,"file":"getEstimateGasError.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/errors/getEstimateGasError.ts"],"sourcesContent":["import type { Account } from '../../accounts/types.js'\nimport type { EstimateGasParameters } from '../../actions/public/estimateGas.js'\nimport type { BaseError } from '../../errors/base.js'\nimport {\n  EstimateGasExecutionError,\n  type EstimateGasExecutionErrorType,\n} from '../../errors/estimateGas.js'\nimport { UnknownNodeError } from '../../errors/node.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\n\nimport {\n  type GetNodeErrorParameters,\n  type GetNodeErrorReturnType,\n  getNodeError,\n} from './getNodeError.js'\n\nexport type GetEstimateGasErrorReturnType<cause = ErrorType> = Omit<\n  EstimateGasExecutionErrorType,\n  'cause'\n> & { cause: cause | GetNodeErrorReturnType }\n\nexport function getEstimateGasError<err extends ErrorType<string>>(\n  err: err,\n  {\n    docsPath,\n    ...args\n  }: Omit<EstimateGasParameters, 'account'> & {\n    account?: Account\n    chain?: Chain\n    docsPath?: string\n  },\n): GetEstimateGasErrorReturnType<err> {\n  const cause = (() => {\n    const cause = getNodeError(\n      err as {} as BaseError,\n      args as GetNodeErrorParameters,\n    )\n    if (cause instanceof UnknownNodeError) return err as {} as BaseError\n    return cause\n  })()\n  return new EstimateGasExecutionError(cause, {\n    docsPath,\n    ...args,\n  }) as GetEstimateGasErrorReturnType<err>\n}\n"],"names":[],"mappings":";;;AAWA,OAAO,EAGL,YAAY,GACb,MAAM,mBAAmB,CAAA;AAR1B,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAA;AAJvD,OAAO,EACL,yBAAyB,GAE1B,MAAM,6BAA6B,CAAA;;;;AAgB9B,SAAU,mBAAmB,CACjC,GAAQ,EACR,EACE,QAAQ,EACR,GAAG,IAAI,EAKR;IAED,MAAM,KAAK,GAAG,CAAC,GAAG,EAAE;QAClB,MAAM,KAAK,mPAAG,eAAY,AAAZ,EACZ,GAAsB,EACtB,IAA8B,CAC/B,CAAA;QACD,IAAI,KAAK,uOAAY,mBAAgB,EAAE,OAAO,GAAsB,CAAA;QACpE,OAAO,KAAK,CAAA;IACd,CAAC,CAAC,EAAE,CAAA;IACJ,OAAO,sOAAI,4BAAyB,CAAC,KAAK,EAAE;QAC1C,QAAQ;QACR,GAAG,IAAI;KACR,CAAuC,CAAA;AAC1C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5696, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5702, "column": 0}, "map": {"version":3,"file":"estimateGas.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/estimateGas.ts"],"sourcesContent":["import type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { AccountNotFoundError } from '../../errors/account.js'\nimport type { BaseError } from '../../errors/base.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { TransactionRequest } from '../../types/transaction.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type GetEstimateGasErrorReturnType,\n  getEstimateGasError,\n} from '../../utils/errors/getEstimateGasError.js'\nimport { extract } from '../../utils/formatters/extract.js'\nimport {\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport {\n  type AssertRequestErrorType,\n  type AssertRequestParameters,\n  assertRequest,\n} from '../../utils/transaction/assertRequest.js'\nimport {\n  type PrepareTransactionRequestParameters,\n  prepareTransactionRequest,\n} from '../wallet/prepareTransactionRequest.js'\n\nexport type FormattedEstimateGas<\n  TChain extends Chain | undefined = Chain | undefined,\n> = FormattedTransactionRequest<TChain>\n\nexport type EstimateGasParameters<\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n> = UnionOmit<FormattedEstimateGas<TChain>, 'from'> &\n  GetAccountParameter<TAccount> &\n  (\n    | {\n        /** The balance of the account at a block number. */\n        blockNumber?: bigint\n        blockTag?: never\n      }\n    | {\n        blockNumber?: never\n        /**\n         * The balance of the account at a block tag.\n         * @default 'latest'\n         */\n        blockTag?: BlockTag\n      }\n  )\n\nexport type EstimateGasReturnType = bigint\n\nexport type EstimateGasErrorType = GetEstimateGasErrorReturnType<\n  | ParseAccountErrorType\n  | NumberToHexErrorType\n  | RequestErrorType\n  | AssertRequestErrorType\n>\n\n/**\n * Estimates the gas necessary to complete a transaction without submitting it to the network.\n *\n * - Docs: https://viem.sh/docs/actions/public/estimateGas.html\n * - JSON-RPC Methods: [`eth_estimateGas`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_estimategas)\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateGasParameters}\n * @returns The gas estimate (in wei). {@link EstimateGasReturnType}\n *\n * @example\n * import { createPublicClient, http, parseEther } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateGas } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const gasEstimate = await estimateGas(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: parseEther('1'),\n * })\n */\nexport async function estimateGas<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  args: EstimateGasParameters<TChain, TAccount>,\n): Promise<EstimateGasReturnType> {\n  const account_ = args.account ?? client.account\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/public/estimateGas',\n    })\n  const account = parseAccount(account_)\n\n  try {\n    const {\n      accessList,\n      blockNumber,\n      blockTag,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n      ...rest\n    } =\n      account.type === 'local'\n        ? ((await prepareTransactionRequest(\n            client,\n            args as PrepareTransactionRequestParameters,\n          )) as EstimateGasParameters)\n        : args\n\n    const blockNumberHex = blockNumber ? numberToHex(blockNumber) : undefined\n    const block = blockNumberHex || blockTag\n\n    assertRequest(args as AssertRequestParameters)\n\n    const chainFormat = client.chain?.formatters?.transactionRequest?.format\n    const format = chainFormat || formatTransactionRequest\n\n    const request = format({\n      // Pick out extra data that might exist on the chain's transaction request type.\n      ...extract(rest, { format: chainFormat }),\n      from: account.address,\n      accessList,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    } as TransactionRequest)\n\n    const balance = await client.request({\n      method: 'eth_estimateGas',\n      params: block ? [request, block] : [request],\n    })\n    return BigInt(balance)\n  } catch (err) {\n    throw getEstimateGasError(err as BaseError, {\n      ...args,\n      account,\n      chain: client.chain,\n    })\n  }\n}\n"],"names":[],"mappings":";;;AAOA,OAAO,EAAE,oBAAoB,EAAE,MAAM,yBAAyB,CAAA;AAN9D,OAAO,EAEL,YAAY,GACb,MAAM,sCAAsC,CAAA;AA6B7C,OAAO,EAEL,yBAAyB,GAC1B,MAAM,wCAAwC,CAAA;AArB/C,OAAO,EAEL,WAAW,GACZ,MAAM,+BAA+B,CAAA;AAUtC,OAAO,EAGL,aAAa,GACd,MAAM,0CAA0C,CAAA;AARjD,OAAO,EAEL,wBAAwB,GACzB,MAAM,8CAA8C,CAAA;AAJrD,OAAO,EAAE,OAAO,EAAE,MAAM,mCAAmC,CAAA;AAJ3D,OAAO,EAEL,mBAAmB,GACpB,MAAM,2CAA2C,CAAA;;;;;;;;;AA2E3C,KAAK,UAAU,WAAW,CAI/B,MAA2C,EAC3C,IAA6C;IAE7C,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,IAAI,MAAM,CAAC,OAAO,CAAA;IAC/C,IAAI,CAAC,QAAQ,EACX,MAAM,kOAAI,uBAAoB,CAAC;QAC7B,QAAQ,EAAE,kCAAkC;KAC7C,CAAC,CAAA;IACJ,MAAM,OAAO,qPAAG,eAAY,AAAZ,EAAa,QAAQ,CAAC,CAAA;IAEtC,IAAI;QACF,MAAM,EACJ,UAAU,EACV,WAAW,EACX,QAAQ,EACR,IAAI,EACJ,GAAG,EACH,QAAQ,EACR,YAAY,EACZ,oBAAoB,EACpB,KAAK,EACL,EAAE,EACF,KAAK,EACL,GAAG,IAAI,EACR,GACC,OAAO,CAAC,IAAI,KAAK,OAAO,GAClB,qQAAM,4BAAyB,AAAzB,EACN,MAAM,EACN,IAA2C,CAC5C,CAA2B,EAC5B,IAAI,CAAA;QAEV,MAAM,cAAc,GAAG,WAAW,CAAC,CAAC,4OAAC,cAAA,AAAW,EAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAA;QACzE,MAAM,KAAK,GAAG,cAAc,IAAI,QAAQ,CAAA;8PAExC,gBAAa,AAAb,EAAc,IAA+B,CAAC,CAAA;QAE9C,MAAM,WAAW,GAAG,MAAM,CAAC,KAAK,EAAE,UAAU,EAAE,kBAAkB,EAAE,MAAM,CAAA;QACxE,MAAM,MAAM,GAAG,WAAW,0PAAI,2BAAwB,CAAA;QAEtD,MAAM,OAAO,GAAG,MAAM,CAAC;YACrB,gFAAgF;YAChF,kPAAG,UAAA,AAAO,EAAC,IAAI,EAAE;gBAAE,MAAM,EAAE,WAAW;YAAA,CAAE,CAAC;YACzC,IAAI,EAAE,OAAO,CAAC,OAAO;YACrB,UAAU;YACV,IAAI;YACJ,GAAG;YACH,QAAQ;YACR,YAAY;YACZ,oBAAoB;YACpB,KAAK;YACL,EAAE;YACF,KAAK;SACgB,CAAC,CAAA;QAExB,MAAM,OAAO,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;YACnC,MAAM,EAAE,iBAAiB;YACzB,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC;gBAAC,OAAO;gBAAE,KAAK;aAAC,CAAC,CAAC,CAAC;gBAAC,OAAO;aAAC;SAC7C,CAAC,CAAA;QACF,OAAO,MAAM,CAAC,OAAO,CAAC,CAAA;KACvB,CAAC,OAAO,GAAG,EAAE;QACZ,6PAAM,sBAAA,AAAmB,EAAC,GAAgB,EAAE;YAC1C,GAAG,IAAI;YACP,OAAO;YACP,KAAK,EAAE,MAAM,CAAC,KAAK;SACpB,CAAC,CAAA;KACH;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5768, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5774, "column": 0}, "map": {"version":3,"file":"getContractError.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/errors/getContractError.ts"],"sourcesContent":["import type { Abi, Address } from 'abitype'\n\nimport { AbiDecodingZeroDataError } from '../../errors/abi.js'\nimport { BaseError } from '../../errors/base.js'\nimport {\n  ContractFunctionExecutionError,\n  type ContractFunctionExecutionErrorType,\n  ContractFunctionRevertedError,\n  type ContractFunctionRevertedErrorType,\n  ContractFunctionZeroDataError,\n  type ContractFunctionZeroDataErrorType,\n  RawContractError,\n} from '../../errors/contract.js'\nimport { InternalRpcError } from '../../errors/rpc.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\nconst EXECUTION_REVERTED_ERROR_CODE = 3\n\nexport type GetContractErrorReturnType<cause = ErrorType> = Omit<\n  ContractFunctionExecutionErrorType,\n  'cause'\n> & {\n  cause:\n    | cause\n    | ContractFunctionZeroDataErrorType\n    | ContractFunctionRevertedErrorType\n}\n\nexport function getContractError<err extends ErrorType<string>>(\n  err: err,\n  {\n    abi,\n    address,\n    args,\n    docsPath,\n    functionName,\n    sender,\n  }: {\n    abi: Abi\n    args: any\n    address?: Address\n    docsPath?: string\n    functionName: string\n    sender?: Address\n  },\n): GetContractErrorReturnType {\n  const { code, data, message, shortMessage } = (\n    err instanceof RawContractError\n      ? err\n      : err instanceof BaseError\n        ? err.walk((err) => 'data' in (err as Error)) || err.walk()\n        : {}\n  ) as RawContractError\n\n  const cause = (() => {\n    if (err instanceof AbiDecodingZeroDataError)\n      return new ContractFunctionZeroDataError({ functionName })\n    if (\n      [EXECUTION_REVERTED_ERROR_CODE, InternalRpcError.code].includes(code) &&\n      (data || message || shortMessage)\n    ) {\n      return new ContractFunctionRevertedError({\n        abi,\n        data: typeof data === 'object' ? data.data : data,\n        functionName,\n        message: shortMessage ?? message,\n      })\n    }\n    return err\n  })()\n\n  return new ContractFunctionExecutionError(cause as BaseError, {\n    abi,\n    args,\n    contractAddress: address,\n    docsPath,\n    functionName,\n    sender,\n  }) as GetContractErrorReturnType\n}\n"],"names":[],"mappings":";;;AAIA,OAAO,EACL,8BAA8B,EAE9B,6BAA6B,EAE7B,6BAA6B,EAE7B,gBAAgB,GACjB,MAAM,0BAA0B,CAAA;AATjC,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAA;AADhD,OAAO,EAAE,wBAAwB,EAAE,MAAM,qBAAqB,CAAA;AAW9D,OAAO,EAAE,gBAAgB,EAAE,MAAM,qBAAqB,CAAA;;;;;AAGtD,MAAM,6BAA6B,GAAG,CAAC,CAAA;AAYjC,SAAU,gBAAgB,CAC9B,GAAQ,EACR,EACE,GAAG,EACH,OAAO,EACP,IAAI,EACJ,QAAQ,EACR,YAAY,EACZ,MAAM,EAQP;IAED,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,YAAY,EAAE,GAAG,AAC5C,GAAG,2OAAY,mBAAgB,GAC3B,GAAG,GACH,GAAG,YAAY,uOAAS,GACtB,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAG,CAAD,KAAO,IAAK,GAAa,CAAC,IAAI,GAAG,CAAC,IAAI,EAAE,GACzD,CAAA,CAAE,CACW,CAAA;IAErB,MAAM,KAAK,GAAG,CAAC,GAAG,EAAE;QAClB,IAAI,GAAG,sOAAY,2BAAwB,EACzC,OAAO,mOAAI,gCAA6B,CAAC;YAAE,YAAY;QAAA,CAAE,CAAC,CAAA;QAC5D,IACE;YAAC,6BAA6B;sOAAE,mBAAgB,CAAC,IAAI;SAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IACrE,CAAC,IAAI,IAAI,OAAO,IAAI,YAAY,CAAC,EACjC;YACA,OAAO,mOAAI,gCAA6B,CAAC;gBACvC,GAAG;gBACH,IAAI,EAAE,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI;gBACjD,YAAY;gBACZ,OAAO,EAAE,YAAY,IAAI,OAAO;aACjC,CAAC,CAAA;SACH;QACD,OAAO,GAAG,CAAA;IACZ,CAAC,CAAC,EAAE,CAAA;IAEJ,OAAO,mOAAI,iCAA8B,CAAC,KAAkB,EAAE;QAC5D,GAAG;QACH,IAAI;QACJ,eAAe,EAAE,OAAO;QACxB,QAAQ;QACR,YAAY;QACZ,MAAM;KACP,CAA+B,CAAA;AAClC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5814, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5820, "column": 0}, "map": {"version":3,"file":"estimateContractGas.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/estimateContractGas.ts"],"sourcesContent":["import type { Abi } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BaseError } from '../../errors/base.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { ContractFunctionConfig, GetValue } from '../../types/contract.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from '../../utils/errors/getContractError.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type EstimateGasErrorType,\n  type EstimateGasParameters,\n  estimateGas,\n} from './estimateGas.js'\n\nexport type EstimateContractGasParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string = string,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n> = ContractFunctionConfig<TAbi, TFunctionName, 'payable' | 'nonpayable'> &\n  UnionOmit<EstimateGasParameters<TChain, TAccount>, 'data' | 'to' | 'value'> &\n  GetValue<\n    TAbi,\n    TFunctionName,\n    EstimateGasParameters<TChain> extends EstimateGasParameters\n      ? EstimateGasParameters<TChain>['value']\n      : EstimateGasParameters['value']\n  >\n\nexport type EstimateContractGasReturnType = bigint\n\nexport type EstimateContractGasErrorType = GetContractErrorReturnType<\n  EncodeFunctionDataErrorType | EstimateGasErrorType | ParseAccountErrorType\n>\n\n/**\n * Estimates the gas required to successfully execute a contract write function call.\n *\n * - Docs: https://viem.sh/docs/contract/estimateContractGas.html\n *\n * Internally, uses a [Public Client](https://viem.sh/docs/clients/public.html) to call the [`estimateGas` action](https://viem.sh/docs/actions/public/estimateGas.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateContractGasParameters}\n * @returns The gas estimate (in wei). {@link EstimateContractGasReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateContractGas } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const gas = await estimateContractGas(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint() public']),\n *   functionName: 'mint',\n *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n * })\n */\nexport async function estimateContractGas<\n  const TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string,\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  {\n    abi,\n    address,\n    args,\n    functionName,\n    ...request\n  }: EstimateContractGasParameters<TAbi, TFunctionName, TChain, TAccount>,\n): Promise<EstimateContractGasReturnType> {\n  const data = encodeFunctionData({\n    abi,\n    args,\n    functionName,\n  } as unknown as EncodeFunctionDataParameters<TAbi, TFunctionName>)\n  try {\n    const gas = await getAction(\n      client,\n      estimateGas,\n      'estimateGas',\n    )({\n      data,\n      to: address,\n      ...request,\n    } as unknown as EstimateGasParameters<TChain>)\n    return gas\n  } catch (err) {\n    const account = request.account ? parseAccount(request.account) : undefined\n    throw getContractError(err as BaseError, {\n      abi: abi as Abi,\n      address,\n      args,\n      docsPath: '/docs/contract/estimateContractGas',\n      functionName,\n      sender: account?.address,\n    })\n  }\n}\n"],"names":[],"mappings":";;;AAaA,OAAO,EAGL,kBAAkB,GACnB,MAAM,uCAAuC,CAAA;AAK9C,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAA;AACpD,OAAO,EAGL,WAAW,GACZ,MAAM,kBAAkB,CAAA;AAxBzB,OAAO,EAEL,YAAY,GACb,MAAM,sCAAsC,CAAA;AAY7C,OAAO,EAEL,gBAAgB,GACjB,MAAM,wCAAwC,CAAA;;;;;;AAwDxC,KAAK,UAAU,mBAAmB,CAMvC,MAA2C,EAC3C,EACE,GAAG,EACH,OAAO,EACP,IAAI,EACJ,YAAY,EACZ,GAAG,OAAO,EAC2D;IAEvE,MAAM,IAAI,sPAAG,qBAAA,AAAkB,EAAC;QAC9B,GAAG;QACH,IAAI;QACJ,YAAY;KACmD,CAAC,CAAA;IAClE,IAAI;QACF,MAAM,GAAG,GAAG,yOAAM,YAAA,AAAS,EACzB,MAAM,+OACN,cAAW,EACX,aAAa,CACd,CAAC;YACA,IAAI;YACJ,EAAE,EAAE,OAAO;YACX,GAAG,OAAO;SACiC,CAAC,CAAA;QAC9C,OAAO,GAAG,CAAA;KACX,CAAC,OAAO,GAAG,EAAE;QACZ,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,mPAAC,eAAA,AAAY,EAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAA;QAC3E,0PAAM,mBAAA,AAAgB,EAAC,GAAgB,EAAE;YACvC,GAAG,EAAE,GAAU;YACf,OAAO;YACP,IAAI;YACJ,QAAQ,EAAE,oCAAoC;YAC9C,YAAY;YACZ,MAAM,EAAE,OAAO,EAAE,OAAO;SACzB,CAAC,CAAA;KACH;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5858, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5864, "column": 0}, "map": {"version":3,"file":"getBalance.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/getBalance.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type GetBalanceParameters = {\n  /** The address of the account. */\n  address: Address\n} & (\n  | {\n      /** The balance of the account at a block number. */\n      blockNumber?: bigint\n      blockTag?: never\n    }\n  | {\n      blockNumber?: never\n      /** The balance of the account at a block tag. */\n      blockTag?: BlockTag\n    }\n)\n\nexport type GetBalanceReturnType = bigint\n\nexport type GetBalanceErrorType =\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns the balance of an address in wei.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBalance.html\n * - JSON-RPC Methods: [`eth_getBalance`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getbalance)\n *\n * You can convert the balance to ether units with [`formatEther`](https://viem.sh/docs/utilities/formatEther.html).\n *\n * ```ts\n * const balance = await getBalance(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   blockTag: 'safe'\n * })\n * const balanceAsEther = formatEther(balance)\n * // \"6.942\"\n * ```\n *\n * @param client - Client to use\n * @param parameters - {@link GetBalanceParameters}\n * @returns The balance of the address in wei. {@link GetBalanceReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBalance } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const balance = await getBalance(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n * // 10000000000000000000000n (wei)\n */\nexport async function getBalance<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  { address, blockNumber, blockTag = 'latest' }: GetBalanceParameters,\n): Promise<GetBalanceReturnType> {\n  const blockNumberHex = blockNumber ? numberToHex(blockNumber) : undefined\n\n  const balance = await client.request({\n    method: 'eth_getBalance',\n    params: [address, blockNumberHex || blockTag],\n  })\n  return BigInt(balance)\n}\n"],"names":[],"mappings":";;;AAQA,OAAO,EAEL,WAAW,GACZ,MAAM,+BAA+B,CAAA;;AA4D/B,KAAK,UAAU,UAAU,CAC9B,MAAiC,EACjC,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,GAAG,QAAQ,EAAwB;IAEnE,MAAM,cAAc,GAAG,WAAW,CAAC,CAAC,4OAAC,cAAA,AAAW,EAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAA;IAEzE,MAAM,OAAO,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;QACnC,MAAM,EAAE,gBAAgB;QACxB,MAAM,EAAE;YAAC,OAAO;YAAE,cAAc,IAAI,QAAQ;SAAC;KAC9C,CAAC,CAAA;IACF,OAAO,MAAM,CAAC,OAAO,CAAC,CAAA;AACxB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5880, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5886, "column": 0}, "map": {"version":3,"file":"withCache.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/promise/withCache.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\n\nexport const promiseCache = /*#__PURE__*/ new Map()\nexport const responseCache = /*#__PURE__*/ new Map()\n\nexport type GetCacheErrorType = ErrorType\n\nexport function getCache<TData>(cacheKey: string) {\n  const buildCache = <TData>(cacheKey: string, cache: Map<string, TData>) => ({\n    clear: () => cache.delete(cacheKey),\n    get: () => cache.get(cacheKey),\n    set: (data: TData) => cache.set(cacheKey, data),\n  })\n\n  const promise = buildCache<Promise<TData>>(cacheKey, promiseCache)\n  const response = buildCache<{ created: Date; data: TData }>(\n    cacheKey,\n    responseCache,\n  )\n\n  return {\n    clear: () => {\n      promise.clear()\n      response.clear()\n    },\n    promise,\n    response,\n  }\n}\n\nexport type WithCacheParameters = {\n  /** The key to cache the data against. */\n  cacheKey: string\n  /** The time that cached data will remain in memory. Default: Infinity (no expiry) */\n  cacheTime?: number\n}\n\n/**\n * @description Returns the result of a given promise, and caches the result for\n * subsequent invocations against a provided cache key.\n */\nexport async function withCache<TData>(\n  fn: () => Promise<TData>,\n  { cacheKey, cacheTime = Infinity }: WithCacheParameters,\n) {\n  const cache = getCache<TData>(cacheKey)\n\n  // If a response exists in the cache, and it's not expired, return it\n  // and do not invoke the promise.\n  // If the max age is 0, the cache is disabled.\n  const response = cache.response.get()\n  if (response && cacheTime > 0) {\n    const age = new Date().getTime() - response.created.getTime()\n    if (age < cacheTime) return response.data\n  }\n\n  let promise = cache.promise.get()\n  if (!promise) {\n    promise = fn()\n\n    // Store the promise in the cache so that subsequent invocations\n    // will wait for the same promise to resolve (deduping).\n    cache.promise.set(promise)\n  }\n\n  try {\n    const data = await promise\n\n    // Store the response in the cache so that subsequent invocations\n    // will return the same response.\n    cache.response.set({ created: new Date(), data })\n\n    return data\n  } finally {\n    // Clear the promise cache so that subsequent invocations will\n    // invoke the promise again.\n    cache.promise.clear()\n  }\n}\n"],"names":[],"mappings":";;;;;;AAEO,MAAM,YAAY,GAAG,WAAA,EAAa,CAAC,IAAI,GAAG,EAAE,CAAA;AAC5C,MAAM,aAAa,GAAG,WAAA,EAAa,CAAC,IAAI,GAAG,EAAE,CAAA;AAI9C,SAAU,QAAQ,CAAQ,QAAgB;IAC9C,MAAM,UAAU,GAAG,CAAQ,QAAgB,EAAE,KAAyB,EAAE,CAAG,CAAD,AAAE;YAC1E,KAAK,EAAE,GAAG,CAAG,CAAD,IAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;YACnC,GAAG,EAAE,GAAG,CAAG,CAAD,IAAM,CAAC,GAAG,CAAC,QAAQ,CAAC;YAC9B,GAAG,EAAE,CAAC,IAAW,EAAE,CAAG,CAAD,IAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC;SAChD,CAAC,CAAA;IAEF,MAAM,OAAO,GAAG,UAAU,CAAiB,QAAQ,EAAE,YAAY,CAAC,CAAA;IAClE,MAAM,QAAQ,GAAG,UAAU,CACzB,QAAQ,EACR,aAAa,CACd,CAAA;IAED,OAAO;QACL,KAAK,EAAE,GAAG,EAAE;YACV,OAAO,CAAC,KAAK,EAAE,CAAA;YACf,QAAQ,CAAC,KAAK,EAAE,CAAA;QAClB,CAAC;QACD,OAAO;QACP,QAAQ;KACT,CAAA;AACH,CAAC;AAaM,KAAK,UAAU,SAAS,CAC7B,EAAwB,EACxB,EAAE,QAAQ,EAAE,SAAS,GAAG,QAAQ,EAAuB;IAEvD,MAAM,KAAK,GAAG,QAAQ,CAAQ,QAAQ,CAAC,CAAA;IAEvC,qEAAqE;IACrE,iCAAiC;IACjC,8CAA8C;IAC9C,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAA;IACrC,IAAI,QAAQ,IAAI,SAAS,GAAG,CAAC,EAAE;QAC7B,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,CAAA;QAC7D,IAAI,GAAG,GAAG,SAAS,EAAE,OAAO,QAAQ,CAAC,IAAI,CAAA;KAC1C;IAED,IAAI,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,CAAA;IACjC,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO,GAAG,EAAE,EAAE,CAAA;QAEd,gEAAgE;QAChE,wDAAwD;QACxD,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;KAC3B;IAED,IAAI;QACF,MAAM,IAAI,GAAG,MAAM,OAAO,CAAA;QAE1B,iEAAiE;QACjE,iCAAiC;QACjC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC;YAAE,OAAO,EAAE,IAAI,IAAI,EAAE;YAAE,IAAI;QAAA,CAAE,CAAC,CAAA;QAEjD,OAAO,IAAI,CAAA;KACZ,QAAS;QACR,8DAA8D;QAC9D,4BAA4B;QAC5B,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,CAAA;KACtB;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5943, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5949, "column": 0}, "map": {"version":3,"file":"getBlockNumber.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/getBlockNumber.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { getCache, withCache } from '../../utils/promise/withCache.js'\n\nexport type GetBlockNumberParameters = {\n  /** Time (in ms) that cached block number will remain in memory. */\n  cacheTime?: number\n  /** @deprecated use `cacheTime` instead. */\n  maxAge?: number\n}\n\nexport type GetBlockNumberReturnType = bigint\n\nexport type GetBlockNumberErrorType = RequestErrorType | ErrorType\n\nconst cacheKey = (id: string) => `blockNumber.${id}`\n\nexport function getBlockNumberCache(id: string) {\n  return getCache(cacheKey(id))\n}\n\n/**\n * Returns the number of the most recent block seen.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlockNumber.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks/fetching-blocks\n * - JSON-RPC Methods: [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber)\n *\n * @param client - Client to use\n * @param parameters - {@link GetBlockNumberParameters}\n * @returns The number of the block. {@link GetBlockNumberReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlockNumber } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const blockNumber = await getBlockNumber(client)\n * // 69420n\n */\nexport async function getBlockNumber<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  { cacheTime = client.cacheTime, maxAge }: GetBlockNumberParameters = {},\n): Promise<GetBlockNumberReturnType> {\n  const blockNumberHex = await withCache(\n    () =>\n      client.request({\n        method: 'eth_blockNumber',\n      }),\n    { cacheKey: cacheKey(client.uid), cacheTime: maxAge ?? cacheTime },\n  )\n  return BigInt(blockNumberHex)\n}\n"],"names":[],"mappings":";;;;AAKA,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,kCAAkC,CAAA;;AAatE,MAAM,QAAQ,GAAG,CAAC,EAAU,EAAE,CAAG,CAAD,AAAC,YAAA,EAAe,EAAE,EAAE,CAAA;AAE9C,SAAU,mBAAmB,CAAC,EAAU;IAC5C,qPAAO,WAAA,AAAQ,EAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAA;AAC/B,CAAC;AAyBM,KAAK,UAAU,cAAc,CAClC,MAAiC,EACjC,EAAE,SAAS,GAAG,MAAM,CAAC,SAAS,EAAE,MAAM,EAAA,GAA+B,CAAA,CAAE;IAEvE,MAAM,cAAc,GAAG,oPAAM,YAAA,AAAS,EACpC,GAAG,CACD,CADG,KACG,CAAC,OAAO,CAAC;YACb,MAAM,EAAE,iBAAiB;SAC1B,CAAC,EACJ;QAAE,QAAQ,EAAE,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC;QAAE,SAAS,EAAE,MAAM,IAAI,SAAS;IAAA,CAAE,CACnE,CAAA;IACD,OAAO,MAAM,CAAC,cAAc,CAAC,CAAA;AAC/B,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5968, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5974, "column": 0}, "map": {"version":3,"file":"getBlockTransactionCount.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/getBlockTransactionCount.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { Quantity } from '../../types/rpc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type HexToNumberErrorType,\n  hexToNumber,\n} from '../../utils/encoding/fromHex.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type GetBlockTransactionCountParameters =\n  | {\n      /** Hash of the block. */\n      blockHash?: Hash\n      blockNumber?: never\n      blockTag?: never\n    }\n  | {\n      blockHash?: never\n      /** The block number. */\n      blockNumber?: bigint\n      blockTag?: never\n    }\n  | {\n      blockHash?: never\n      blockNumber?: never\n      /** The block tag. Defaults to 'latest'. */\n      blockTag?: BlockTag\n    }\n\nexport type GetBlockTransactionCountReturnType = number\n\nexport type GetBlockTransactionCountErrorType =\n  | NumberToHexErrorType\n  | HexToNumberErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns the number of Transactions at a block number, hash, or tag.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlockTransactionCount.html\n * - JSON-RPC Methods:\n *   - Calls [`eth_getBlockTransactionCountByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbynumber) for `blockNumber` & `blockTag`.\n *   - Calls [`eth_getBlockTransactionCountByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbyhash) for `blockHash`.\n *\n * @param client - Client to use\n * @param parameters - {@link GetBlockTransactionCountParameters}\n * @returns The block transaction count. {@link GetBlockTransactionCountReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlockTransactionCount } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const count = await getBlockTransactionCount(client)\n */\nexport async function getBlockTransactionCount<\n  TChain extends Chain | undefined,\n>(\n  client: Client<Transport, TChain>,\n  {\n    blockHash,\n    blockNumber,\n    blockTag = 'latest',\n  }: GetBlockTransactionCountParameters = {},\n): Promise<GetBlockTransactionCountReturnType> {\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n\n  let count: Quantity\n  if (blockHash) {\n    count = await client.request({\n      method: 'eth_getBlockTransactionCountByHash',\n      params: [blockHash],\n    })\n  } else {\n    count = await client.request({\n      method: 'eth_getBlockTransactionCountByNumber',\n      params: [blockNumberHex || blockTag],\n    })\n  }\n\n  return hexToNumber(count)\n}\n"],"names":[],"mappings":";;;AAYA,OAAO,EAEL,WAAW,GACZ,MAAM,+BAA+B,CAAA;AAPtC,OAAO,EAEL,WAAW,GACZ,MAAM,iCAAiC,CAAA;;;AAyDjC,KAAK,UAAU,wBAAwB,CAG5C,MAAiC,EACjC,EACE,SAAS,EACT,WAAW,EACX,QAAQ,GAAG,QAAQ,EAAA,GACmB,CAAA,CAAE;IAE1C,MAAM,cAAc,GAClB,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC,yPAAA,AAAW,EAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAA;IAElE,IAAI,KAAe,CAAA;IACnB,IAAI,SAAS,EAAE;QACb,KAAK,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;YAC3B,MAAM,EAAE,oCAAoC;YAC5C,MAAM,EAAE;gBAAC,SAAS;aAAC;SACpB,CAAC,CAAA;KACH,MAAM;QACL,KAAK,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;YAC3B,MAAM,EAAE,sCAAsC;YAC9C,MAAM,EAAE;gBAAC,cAAc,IAAI,QAAQ;aAAC;SACrC,CAAC,CAAA;KACH;IAED,oPAAO,cAAA,AAAW,EAAC,KAAK,CAAC,CAAA;AAC3B,CAAC","ignoreList":[0]}},
    {"offset": {"line": 6001, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6007, "column": 0}, "map": {"version":3,"file":"getBytecode.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/getBytecode.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type GetBytecodeParameters = {\n  address: Address\n} & (\n  | {\n      blockNumber?: never\n      blockTag?: BlockTag\n    }\n  | {\n      blockNumber?: bigint\n      blockTag?: never\n    }\n)\n\nexport type GetBytecodeReturnType = Hex | undefined\n\nexport type GetBytecodeErrorType =\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Retrieves the bytecode at an address.\n *\n * - Docs: https://viem.sh/docs/contract/getBytecode.html\n * - JSON-RPC Methods: [`eth_getCode`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getcode)\n *\n * @param client - Client to use\n * @param parameters - {@link GetBytecodeParameters}\n * @returns The contract's bytecode. {@link GetBytecodeReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBytecode } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const code = await getBytecode(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n * })\n */\nexport async function getBytecode<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  { address, blockNumber, blockTag = 'latest' }: GetBytecodeParameters,\n): Promise<GetBytecodeReturnType> {\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n  const hex = await client.request({\n    method: 'eth_getCode',\n    params: [address, blockNumberHex || blockTag],\n  })\n  if (hex === '0x') return undefined\n  return hex\n}\n"],"names":[],"mappings":";;;AASA,OAAO,EAEL,WAAW,GACZ,MAAM,+BAA+B,CAAA;;AA6C/B,KAAK,UAAU,WAAW,CAC/B,MAAiC,EACjC,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,GAAG,QAAQ,EAAyB;IAEpE,MAAM,cAAc,GAClB,WAAW,KAAK,SAAS,CAAC,CAAC,4OAAC,cAAA,AAAW,EAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAA;IAClE,MAAM,GAAG,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;QAC/B,MAAM,EAAE,aAAa;QACrB,MAAM,EAAE;YAAC,OAAO;YAAE,cAAc,IAAI,QAAQ;SAAC;KAC9C,CAAC,CAAA;IACF,IAAI,GAAG,KAAK,IAAI,EAAE,OAAO,SAAS,CAAA;IAClC,OAAO,GAAG,CAAA;AACZ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 6024, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6030, "column": 0}, "map": {"version":3,"file":"getChainId.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/getChainId.ts"],"sourcesContent":["import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type HexToNumberErrorType,\n  hexToNumber,\n} from '../../utils/encoding/fromHex.js'\n\nexport type GetChainIdReturnType = number\n\nexport type GetChainIdErrorType =\n  | HexToNumberErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns the chain ID associated with the current network.\n *\n * - Docs: https://viem.sh/docs/actions/public/getChainId.html\n * - JSON-RPC Methods: [`eth_chainId`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_chainid)\n *\n * @param client - Client to use\n * @returns The current chain ID. {@link GetChainIdReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getChainId } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const chainId = await getChainId(client)\n * // 1\n */\nexport async function getChainId<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(client: Client<Transport, TChain, TAccount>): Promise<GetChainIdReturnType> {\n  const chainIdHex = await client.request({\n    method: 'eth_chainId',\n  })\n  return hexToNumber(chainIdHex)\n}\n"],"names":[],"mappings":";;;AAMA,OAAO,EAEL,WAAW,GACZ,MAAM,iCAAiC,CAAA;;AA8BjC,KAAK,UAAU,UAAU,CAG9B,MAA2C;IAC3C,MAAM,UAAU,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;QACtC,MAAM,EAAE,aAAa;KACtB,CAAC,CAAA;IACF,oPAAO,cAAA,AAAW,EAAC,UAAU,CAAC,CAAA;AAChC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 6041, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6047, "column": 0}, "map": {"version":3,"file":"decodeEventLog.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/abi/decodeEventLog.ts"],"sourcesContent":["import type { Abi, AbiParameter, ExtractAbiEventNames } from 'abitype'\n\nimport {\n  AbiDecodingDataSizeTooSmallError,\n  type AbiDecodingDataSizeTooSmallErrorType,\n  AbiEventSignatureEmptyTopicsError,\n  type AbiEventSignatureEmptyTopicsErrorType,\n  AbiEventSignatureNotFoundError,\n  type AbiEventSignatureNotFoundErrorType,\n  DecodeLogDataMismatch,\n  type DecodeLogDataMismatchErrorType,\n  DecodeLogTopicsMismatch,\n  type DecodeLogTopicsMismatchErrorType,\n} from '../../errors/abi.js'\nimport type {\n  EventDefinition,\n  GetEventArgsFromTopics,\n  InferEventName,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type GetEventSelectorErrorType,\n  getEventSelector,\n} from '../hash/getEventSelector.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type DecodeAbiParametersErrorType,\n  decodeAbiParameters,\n} from './decodeAbiParameters.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\n\nexport type DecodeEventLogParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TEventName extends string | undefined = string,\n  TTopics extends Hex[] = Hex[],\n  TData extends Hex | undefined = undefined,\n  TStrict extends boolean = true,\n> = {\n  abi: TAbi\n  data?: TData\n  eventName?: InferEventName<TAbi, TEventName>\n  strict?: TStrict\n  topics: [signature: Hex, ...args: TTopics] | []\n}\n\nexport type DecodeEventLogReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TEventName extends string | undefined = string,\n  TTopics extends Hex[] = Hex[],\n  TData extends Hex | undefined = undefined,\n  TStrict extends boolean = true,\n  _EventNames extends string = TAbi extends Abi\n    ? Abi extends TAbi\n      ? string\n      : ExtractAbiEventNames<TAbi>\n    : string,\n> = TEventName extends _EventNames[number]\n  ? Prettify<\n      {\n        eventName: TEventName\n      } & GetEventArgsFromTopics<TAbi, TEventName, TTopics, TData, TStrict>\n    >\n  : {\n      [TName in _EventNames]: Prettify<\n        {\n          eventName: TName\n        } & GetEventArgsFromTopics<TAbi, TName, TTopics, TData, TStrict>\n      >\n    }[_EventNames]\n\nexport type DecodeEventLogErrorType =\n  | AbiDecodingDataSizeTooSmallErrorType\n  | AbiEventSignatureEmptyTopicsErrorType\n  | AbiEventSignatureNotFoundErrorType\n  | DecodeAbiParametersErrorType\n  | DecodeLogTopicsMismatchErrorType\n  | DecodeLogDataMismatchErrorType\n  | FormatAbiItemErrorType\n  | GetEventSelectorErrorType\n  | ErrorType\n\nconst docsPath = '/docs/contract/decodeEventLog'\n\nexport function decodeEventLog<\n  const TAbi extends Abi | readonly unknown[],\n  TEventName extends string | undefined = undefined,\n  TTopics extends Hex[] = Hex[],\n  TData extends Hex | undefined = undefined,\n  TStrict extends boolean = true,\n>({\n  abi,\n  data,\n  strict: strict_,\n  topics,\n}: DecodeEventLogParameters<\n  TAbi,\n  TEventName,\n  TTopics,\n  TData,\n  TStrict\n>): DecodeEventLogReturnType<TAbi, TEventName, TTopics, TData, TStrict> {\n  const strict = strict_ ?? true\n  const [signature, ...argTopics] = topics\n  if (!signature)\n    throw new AbiEventSignatureEmptyTopicsError({\n      docsPath,\n    })\n  const abiItem = (abi as Abi).find(\n    (x) =>\n      x.type === 'event' &&\n      signature === getEventSelector(formatAbiItem(x) as EventDefinition),\n  )\n  if (!(abiItem && 'name' in abiItem) || abiItem.type !== 'event')\n    throw new AbiEventSignatureNotFoundError(signature, {\n      docsPath,\n    })\n\n  const { name, inputs } = abiItem\n  const isUnnamed = inputs?.some((x) => !('name' in x && x.name))\n\n  let args: any = isUnnamed ? [] : {}\n\n  // Decode topics (indexed args).\n  const indexedInputs = inputs.filter((x) => 'indexed' in x && x.indexed)\n  for (let i = 0; i < indexedInputs.length; i++) {\n    const param = indexedInputs[i]\n    const topic = argTopics[i]\n    if (!topic)\n      throw new DecodeLogTopicsMismatch({\n        abiItem,\n        param: param as AbiParameter & { indexed: boolean },\n      })\n    args[param.name || i] = decodeTopic({ param, value: topic })\n  }\n\n  // Decode data (non-indexed args).\n  const nonIndexedInputs = inputs.filter((x) => !('indexed' in x && x.indexed))\n  if (nonIndexedInputs.length > 0) {\n    if (data && data !== '0x') {\n      try {\n        const decodedData = decodeAbiParameters(nonIndexedInputs, data)\n        if (decodedData) {\n          if (isUnnamed) args = [...args, ...decodedData]\n          else {\n            for (let i = 0; i < nonIndexedInputs.length; i++) {\n              args[nonIndexedInputs[i].name!] = decodedData[i]\n            }\n          }\n        }\n      } catch (err) {\n        if (strict) {\n          if (err instanceof AbiDecodingDataSizeTooSmallError)\n            throw new DecodeLogDataMismatch({\n              abiItem,\n              data: err.data,\n              params: err.params,\n              size: err.size,\n            })\n          throw err\n        }\n      }\n    } else if (strict) {\n      throw new DecodeLogDataMismatch({\n        abiItem,\n        data: '0x',\n        params: nonIndexedInputs,\n        size: 0,\n      })\n    }\n  }\n\n  return {\n    eventName: name,\n    args: Object.values(args).length > 0 ? args : undefined,\n  } as unknown as DecodeEventLogReturnType<\n    TAbi,\n    TEventName,\n    TTopics,\n    TData,\n    TStrict\n  >\n}\n\nfunction decodeTopic({ param, value }: { param: AbiParameter; value: Hex }) {\n  if (\n    param.type === 'string' ||\n    param.type === 'bytes' ||\n    param.type === 'tuple' ||\n    param.type.match(/^(.*)\\[(\\d+)?\\]$/)\n  )\n    return value\n  const decodedArg = decodeAbiParameters([param], value) || []\n  return decodedArg[0]\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6135, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6141, "column": 0}, "map": {"version":3,"file":"log.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/formatters/log.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { Log } from '../../types/log.js'\nimport type { RpcLog } from '../../types/rpc.js'\n\nexport type FormatLogErrorType = ErrorType\n\nexport function formatLog(\n  log: Partial<RpcLog>,\n  { args, eventName }: { args?: unknown; eventName?: string } = {},\n) {\n  return {\n    ...log,\n    blockHash: log.blockHash ? log.blockHash : null,\n    blockNumber: log.blockNumber ? BigInt(log.blockNumber) : null,\n    logIndex: log.logIndex ? Number(log.logIndex) : null,\n    transactionHash: log.transactionHash ? log.transactionHash : null,\n    transactionIndex: log.transactionIndex\n      ? Number(log.transactionIndex)\n      : null,\n    ...(eventName ? { args, eventName } : {}),\n  } as Log\n}\n"],"names":[],"mappings":";;;AAMM,SAAU,SAAS,CACvB,GAAoB,EACpB,EAAE,IAAI,EAAE,SAAS,EAAA,GAA6C,CAAA,CAAE;IAEhE,OAAO;QACL,GAAG,GAAG;QACN,SAAS,EAAE,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI;QAC/C,WAAW,EAAE,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI;QAC7D,QAAQ,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI;QACpD,eAAe,EAAE,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI;QACjE,gBAAgB,EAAE,GAAG,CAAC,gBAAgB,GAClC,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,GAC5B,IAAI;QACR,GAAG,AAAC,SAAS,CAAC,CAAC,CAAC;YAAE,IAAI;YAAE,SAAS;QAAA,CAAE,CAAC,CAAC,CAAC,CAAA,CAAE,CAAC;KACnC,CAAA;AACV,CAAC","ignoreList":[0]}},
    {"offset": {"line": 6158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6164, "column": 0}, "map": {"version":3,"file":"getLogs.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/getLogs.ts"],"sourcesContent":["import type { Abi, AbiEvent, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  DecodeLogDataMismatch,\n  DecodeLogTopicsMismatch,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  MaybeAbiEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { Log } from '../../types/log.js'\nimport type { Hash, LogTopic } from '../../types/misc.js'\nimport type { RpcLog } from '../../types/rpc.js'\nimport {\n  type DecodeEventLogErrorType,\n  decodeEventLog,\n} from '../../utils/abi/decodeEventLog.js'\nimport {\n  type EncodeEventTopicsErrorType,\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from '../../utils/abi/encodeEventTopics.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type FormatLogErrorType,\n  formatLog,\n} from '../../utils/formatters/log.js'\n\nexport type GetLogsParameters<\n  TAbiEvent extends AbiEvent | undefined = undefined,\n  TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _EventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n> = {\n  /** Address or list of addresses from which logs originated */\n  address?: Address | Address[]\n} & (\n  | {\n      event: TAbiEvent\n      events?: never\n      args?: MaybeExtractEventArgsFromAbi<TAbiEvents, _EventName>\n      /**\n       * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n       * @default false\n       */\n      strict?: TStrict\n    }\n  | {\n      event?: never\n      events: TAbiEvents\n      args?: never\n      /**\n       * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n       * @default false\n       */\n      strict?: TStrict\n    }\n  | {\n      event?: never\n      events?: never\n      args?: never\n      strict?: never\n    }\n) &\n  (\n    | {\n        /** Block number or tag after which to include logs */\n        fromBlock?: TFromBlock | BlockNumber | BlockTag\n        /** Block number or tag before which to include logs */\n        toBlock?: TToBlock | BlockNumber | BlockTag\n        blockHash?: never\n      }\n    | {\n        fromBlock?: never\n        toBlock?: never\n        /** Hash of block to include logs from */\n        blockHash?: Hash\n      }\n  )\n\nexport type GetLogsReturnType<\n  TAbiEvent extends AbiEvent | undefined = undefined,\n  TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _EventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n  _Pending extends boolean =\n    | (TFromBlock extends 'pending' ? true : false)\n    | (TToBlock extends 'pending' ? true : false),\n> = Log<bigint, number, _Pending, TAbiEvent, TStrict, TAbiEvents, _EventName>[]\n\nexport type GetLogsErrorType =\n  | DecodeEventLogErrorType\n  | EncodeEventTopicsErrorType\n  | FormatLogErrorType\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns a list of event logs matching the provided parameters.\n *\n * - Docs: https://viem.sh/docs/actions/public/getLogs.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/filters-and-logs/event-logs\n * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\n *\n * @param client - Client to use\n * @param parameters - {@link GetLogsParameters}\n * @returns A list of event logs. {@link GetLogsReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbiItem } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getLogs } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const logs = await getLogs(client)\n */\nexport async function getLogs<\n  TChain extends Chain | undefined,\n  const TAbiEvent extends AbiEvent | undefined = undefined,\n  const TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  client: Client<Transport, TChain>,\n  {\n    address,\n    blockHash,\n    fromBlock,\n    toBlock,\n    event,\n    events: events_,\n    args,\n    strict: strict_,\n  }: GetLogsParameters<\n    TAbiEvent,\n    TAbiEvents,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  > = {},\n): Promise<\n  GetLogsReturnType<TAbiEvent, TAbiEvents, TStrict, TFromBlock, TToBlock>\n> {\n  const strict = strict_ ?? false\n  const events = events_ ?? (event ? [event] : undefined)\n\n  let topics: LogTopic[] = []\n  if (events) {\n    topics = [\n      (events as AbiEvent[]).flatMap((event) =>\n        encodeEventTopics({\n          abi: [event],\n          eventName: (event as AbiEvent).name,\n          args,\n        } as EncodeEventTopicsParameters),\n      ),\n    ]\n    if (event) topics = topics[0] as LogTopic[]\n  }\n\n  let logs: RpcLog[]\n  if (blockHash) {\n    logs = await client.request({\n      method: 'eth_getLogs',\n      params: [{ address, topics, blockHash }],\n    })\n  } else {\n    logs = await client.request({\n      method: 'eth_getLogs',\n      params: [\n        {\n          address,\n          topics,\n          fromBlock:\n            typeof fromBlock === 'bigint' ? numberToHex(fromBlock) : fromBlock,\n          toBlock: typeof toBlock === 'bigint' ? numberToHex(toBlock) : toBlock,\n        },\n      ],\n    })\n  }\n\n  return logs\n    .map((log) => {\n      try {\n        const { eventName, args } = events\n          ? decodeEventLog({\n              abi: events as Abi,\n              data: log.data,\n              topics: log.topics as any,\n              strict,\n            })\n          : { eventName: undefined, args: undefined }\n        return formatLog(log, { args, eventName: eventName as string })\n      } catch (err) {\n        let eventName\n        let isUnnamed\n        if (\n          err instanceof DecodeLogDataMismatch ||\n          err instanceof DecodeLogTopicsMismatch\n        ) {\n          // If strict mode is on, and log data/topics do not match event definition, skip.\n          if (strict) return\n          eventName = err.abiItem.name\n          isUnnamed = err.abiItem.inputs?.some((x) => !('name' in x && x.name))\n        }\n\n        // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n        return formatLog(log, { args: isUnnamed ? [] : {}, eventName })\n      }\n    })\n    .filter(Boolean) as unknown as GetLogsReturnType<\n    TAbiEvent,\n    TAbiEvents,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6252, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6258, "column": 0}, "map": {"version":3,"file":"getContractEvents.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/getContractEvents.ts"],"sourcesContent":["import type { Abi, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { GetEventArgs, InferEventName } from '../../types/contract.js'\nimport type { Log } from '../../types/log.js'\nimport type { Hash } from '../../types/misc.js'\nimport {\n  type GetAbiItemErrorType,\n  type GetAbiItemParameters,\n  getAbiItem,\n} from '../../utils/abi/getAbiItem.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type GetLogsErrorType,\n  type GetLogsParameters,\n  getLogs,\n} from './getLogs.js'\n\nexport type GetContractEventsParameters<\n  TAbi extends Abi | readonly unknown[] = readonly unknown[],\n  TEventName extends string | undefined = string | undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = {\n  /** The address of the contract. */\n  address?: Address | Address[]\n  /** Contract ABI. */\n  abi: TAbi\n  args?: TEventName extends string ? GetEventArgs<TAbi, TEventName> : undefined\n  /** Contract event. */\n  eventName?: InferEventName<TAbi, TEventName>\n  /**\n   * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n   * @default false\n   */\n  strict?: TStrict\n} & (\n  | {\n      /** Block number or tag after which to include logs */\n      fromBlock?: TFromBlock | BlockNumber | BlockTag\n      /** Block number or tag before which to include logs */\n      toBlock?: TToBlock | BlockNumber | BlockTag\n      blockHash?: never\n    }\n  | {\n      fromBlock?: never\n      toBlock?: never\n      /** Hash of block to include logs from */\n      blockHash?: Hash\n    }\n)\n\nexport type GetContractEventsReturnType<\n  TAbi extends Abi | readonly unknown[] = readonly unknown[],\n  TEventName extends string | undefined = string | undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _Pending extends boolean =\n    | (TFromBlock extends 'pending' ? true : false)\n    | (TToBlock extends 'pending' ? true : false),\n> = Log<bigint, number, _Pending, undefined, TStrict, TAbi, TEventName>[]\n\nexport type GetContractEventsErrorType =\n  | GetAbiItemErrorType\n  | GetLogsErrorType\n  | ErrorType\n\n/**\n * Returns a list of event logs emitted by a contract.\n *\n * - Docs: https://viem.sh/docs/actions/public/getContractEvents.html\n * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\n *\n * @param client - Client to use\n * @param parameters - {@link GetContractEventsParameters}\n * @returns A list of event logs. {@link GetContractEventsReturnType}\n *\n * @example\n * import { createClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getContractEvents } from 'viem/public'\n * import { wagmiAbi } from './abi'\n *\n * const client = createClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const logs = await getContractEvents(client, {\n *  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *  abi: wagmiAbi,\n *  eventName: 'Transfer'\n * })\n */\nexport async function getContractEvents<\n  TChain extends Chain | undefined,\n  const TAbi extends Abi | readonly unknown[],\n  TEventName extends string | undefined = undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  client: Client<Transport, TChain>,\n  {\n    abi,\n    address,\n    args,\n    blockHash,\n    eventName,\n    fromBlock,\n    toBlock,\n    strict,\n  }: GetContractEventsParameters<\n    TAbi,\n    TEventName,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >,\n): Promise<\n  GetContractEventsReturnType<TAbi, TEventName, TStrict, TFromBlock, TToBlock>\n> {\n  const event = eventName\n    ? getAbiItem({ abi, name: eventName } as GetAbiItemParameters)\n    : undefined\n  const events = !event\n    ? (abi as Abi).filter((x) => x.type === 'event')\n    : undefined\n  return getAction(\n    client,\n    getLogs,\n    'getLogs',\n  )({\n    address,\n    args,\n    blockHash,\n    event,\n    events,\n    fromBlock,\n    toBlock,\n    strict,\n  } as {} as GetLogsParameters) as unknown as GetContractEventsReturnType<\n    TAbi,\n    TEventName,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >\n}\n"],"names":[],"mappings":";;;AAUA,OAAO,EAGL,UAAU,GACX,MAAM,+BAA+B,CAAA;AACtC,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAA;AACpD,OAAO,EAGL,OAAO,GACR,MAAM,cAAc,CAAA;;;;AA+Ed,KAAK,UAAU,iBAAiB,CAQrC,MAAiC,EACjC,EACE,GAAG,EACH,OAAO,EACP,IAAI,EACJ,SAAS,EACT,SAAS,EACT,SAAS,EACT,OAAO,EACP,MAAM,EAOP;IAID,MAAM,KAAK,GAAG,SAAS,8OACnB,aAAA,AAAU,EAAC;QAAE,GAAG;QAAE,IAAI,EAAE,SAAS;IAAA,CAA0B,CAAC,GAC5D,SAAS,CAAA;IACb,MAAM,MAAM,GAAG,CAAC,KAAK,GAChB,GAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,AAAE,CAAC,IAAI,KAAK,OAAO,CAAC,GAC9C,SAAS,CAAA;IACb,0OAAO,YAAA,AAAS,EACd,MAAM,2OACN,UAAO,EACP,SAAS,CACV,CAAC;QACA,OAAO;QACP,IAAI;QACJ,SAAS;QACT,KAAK;QACL,MAAM;QACN,SAAS;QACT,OAAO;QACP,MAAM;KACoB,CAM3B,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 6284, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6290, "column": 0}, "map": {"version":3,"file":"encodedLabelToLabelhash.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/ens/encodedLabelToLabelhash.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type IsHexErrorType, isHex } from '../data/isHex.js'\n\nexport type EncodedLabelToLabelhashErrorType = IsHexErrorType | ErrorType\n\nexport function encodedLabelToLabelhash(label: string): Hex | null {\n  if (label.length !== 66) return null\n  if (label.indexOf('[') !== 0) return null\n  if (label.indexOf(']') !== 65) return null\n  const hash = `0x${label.slice(1, 65)}`\n  if (!isHex(hash)) return null\n  return hash\n}\n"],"names":[],"mappings":";;;AAEA,OAAO,EAAuB,KAAK,EAAE,MAAM,kBAAkB,CAAA;;AAIvD,SAAU,uBAAuB,CAAC,KAAa;IACnD,IAAI,KAAK,CAAC,MAAM,KAAK,EAAE,EAAE,OAAO,IAAI,CAAA;IACpC,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,OAAO,IAAI,CAAA;IACzC,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,OAAO,IAAI,CAAA;IAC1C,MAAM,IAAI,GAAG,CAAA,EAAA,EAAK,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAA;IACtC,IAAI,wOAAC,QAAA,AAAK,EAAC,IAAI,CAAC,EAAE,OAAO,IAAI,CAAA;IAC7B,OAAO,IAAI,CAAA;AACb,CAAC","ignoreList":[0]}},
    {"offset": {"line": 6303, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6309, "column": 0}, "map": {"version":3,"file":"namehash.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/ens/namehash.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport { type ConcatErrorType, concat } from '../data/concat.js'\nimport {\n  type StringToBytesErrorType,\n  type ToBytesErrorType,\n  stringToBytes,\n  toBytes,\n} from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport {\n  type EncodedLabelToLabelhashErrorType,\n  encodedLabelToLabelhash,\n} from './encodedLabelToLabelhash.js'\n\nexport type NamehashErrorType =\n  | BytesToHexErrorType\n  | EncodedLabelToLabelhashErrorType\n  | ToBytesErrorType\n  | Keccak256ErrorType\n  | StringToBytesErrorType\n  | ConcatErrorType\n  | ErrorType\n\n/**\n * @description Hashes ENS name\n *\n * - Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `namehash`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n *\n * @example\n * namehash('wevm.eth')\n * '0xf246651c1b9a6b141d19c2604e9a58f567973833990f830d882534a747801359'\n *\n * @link https://eips.ethereum.org/EIPS/eip-137\n */\nexport function namehash(name: string) {\n  let result = new Uint8Array(32).fill(0)\n  if (!name) return bytesToHex(result)\n\n  const labels = name.split('.')\n  // Iterate in reverse order building up hash\n  for (let i = labels.length - 1; i >= 0; i -= 1) {\n    const hashFromEncodedLabel = encodedLabelToLabelhash(labels[i])\n    const hashed = hashFromEncodedLabel\n      ? toBytes(hashFromEncodedLabel)\n      : keccak256(stringToBytes(labels[i]), 'bytes')\n    result = keccak256(concat([result, hashed]), 'bytes')\n  }\n\n  return bytesToHex(result)\n}\n"],"names":[],"mappings":";;;AAUA,OAAO,EAEL,uBAAuB,GACxB,MAAM,8BAA8B,CAAA;AAJrC,OAAO,EAA2B,SAAS,EAAE,MAAM,sBAAsB,CAAA;AAPzE,OAAO,EAGL,aAAa,EACb,OAAO,GACR,MAAM,wBAAwB,CAAA;AAN/B,OAAO,EAAwB,MAAM,EAAE,MAAM,mBAAmB,CAAA;AAOhE,OAAO,EAA4B,UAAU,EAAE,MAAM,sBAAsB,CAAA;;;;;;AA2BrE,SAAU,QAAQ,CAAC,IAAY;IACnC,IAAI,MAAM,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IACvC,IAAI,CAAC,IAAI,EAAE,kPAAO,aAAA,AAAU,EAAC,MAAM,CAAC,CAAA;IAEpC,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;IAC9B,4CAA4C;IAC5C,IAAK,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAE;QAC9C,MAAM,oBAAoB,2PAAG,0BAAA,AAAuB,EAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;QAC/D,MAAM,MAAM,GAAG,oBAAoB,GAC/B,uPAAA,AAAO,EAAC,oBAAoB,CAAC,8OAC7B,YAAA,AAAS,+OAAC,gBAAA,AAAa,EAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAA;QAChD,MAAM,8OAAG,YAAA,AAAS,0OAAC,SAAA,AAAM,EAAC;YAAC,MAAM;YAAE,MAAM;SAAC,CAAC,EAAE,OAAO,CAAC,CAAA;KACtD;IAED,kPAAO,aAAA,AAAU,EAAC,MAAM,CAAC,CAAA;AAC3B,CAAC","ignoreList":[0]}},
    {"offset": {"line": 6337, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6343, "column": 0}, "map": {"version":3,"file":"readContract.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/readContract.ts"],"sourcesContent":["import type { Abi } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BaseError } from '../../errors/base.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractFunctionConfig,\n  ContractFunctionResult,\n} from '../../types/contract.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  type DecodeFunctionResultParameters,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from '../../utils/errors/getContractError.js'\nimport { getAction } from '../../utils/getAction.js'\n\nimport { type CallErrorType, type CallParameters, call } from './call.js'\n\nexport type ReadContractParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string = string,\n> = Pick<CallParameters, 'account' | 'blockNumber' | 'blockTag'> &\n  ContractFunctionConfig<TAbi, TFunctionName, 'view' | 'pure'>\n\nexport type ReadContractReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string = string,\n> = ContractFunctionResult<TAbi, TFunctionName>\n\nexport type ReadContractErrorType = GetContractErrorReturnType<\n  CallErrorType | EncodeFunctionDataErrorType | DecodeFunctionResultErrorType\n>\n\n/**\n * Calls a read-only function on a contract, and returns the response.\n *\n * - Docs: https://viem.sh/docs/contract/readContract.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts/reading-contracts\n *\n * A \"read-only\" function (constant function) on a Solidity contract is denoted by a `view` or `pure` keyword. They can only read the state of the contract, and cannot make any changes to it. Since read-only methods do not change the state of the contract, they do not require any gas to be executed, and can be called by any user without the need to pay for gas.\n *\n * Internally, uses a [Public Client](https://viem.sh/docs/clients/public.html) to call the [`call` action](https://viem.sh/docs/actions/public/call.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n *\n * @param client - Client to use\n * @param parameters - {@link ReadContractParameters}\n * @returns The response from the contract. Type is inferred. {@link ReadContractReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { readContract } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const result = await readContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function balanceOf(address) view returns (uint256)']),\n *   functionName: 'balanceOf',\n *   args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n * })\n * // 424122n\n */\nexport async function readContract<\n  TChain extends Chain | undefined,\n  const TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string,\n>(\n  client: Client<Transport, TChain>,\n  {\n    abi,\n    address,\n    args,\n    functionName,\n    ...callRequest\n  }: ReadContractParameters<TAbi, TFunctionName>,\n): Promise<ReadContractReturnType<TAbi, TFunctionName>> {\n  const calldata = encodeFunctionData({\n    abi,\n    args,\n    functionName,\n  } as unknown as EncodeFunctionDataParameters<TAbi, TFunctionName>)\n  try {\n    const { data } = await getAction(\n      client,\n      call,\n      'call',\n    )({\n      data: calldata,\n      to: address,\n      ...callRequest,\n    } as unknown as CallParameters)\n    return decodeFunctionResult({\n      abi,\n      args,\n      functionName,\n      data: data || '0x',\n    } as DecodeFunctionResultParameters<\n      TAbi,\n      TFunctionName\n    >) as ReadContractReturnType<TAbi, TFunctionName>\n  } catch (err) {\n    throw getContractError(err as BaseError, {\n      abi: abi as Abi,\n      address,\n      args,\n      docsPath: '/docs/contract/readContract',\n      functionName,\n    })\n  }\n}\n"],"names":[],"mappings":";;;AAeA,OAAO,EAGL,kBAAkB,GACnB,MAAM,uCAAuC,CAAA;AAK9C,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAA;AAEpD,OAAO,EAA2C,IAAI,EAAE,MAAM,WAAW,CAAA;AAhBzE,OAAO,EAGL,oBAAoB,GACrB,MAAM,yCAAyC,CAAA;AAMhD,OAAO,EAEL,gBAAgB,GACjB,MAAM,wCAAwC,CAAA;;;;;;AAmDxC,KAAK,UAAU,YAAY,CAKhC,MAAiC,EACjC,EACE,GAAG,EACH,OAAO,EACP,IAAI,EACJ,YAAY,EACZ,GAAG,WAAW,EAC8B;IAE9C,MAAM,QAAQ,sPAAG,qBAAA,AAAkB,EAAC;QAClC,GAAG;QACH,IAAI;QACJ,YAAY;KACmD,CAAC,CAAA;IAClE,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,GAAG,yOAAM,YAAA,AAAS,EAC9B,MAAM,wOACN,OAAI,EACJ,MAAM,CACP,CAAC;YACA,IAAI,EAAE,QAAQ;YACd,EAAE,EAAE,OAAO;YACX,GAAG,WAAW;SACc,CAAC,CAAA;QAC/B,4PAAO,uBAAA,AAAoB,EAAC;YAC1B,GAAG;YACH,IAAI;YACJ,YAAY;YACZ,IAAI,EAAE,IAAI,IAAI,IAAI;SAInB,CAAgD,CAAA;KAClD,CAAC,OAAO,GAAG,EAAE;QACZ,0PAAM,mBAAA,AAAgB,EAAC,GAAgB,EAAE;YACvC,GAAG,EAAE,GAAU;YACf,OAAO;YACP,IAAI;YACJ,QAAQ,EAAE,6BAA6B;YACvC,YAAY;SACb,CAAC,CAAA;KACH;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 6384, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6390, "column": 0}, "map": {"version":3,"file":"encodeLabelhash.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/ens/encodeLabelhash.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\n\nexport type EncodeLabelhashErrorType = ErrorType\n\nexport function encodeLabelhash(hash: Hex): `[${string}]` {\n  return `[${hash.slice(2)}]`\n}\n"],"names":[],"mappings":";;;AAKM,SAAU,eAAe,CAAC,IAAS;IACvC,OAAO,CAAA,CAAA,EAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA,CAAA,CAAG,CAAA;AAC7B,CAAC","ignoreList":[0]}},
    {"offset": {"line": 6396, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6402, "column": 0}, "map": {"version":3,"file":"labelhash.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/ens/labelhash.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport {\n  type StringToBytesErrorType,\n  stringToBytes,\n} from '../encoding/toBytes.js'\nimport { type BytesToHexErrorType, bytesToHex } from '../encoding/toHex.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport {\n  type EncodedLabelToLabelhashErrorType,\n  encodedLabelToLabelhash,\n} from './encodedLabelToLabelhash.js'\n\nexport type LabelhashErrorType =\n  | BytesToHexErrorType\n  | EncodedLabelToLabelhashErrorType\n  | Keccak256ErrorType\n  | StringToBytesErrorType\n  | ErrorType\n\n/**\n * @description Hashes ENS label\n *\n * - Since ENS labels prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS labels](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `labelhash`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n *\n * @example\n * labelhash('eth')\n * '0x4f5b812789fc606be1b3b16908db13fc7a9adf7ca72641f84d75b47069d3d7f0'\n */\nexport function labelhash(label: string) {\n  const result = new Uint8Array(32).fill(0)\n  if (!label) return bytesToHex(result)\n  return encodedLabelToLabelhash(label) || keccak256(stringToBytes(label))\n}\n"],"names":[],"mappings":";;;AAOA,OAAO,EAEL,uBAAuB,GACxB,MAAM,8BAA8B,CAAA;AAJrC,OAAO,EAA2B,SAAS,EAAE,MAAM,sBAAsB,CAAA;AALzE,OAAO,EAEL,aAAa,GACd,MAAM,wBAAwB,CAAA;AAC/B,OAAO,EAA4B,UAAU,EAAE,MAAM,sBAAsB,CAAA;;;;;AAuBrE,SAAU,SAAS,CAAC,KAAa;IACrC,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IACzC,IAAI,CAAC,KAAK,EAAE,QAAO,uPAAA,AAAU,EAAC,MAAM,CAAC,CAAA;IACrC,+PAAO,0BAAA,AAAuB,EAAC,KAAK,CAAC,+OAAI,YAAA,AAAS,+OAAC,gBAAA,AAAa,EAAC,KAAK,CAAC,CAAC,CAAA;AAC1E,CAAC","ignoreList":[0]}},
    {"offset": {"line": 6418, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6424, "column": 0}, "map": {"version":3,"file":"packetToBytes.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/ens/packetToBytes.ts"],"sourcesContent":["// Adapted from https://github.com/mafintosh/dns-packet\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray } from '../../types/misc.js'\nimport {\n  type StringToBytesErrorType,\n  stringToBytes,\n} from '../encoding/toBytes.js'\nimport {\n  type EncodeLabelhashErrorType,\n  encodeLabelhash,\n} from './encodeLabelhash.js'\nimport { type LabelhashErrorType, labelhash } from './labelhash.js'\n\nexport type PacketToBytesErrorType =\n  | EncodeLabelhashErrorType\n  | LabelhashErrorType\n  | StringToBytesErrorType\n  | ErrorType\n\n/*\n * @description Encodes a DNS packet into a ByteArray containing a UDP payload.\n */\nexport function packetToBytes(packet: string): ByteArray {\n  // strip leading and trailing `.`\n  const value = packet.replace(/^\\.|\\.$/gm, '')\n  if (value.length === 0) return new Uint8Array(1)\n\n  const bytes = new Uint8Array(stringToBytes(value).byteLength + 2)\n\n  let offset = 0\n  const list = value.split('.')\n  for (let i = 0; i < list.length; i++) {\n    let encoded = stringToBytes(list[i])\n    // if the length is > 255, make the encoded label value a labelhash\n    // this is compatible with the universal resolver\n    if (encoded.byteLength > 255)\n      encoded = stringToBytes(encodeLabelhash(labelhash(list[i])))\n    bytes[offset] = encoded.length\n    bytes.set(encoded, offset + 1)\n    offset += encoded.length + 1\n  }\n\n  if (bytes.byteLength !== offset + 1) return bytes.slice(0, offset + 1)\n\n  return bytes\n}\n"],"names":[],"mappings":";;;AAGA,OAAO,EAEL,aAAa,GACd,MAAM,wBAAwB,CAAA;AAC/B,OAAO,EAEL,eAAe,GAChB,MAAM,sBAAsB,CAAA;AAC7B,OAAO,EAA2B,SAAS,EAAE,MAAM,gBAAgB,CAAA;;;;AAW7D,SAAU,aAAa,CAAC,MAAc;IAC1C,iCAAiC;IACjC,MAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAA;IAC7C,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC,CAAA;IAEhD,MAAM,KAAK,GAAG,IAAI,UAAU,8OAAC,gBAAA,AAAa,EAAC,KAAK,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,CAAA;IAEjE,IAAI,MAAM,GAAG,CAAC,CAAA;IACd,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;IAC7B,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;QACpC,IAAI,OAAO,IAAG,4PAAA,AAAa,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;QACpC,mEAAmE;QACnE,iDAAiD;QACjD,IAAI,OAAO,CAAC,UAAU,GAAG,GAAG,EAC1B,OAAO,gPAAG,gBAAA,AAAa,kPAAC,kBAAA,AAAe,4OAAC,YAAA,AAAS,EAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QAC9D,KAAK,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC,MAAM,CAAA;QAC9B,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,GAAG,CAAC,CAAC,CAAA;QAC9B,MAAM,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,CAAA;KAC7B;IAED,IAAI,KAAK,CAAC,UAAU,KAAK,MAAM,GAAG,CAAC,EAAE,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC,CAAA;IAEtE,OAAO,KAAK,CAAA;AACd,CAAC","ignoreList":[0]}},
    {"offset": {"line": 6452, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6458, "column": 0}, "map": {"version":3,"file":"errors.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/ens/errors.ts"],"sourcesContent":["import { panicReasons } from '../../constants/solidity.js'\nimport { BaseError } from '../../errors/base.js'\nimport { ContractFunctionRevertedError } from '../../errors/contract.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\nexport type IsNullUniversalResolverErrorErrorType = ErrorType\n\n/*\n * @description Checks if error is a valid null result UniversalResolver error\n */\nexport function isNullUniversalResolverError(\n  err: unknown,\n  callType: 'resolve' | 'reverse',\n): boolean {\n  if (!(err instanceof BaseError)) return false\n  const cause = err.walk((e) => e instanceof ContractFunctionRevertedError)\n  if (!(cause instanceof ContractFunctionRevertedError)) return false\n  if (cause.data?.errorName === 'ResolverNotFound') return true\n  if (cause.data?.errorName === 'ResolverWildcardNotSupported') return true\n  // Backwards compatibility for older UniversalResolver contracts\n  if (\n    cause.reason?.includes(\n      'Wildcard on non-extended resolvers is not supported',\n    )\n  )\n    return true\n  // No primary name set for address.\n  if (callType === 'reverse' && cause.reason === panicReasons[50]) return true\n  return false\n}\n"],"names":[],"mappings":";;;AACA,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAA;AAChD,OAAO,EAAE,6BAA6B,EAAE,MAAM,0BAA0B,CAAA;AAFxE,OAAO,EAAE,YAAY,EAAE,MAAM,6BAA6B,CAAA;;;;AAUpD,SAAU,4BAA4B,CAC1C,GAAY,EACZ,QAA+B;IAE/B,IAAI,CAAC,CAAC,GAAG,uOAAY,YAAS,CAAC,EAAE,OAAO,KAAK,CAAA;IAC7C,MAAM,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,AAAE,2OAAY,gCAA6B,CAAC,CAAA;IACzE,IAAI,CAAC,CAAC,KAAK,2OAAY,gCAA6B,CAAC,EAAE,OAAO,KAAK,CAAA;IACnE,IAAI,KAAK,CAAC,IAAI,EAAE,SAAS,KAAK,kBAAkB,EAAE,OAAO,IAAI,CAAA;IAC7D,IAAI,KAAK,CAAC,IAAI,EAAE,SAAS,KAAK,8BAA8B,EAAE,OAAO,IAAI,CAAA;IACzE,gEAAgE;IAChE,IACE,KAAK,CAAC,MAAM,EAAE,QAAQ,CACpB,qDAAqD,CACtD,EAED,OAAO,IAAI,CAAA;IACb,mCAAmC;IACnC,IAAI,QAAQ,KAAK,SAAS,IAAI,KAAK,CAAC,MAAM,uOAAK,eAAY,CAAC,EAAE,CAAC,EAAE,OAAO,IAAI,CAAA;IAC5E,OAAO,KAAK,CAAA;AACd,CAAC","ignoreList":[0]}},
    {"offset": {"line": 6479, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6485, "column": 0}, "map": {"version":3,"file":"getEnsAddress.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/ens/getEnsAddress.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  addressResolverAbi,\n  universalResolverResolveAbi,\n} from '../../constants/abis.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport { type TrimErrorType, trim } from '../../utils/data/trim.js'\nimport { type ToHexErrorType, toHex } from '../../utils/encoding/toHex.js'\nimport { isNullUniversalResolverError } from '../../utils/ens/errors.js'\nimport { type NamehashErrorType, namehash } from '../../utils/ens/namehash.js'\nimport {\n  type PacketToBytesErrorType,\n  packetToBytes,\n} from '../../utils/ens/packetToBytes.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type ReadContractParameters,\n  readContract,\n} from '../public/readContract.js'\n\nexport type GetEnsAddressParameters = Prettify<\n  Pick<ReadContractParameters, 'blockNumber' | 'blockTag'> & {\n    /** ENSIP-9 compliant coinType used to resolve addresses for other chains */\n    coinType?: number\n    /** Name to get the address for. */\n    name: string\n    /** Address of ENS Universal Resolver Contract. */\n    universalResolverAddress?: Address\n  }\n>\n\nexport type GetEnsAddressReturnType = Address | null\n\nexport type GetEnsAddressErrorType =\n  | GetChainContractAddressErrorType\n  | EncodeFunctionDataErrorType\n  | NamehashErrorType\n  | ToHexErrorType\n  | PacketToBytesErrorType\n  | DecodeFunctionResultErrorType\n  | TrimErrorType\n  | ErrorType\n\n/**\n * Gets address for ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsAddress.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsAddressParameters}\n * @returns Address for ENS name or `null` if not found. {@link GetEnsAddressReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsAddress, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const ensAddress = await getEnsAddress(client, {\n *   name: normalize('wevm.eth'),\n * })\n * // '0xd2135CfB216b74109775236E36d4b433F1DF507B'\n */\nexport async function getEnsAddress<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    blockNumber,\n    blockTag,\n    coinType,\n    name,\n    universalResolverAddress: universalResolverAddress_,\n  }: GetEnsAddressParameters,\n): Promise<GetEnsAddressReturnType> {\n  let universalResolverAddress = universalResolverAddress_\n  if (!universalResolverAddress) {\n    if (!client.chain)\n      throw new Error(\n        'client chain not configured. universalResolverAddress is required.',\n      )\n\n    universalResolverAddress = getChainContractAddress({\n      blockNumber,\n      chain: client.chain,\n      contract: 'ensUniversalResolver',\n    })\n  }\n\n  try {\n    const functionData = encodeFunctionData({\n      abi: addressResolverAbi,\n      functionName: 'addr',\n      ...(coinType != null\n        ? { args: [namehash(name), BigInt(coinType)] }\n        : { args: [namehash(name)] }),\n    })\n\n    const res = await getAction(\n      client,\n      readContract,\n      'readContract',\n    )({\n      address: universalResolverAddress,\n      abi: universalResolverResolveAbi,\n      functionName: 'resolve',\n      args: [toHex(packetToBytes(name)), functionData],\n      blockNumber,\n      blockTag,\n    })\n\n    if (res[0] === '0x') return null\n\n    const address = decodeFunctionResult({\n      abi: addressResolverAbi,\n      args: coinType != null ? [namehash(name), BigInt(coinType)] : undefined,\n      functionName: 'addr',\n      data: res[0],\n    })\n\n    if (address === '0x') return null\n    if (trim(address) === '0x00') return null\n    return address\n  } catch (err) {\n    if (isNullUniversalResolverError(err, 'resolve')) return null\n    throw err\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6564, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6570, "column": 0}, "map": {"version":3,"file":"getEnsText.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/ens/getEnsText.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  textResolverAbi,\n  universalResolverResolveAbi,\n} from '../../constants/abis.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport { type ToHexErrorType, toHex } from '../../utils/encoding/toHex.js'\nimport { isNullUniversalResolverError } from '../../utils/ens/errors.js'\nimport { type NamehashErrorType, namehash } from '../../utils/ens/namehash.js'\nimport {\n  type PacketToBytesErrorType,\n  packetToBytes,\n} from '../../utils/ens/packetToBytes.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type ReadContractErrorType,\n  type ReadContractParameters,\n  readContract,\n} from '../public/readContract.js'\n\nexport type GetEnsTextParameters = Prettify<\n  Pick<ReadContractParameters, 'blockNumber' | 'blockTag'> & {\n    /** ENS name to get Text for. */\n    name: string\n    /** Text record to retrieve. */\n    key: string\n    /** Address of ENS Universal Resolver Contract. */\n    universalResolverAddress?: Address\n  }\n>\n\nexport type GetEnsTextReturnType = string | null\n\nexport type GetEnsTextErrorType =\n  | GetChainContractAddressErrorType\n  | ReadContractErrorType\n  | ToHexErrorType\n  | PacketToBytesErrorType\n  | EncodeFunctionDataErrorType\n  | NamehashErrorType\n  | DecodeFunctionResultErrorType\n\n/**\n * Gets a text record for specified ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsTextParameters}\n * @returns Address for ENS resolver. {@link GetEnsTextReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsText, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const twitterRecord = await getEnsText(client, {\n *   name: normalize('wevm.eth'),\n *   key: 'com.twitter',\n * })\n * // 'wagmi_sh'\n */\nexport async function getEnsText<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    blockNumber,\n    blockTag,\n    name,\n    key,\n    universalResolverAddress: universalResolverAddress_,\n  }: GetEnsTextParameters,\n): Promise<GetEnsTextReturnType> {\n  let universalResolverAddress = universalResolverAddress_\n  if (!universalResolverAddress) {\n    if (!client.chain)\n      throw new Error(\n        'client chain not configured. universalResolverAddress is required.',\n      )\n\n    universalResolverAddress = getChainContractAddress({\n      blockNumber,\n      chain: client.chain,\n      contract: 'ensUniversalResolver',\n    })\n  }\n\n  try {\n    const res = await getAction(\n      client,\n      readContract,\n      'readContract',\n    )({\n      address: universalResolverAddress,\n      abi: universalResolverResolveAbi,\n      functionName: 'resolve',\n      args: [\n        toHex(packetToBytes(name)),\n        encodeFunctionData({\n          abi: textResolverAbi,\n          functionName: 'text',\n          args: [namehash(name), key],\n        }),\n      ],\n      blockNumber,\n      blockTag,\n    })\n\n    if (res[0] === '0x') return null\n\n    const record = decodeFunctionResult({\n      abi: textResolverAbi,\n      functionName: 'text',\n      data: res[0],\n    })\n\n    return record === '' ? null : record\n  } catch (err) {\n    if (isNullUniversalResolverError(err, 'resolve')) return null\n    throw err\n  }\n}\n"],"names":[],"mappings":";;;AAkBA,OAAO,EAEL,uBAAuB,GACxB,MAAM,8CAA8C,CAAA;AAQrD,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAA;AACpD,OAAO,EAGL,YAAY,GACb,MAAM,2BAA2B,CAAA;AA9BlC,OAAO,EACL,eAAe,EACf,2BAA2B,GAC5B,MAAM,yBAAyB,CAAA;AAehC,OAAO,EAAuB,KAAK,EAAE,MAAM,+BAA+B,CAAA;AAG1E,OAAO,EAEL,aAAa,GACd,MAAM,kCAAkC,CAAA;AAdzC,OAAO,EAEL,kBAAkB,GACnB,MAAM,uCAAuC,CAAA;AAO9C,OAAO,EAA0B,QAAQ,EAAE,MAAM,6BAA6B,CAAA;AAd9E,OAAO,EAEL,oBAAoB,GACrB,MAAM,yCAAyC,CAAA;AAUhD,OAAO,EAAE,4BAA4B,EAAE,MAAM,2BAA2B,CAAA;;;;;;;;;;;AAgEjE,KAAK,UAAU,UAAU,CAC9B,MAAiC,EACjC,EACE,WAAW,EACX,QAAQ,EACR,IAAI,EACJ,GAAG,EACH,wBAAwB,EAAE,yBAAyB,EAC9B;IAEvB,IAAI,wBAAwB,GAAG,yBAAyB,CAAA;IACxD,IAAI,CAAC,wBAAwB,EAAE;QAC7B,IAAI,CAAC,MAAM,CAAC,KAAK,EACf,MAAM,IAAI,KAAK,CACb,oEAAoE,CACrE,CAAA;QAEH,wBAAwB,6PAAG,0BAAuB,AAAvB,EAAwB;YACjD,WAAW;YACX,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,QAAQ,EAAE,sBAAsB;SACjC,CAAC,CAAA;KACH;IAED,IAAI;QACF,MAAM,GAAG,GAAG,yOAAM,YAAA,AAAS,EACzB,MAAM,gPACN,eAAY,EACZ,cAAc,CACf,CAAC;YACA,OAAO,EAAE,wBAAwB;YACjC,GAAG,+NAAE,+BAA2B;YAChC,YAAY,EAAE,SAAS;YACvB,IAAI,EAAE;2PACJ,QAAA,AAAK,gPAAC,gBAAA,AAAa,EAAC,IAAI,CAAC,CAAC;iBAC1B,uQAAA,AAAkB,EAAC;oBACjB,GAAG,gOAAE,kBAAe;oBACpB,YAAY,EAAE,MAAM;oBACpB,IAAI,EAAE;iQAAC,WAAQ,AAAR,EAAS,IAAI,CAAC;wBAAE,GAAG;qBAAC;iBAC5B,CAAC;aACH;YACD,WAAW;YACX,QAAQ;SACT,CAAC,CAAA;QAEF,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,OAAO,IAAI,CAAA;QAEhC,MAAM,MAAM,wPAAG,uBAAA,AAAoB,EAAC;YAClC,GAAG,gOAAE,kBAAe;YACpB,YAAY,EAAE,MAAM;YACpB,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;SACb,CAAC,CAAA;QAEF,OAAO,MAAM,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAA;KACrC,CAAC,OAAO,GAAG,EAAE;QACZ,2OAAI,+BAAA,AAA4B,EAAC,GAAG,EAAE,SAAS,CAAC,EAAE,OAAO,IAAI,CAAA;QAC7D,MAAM,GAAG,CAAA;KACV;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 6634, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6640, "column": 0}, "map": {"version":3,"file":"ens.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/errors/ens.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type EnsAvatarInvalidMetadataErrorType =\n  EnsAvatarInvalidMetadataError & {\n    name: 'EnsAvatarInvalidMetadataError'\n  }\nexport class EnsAvatarInvalidMetadataError extends BaseError {\n  override name = 'EnsAvatarInvalidMetadataError'\n  constructor({ data }: { data: any }) {\n    super(\n      'Unable to extract image from metadata. The metadata may be malformed or invalid.',\n      {\n        metaMessages: [\n          '- Metadata must be a JSON object with at least an `image`, `image_url` or `image_data` property.',\n          '',\n          `Provided data: ${JSON.stringify(data)}`,\n        ],\n      },\n    )\n  }\n}\n\nexport type EnsAvatarInvalidNftUriErrorType = EnsAvatarInvalidNftUriError & {\n  name: 'EnsAvatarInvalidNftUriError'\n}\nexport class EnsAvatarInvalidNftUriError extends BaseError {\n  override name = 'EnsAvatarInvalidNftUriError'\n  constructor({ reason }: { reason: string }) {\n    super(`ENS NFT avatar URI is invalid. ${reason}`)\n  }\n}\n\nexport type EnsAvatarUriResolutionErrorType = EnsAvatarUriResolutionError & {\n  name: 'EnsAvatarUriResolutionError'\n}\nexport class EnsAvatarUriResolutionError extends BaseError {\n  override name = 'EnsAvatarUriResolutionError'\n  constructor({ uri }: { uri: string }) {\n    super(\n      `Unable to resolve ENS avatar URI \"${uri}\". The URI may be malformed, invalid, or does not respond with a valid image.`,\n    )\n  }\n}\n\nexport type EnsAvatarUnsupportedNamespaceErrorType =\n  EnsAvatarUnsupportedNamespaceError & {\n    name: 'EnsAvatarUnsupportedNamespaceError'\n  }\nexport class EnsAvatarUnsupportedNamespaceError extends BaseError {\n  override name = 'EnsAvatarUnsupportedNamespaceError'\n  constructor({ namespace }: { namespace: string }) {\n    super(\n      `ENS NFT avatar namespace \"${namespace}\" is not supported. Must be \"erc721\" or \"erc1155\".`,\n    )\n  }\n}\n"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;;AAM/B,MAAO,6BAA8B,oOAAQ,YAAS;IAE1D,YAAY,EAAE,IAAI,EAAiB,CAAA;QACjC,KAAK,CACH,kFAAkF,EAClF;YACE,YAAY,EAAE;gBACZ,kGAAkG;gBAClG,EAAE;gBACF,CAAA,eAAA,EAAkB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;aACzC;SACF,CACF,CAAA;QAXM,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,+BAA+B;WAAA;IAY/C,CAAC;CACF;AAKK,MAAO,2BAA4B,oOAAQ,YAAS;IAExD,YAAY,EAAE,MAAM,EAAsB,CAAA;QACxC,KAAK,CAAC,CAAA,+BAAA,EAAkC,MAAM,EAAE,CAAC,CAAA;QAF1C,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,6BAA6B;WAAA;IAG7C,CAAC;CACF;AAKK,MAAO,2BAA4B,oOAAQ,YAAS;IAExD,YAAY,EAAE,GAAG,EAAmB,CAAA;QAClC,KAAK,CACH,CAAA,kCAAA,EAAqC,GAAG,CAAA,6EAAA,CAA+E,CACxH,CAAA;QAJM,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,6BAA6B;WAAA;IAK7C,CAAC;CACF;AAMK,MAAO,kCAAmC,oOAAQ,YAAS;IAE/D,YAAY,EAAE,SAAS,EAAyB,CAAA;QAC9C,KAAK,CACH,CAAA,0BAAA,EAA6B,SAAS,CAAA,kDAAA,CAAoD,CAC3F,CAAA;QAJM,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,oCAAoC;WAAA;IAKpD,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 6698, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6704, "column": 0}, "map": {"version":3,"file":"utils.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/ens/avatar/utils.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport {\n  type ReadContractErrorType,\n  readContract,\n} from '../../../actions/public/readContract.js'\nimport type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport {\n  EnsAvatarInvalidMetadataError,\n  type EnsAvatarInvalidMetadataErrorType,\n  EnsAvatarInvalidNftUriError,\n  type EnsAvatarInvalidNftUriErrorType,\n  EnsAvatarUnsupportedNamespaceError,\n  type EnsAvatarUnsupportedNamespaceErrorType,\n  EnsAvatarUriResolutionError,\n  type EnsAvatarUriResolutionErrorType,\n} from '../../../errors/ens.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Chain } from '../../../types/chain.js'\nimport type { AssetGatewayUrls } from '../../../types/ens.js'\n\ntype UriItem = {\n  uri: string\n  isOnChain: boolean\n  isEncoded: boolean\n}\n\nconst networkRegex =\n  /(?<protocol>https?:\\/\\/[^\\/]*|ipfs:\\/|ipns:\\/|ar:\\/)?(?<root>\\/)?(?<subpath>ipfs\\/|ipns\\/)?(?<target>[\\w\\-.]+)(?<subtarget>\\/.*)?/\nconst ipfsHashRegex =\n  /^(Qm[1-9A-HJ-NP-Za-km-z]{44,}|b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,}|z[1-9A-HJ-NP-Za-km-z]{48,}|F[0-9A-F]{50,})(\\/(?<target>[\\w\\-.]+))?(?<subtarget>\\/.*)?$/\nconst base64Regex = /^data:([a-zA-Z\\-/+]*);base64,([^\"].*)/\nconst dataURIRegex = /^data:([a-zA-Z\\-/+]*)?(;[a-zA-Z0-9].*?)?(,)/\n\nexport type IsImageUriErrorType = ErrorType\n\nexport async function isImageUri(uri: string) {\n  try {\n    const res = await fetch(uri, { method: 'HEAD' })\n    // retrieve content type header to check if content is image\n    if (res.status === 200) {\n      const contentType = res.headers.get('content-type')\n      return contentType?.startsWith('image/')\n    }\n    return false\n  } catch (error: any) {\n    // if error is not cors related then fail\n    if (typeof error === 'object' && typeof error.response !== 'undefined') {\n      return false\n    }\n    // fail in NodeJS, since the error is not cors but any other network issue\n    // biome-ignore lint/suspicious/noPrototypeBuiltins:\n    if (!globalThis.hasOwnProperty('Image')) return false\n    // in case of cors, use image api to validate if given url is an actual image\n    return new Promise((resolve) => {\n      const img = new Image()\n      img.onload = () => {\n        resolve(true)\n      }\n      img.onerror = () => {\n        resolve(false)\n      }\n      img.src = uri\n    })\n  }\n}\n\nexport type GetGatewayErrorType = ErrorType\n\nexport function getGateway(custom: string | undefined, defaultGateway: string) {\n  if (!custom) return defaultGateway\n  if (custom.endsWith('/')) return custom.slice(0, -1)\n  return custom\n}\n\nexport type ResolveAvatarUriErrorType =\n  | GetGatewayErrorType\n  | EnsAvatarUriResolutionErrorType\n  | ErrorType\n\nexport function resolveAvatarUri({\n  uri,\n  gatewayUrls,\n}: {\n  uri: string\n  gatewayUrls?: AssetGatewayUrls | undefined\n}): UriItem {\n  const isEncoded = base64Regex.test(uri)\n  if (isEncoded) return { uri, isOnChain: true, isEncoded }\n\n  const ipfsGateway = getGateway(gatewayUrls?.ipfs, 'https://ipfs.io')\n  const arweaveGateway = getGateway(gatewayUrls?.arweave, 'https://arweave.net')\n\n  const networkRegexMatch = uri.match(networkRegex)\n  const {\n    protocol,\n    subpath,\n    target,\n    subtarget = '',\n  } = networkRegexMatch?.groups || {}\n\n  const isIPNS = protocol === 'ipns:/' || subpath === 'ipns/'\n  const isIPFS =\n    protocol === 'ipfs:/' || subpath === 'ipfs/' || ipfsHashRegex.test(uri)\n\n  if (uri.startsWith('http') && !isIPNS && !isIPFS) {\n    let replacedUri = uri\n    if (gatewayUrls?.arweave)\n      replacedUri = uri.replace(/https:\\/\\/arweave.net/g, gatewayUrls?.arweave)\n    return { uri: replacedUri, isOnChain: false, isEncoded: false }\n  }\n\n  if ((isIPNS || isIPFS) && target) {\n    return {\n      uri: `${ipfsGateway}/${isIPNS ? 'ipns' : 'ipfs'}/${target}${subtarget}`,\n      isOnChain: false,\n      isEncoded: false,\n    }\n  }\n\n  if (protocol === 'ar:/' && target) {\n    return {\n      uri: `${arweaveGateway}/${target}${subtarget || ''}`,\n      isOnChain: false,\n      isEncoded: false,\n    }\n  }\n\n  let parsedUri = uri.replace(dataURIRegex, '')\n  if (parsedUri.startsWith('<svg')) {\n    // if svg, base64 encode\n    parsedUri = `data:image/svg+xml;base64,${btoa(parsedUri)}`\n  }\n\n  if (parsedUri.startsWith('data:') || parsedUri.startsWith('{')) {\n    return {\n      uri: parsedUri,\n      isOnChain: true,\n      isEncoded: false,\n    }\n  }\n\n  throw new EnsAvatarUriResolutionError({ uri })\n}\n\nexport type GetJsonImageErrorType =\n  | EnsAvatarInvalidMetadataErrorType\n  | ErrorType\n\nexport function getJsonImage(data: any) {\n  // validation check for json data, must include one of theses properties\n  if (\n    typeof data !== 'object' ||\n    (!('image' in data) && !('image_url' in data) && !('image_data' in data))\n  ) {\n    throw new EnsAvatarInvalidMetadataError({ data })\n  }\n\n  return data.image || data.image_url || data.image_data\n}\n\nexport type GetMetadataAvatarUriErrorType =\n  | EnsAvatarUriResolutionErrorType\n  | ParseAvatarUriErrorType\n  | GetJsonImageErrorType\n  | ErrorType\n\nexport async function getMetadataAvatarUri({\n  gatewayUrls,\n  uri,\n}: {\n  gatewayUrls?: AssetGatewayUrls | undefined\n  uri: string\n}): Promise<string> {\n  try {\n    const res = await fetch(uri).then((res) => res.json())\n    const image = await parseAvatarUri({\n      gatewayUrls,\n      uri: getJsonImage(res),\n    })\n    return image\n  } catch {\n    throw new EnsAvatarUriResolutionError({ uri })\n  }\n}\n\nexport type ParseAvatarUriErrorType =\n  | ResolveAvatarUriErrorType\n  | IsImageUriErrorType\n  | EnsAvatarUriResolutionErrorType\n  | ErrorType\n\nexport async function parseAvatarUri({\n  gatewayUrls,\n  uri,\n}: {\n  gatewayUrls?: AssetGatewayUrls | undefined\n  uri: string\n}): Promise<string> {\n  const { uri: resolvedURI, isOnChain } = resolveAvatarUri({ uri, gatewayUrls })\n  if (isOnChain) return resolvedURI\n\n  // check if resolvedURI is an image, if it is return the url\n  const isImage = await isImageUri(resolvedURI)\n  if (isImage) return resolvedURI\n\n  throw new EnsAvatarUriResolutionError({ uri })\n}\n\ntype ParsedNft = {\n  chainID: number\n  namespace: string\n  contractAddress: Address\n  tokenID: string\n}\n\nexport type ParseNftUriErrorType = EnsAvatarInvalidNftUriErrorType | ErrorType\n\nexport function parseNftUri(uri_: string): ParsedNft {\n  let uri = uri_\n  // parse valid nft spec (CAIP-22/CAIP-29)\n  // @see: https://github.com/ChainAgnostic/CAIPs/tree/master/CAIPs\n  if (uri.startsWith('did:nft:')) {\n    // convert DID to CAIP\n    uri = uri.replace('did:nft:', '').replace(/_/g, '/')\n  }\n\n  const [reference, asset_namespace, tokenID] = uri.split('/')\n  const [eip_namespace, chainID] = reference.split(':')\n  const [erc_namespace, contractAddress] = asset_namespace.split(':')\n\n  if (!eip_namespace || eip_namespace.toLowerCase() !== 'eip155')\n    throw new EnsAvatarInvalidNftUriError({ reason: 'Only EIP-155 supported' })\n  if (!chainID)\n    throw new EnsAvatarInvalidNftUriError({ reason: 'Chain ID not found' })\n  if (!contractAddress)\n    throw new EnsAvatarInvalidNftUriError({\n      reason: 'Contract address not found',\n    })\n  if (!tokenID)\n    throw new EnsAvatarInvalidNftUriError({ reason: 'Token ID not found' })\n  if (!erc_namespace)\n    throw new EnsAvatarInvalidNftUriError({ reason: 'ERC namespace not found' })\n\n  return {\n    chainID: parseInt(chainID),\n    namespace: erc_namespace.toLowerCase(),\n    contractAddress: contractAddress as Address,\n    tokenID,\n  }\n}\n\nexport type GetNftTokenUriErrorType =\n  | ReadContractErrorType\n  | EnsAvatarUnsupportedNamespaceErrorType\n  | ErrorType\n\nexport async function getNftTokenUri<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  { nft }: { nft: ParsedNft },\n) {\n  if (nft.namespace === 'erc721') {\n    return readContract(client, {\n      address: nft.contractAddress,\n      abi: [\n        {\n          name: 'tokenURI',\n          type: 'function',\n          stateMutability: 'view',\n          inputs: [{ name: 'tokenId', type: 'uint256' }],\n          outputs: [{ name: '', type: 'string' }],\n        },\n      ],\n      functionName: 'tokenURI',\n      args: [BigInt(nft.tokenID)],\n    })\n  }\n  if (nft.namespace === 'erc1155') {\n    return readContract(client, {\n      address: nft.contractAddress,\n      abi: [\n        {\n          name: 'uri',\n          type: 'function',\n          stateMutability: 'view',\n          inputs: [{ name: '_id', type: 'uint256' }],\n          outputs: [{ name: '', type: 'string' }],\n        },\n      ],\n      functionName: 'uri',\n      args: [BigInt(nft.tokenID)],\n    })\n  }\n  throw new EnsAvatarUnsupportedNamespaceError({ namespace: nft.namespace })\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6941, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6947, "column": 0}, "map": {"version":3,"file":"parseAvatarRecord.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/ens/avatar/parseAvatarRecord.ts"],"sourcesContent":["import type { Client } from '../../../clients/createClient.js'\nimport type { Transport } from '../../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../../errors/utils.js'\nimport type { Chain } from '../../../types/chain.js'\nimport type { AssetGatewayUrls } from '../../../types/ens.js'\n\nimport {\n  type GetJsonImageErrorType,\n  type GetMetadataAvatarUriErrorType,\n  type GetNftTokenUriErrorType,\n  type ParseAvatarUriErrorType,\n  type ParseNftUriErrorType,\n  type ResolveAvatarUriErrorType,\n  getJsonImage,\n  getMetadataAvatarUri,\n  getNftTokenUri,\n  parseAvatarUri,\n  parseNftUri,\n  resolveAvatarUri,\n} from './utils.js'\n\nexport type ParseAvatarRecordErrorType =\n  | ParseNftAvatarUriErrorType\n  | ParseAvatarUriErrorType\n  | ErrorType\n\nexport async function parseAvatarRecord<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    gatewayUrls,\n    record,\n  }: {\n    gatewayUrls?: AssetGatewayUrls\n    record: string\n  },\n): Promise<string> {\n  if (/eip155:/i.test(record))\n    return parseNftAvatarUri(client, { gatewayUrls, record })\n  return parseAvatarUri({ uri: record, gatewayUrls })\n}\n\nexport type ParseNftAvatarUriErrorType =\n  | ParseNftUriErrorType\n  | GetNftTokenUriErrorType\n  | ResolveAvatarUriErrorType\n  | ParseAvatarUriErrorType\n  | GetJsonImageErrorType\n  | GetMetadataAvatarUriErrorType\n  | ErrorType\n\nasync function parseNftAvatarUri<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    gatewayUrls,\n    record,\n  }: {\n    gatewayUrls?: AssetGatewayUrls\n    record: string\n  },\n): Promise<string> {\n  // parse NFT URI into properties\n  const nft = parseNftUri(record)\n  // fetch tokenURI from the NFT contract\n  const nftUri = await getNftTokenUri(client, { nft })\n  // resolve the URI from the fetched tokenURI\n  const {\n    uri: resolvedNftUri,\n    isOnChain,\n    isEncoded,\n  } = resolveAvatarUri({ uri: nftUri, gatewayUrls })\n\n  // if the resolved URI is on chain, return the data\n  if (\n    isOnChain &&\n    (resolvedNftUri.includes('data:application/json;base64,') ||\n      resolvedNftUri.startsWith('{'))\n  ) {\n    const encodedJson = isEncoded\n      ? // if it is encoded, decode it\n        atob(resolvedNftUri.replace('data:application/json;base64,', ''))\n      : // if it isn't encoded assume it is a JSON string, but it could be anything (it will error if it is)\n        resolvedNftUri\n\n    const decoded = JSON.parse(encodedJson)\n    return parseAvatarUri({ uri: getJsonImage(decoded), gatewayUrls })\n  }\n\n  let uriTokenId = nft.tokenID\n  if (nft.namespace === 'erc1155')\n    uriTokenId = uriTokenId.replace('0x', '').padStart(64, '0')\n\n  return getMetadataAvatarUri({\n    gatewayUrls,\n    uri: resolvedNftUri.replace(/(?:0x)?{id}/, uriTokenId),\n  })\n}\n"],"names":[],"mappings":";;;AAMA,OAAO,EAOL,YAAY,EACZ,oBAAoB,EACpB,cAAc,EACd,cAAc,EACd,WAAW,EACX,gBAAgB,GACjB,MAAM,YAAY,CAAA;;AAOZ,KAAK,UAAU,iBAAiB,CACrC,MAAiC,EACjC,EACE,WAAW,EACX,MAAM,EAIP;IAED,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,EACzB,OAAO,iBAAiB,CAAC,MAAM,EAAE;QAAE,WAAW;QAAE,MAAM;IAAA,CAAE,CAAC,CAAA;IAC3D,OAAO,iQAAA,AAAc,EAAC;QAAE,GAAG,EAAE,MAAM;QAAE,WAAW;IAAA,CAAE,CAAC,CAAA;AACrD,CAAC;AAWD,KAAK,UAAU,iBAAiB,CAC9B,MAAiC,EACjC,EACE,WAAW,EACX,MAAM,EAIP;IAED,gCAAgC;IAChC,MAAM,GAAG,IAAG,6PAAA,AAAW,EAAC,MAAM,CAAC,CAAA;IAC/B,uCAAuC;IACvC,MAAM,MAAM,GAAG,sPAAM,iBAAA,AAAc,EAAC,MAAM,EAAE;QAAE,GAAG;IAAA,CAAE,CAAC,CAAA;IACpD,4CAA4C;IAC5C,MAAM,EACJ,GAAG,EAAE,cAAc,EACnB,SAAS,EACT,SAAS,EACV,mPAAG,mBAAA,AAAgB,EAAC;QAAE,GAAG,EAAE,MAAM;QAAE,WAAW;IAAA,CAAE,CAAC,CAAA;IAElD,mDAAmD;IACnD,IACE,SAAS,IACT,CAAC,cAAc,CAAC,QAAQ,CAAC,+BAA+B,CAAC,IACvD,cAAc,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,EACjC;QACA,MAAM,WAAW,GAAG,SAAS,GAEzB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,+BAA+B,EAAE,EAAE,CAAC,CAAC,GAEjE,cAAc,CAAA;QAElB,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAA;QACvC,uPAAO,iBAAA,AAAc,EAAC;YAAE,GAAG,kPAAE,eAAA,AAAY,EAAC,OAAO,CAAC;YAAE,WAAW;QAAA,CAAE,CAAC,CAAA;KACnE;IAED,IAAI,UAAU,GAAG,GAAG,CAAC,OAAO,CAAA;IAC5B,IAAI,GAAG,CAAC,SAAS,KAAK,SAAS,EAC7B,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC,CAAA;IAE7D,uPAAO,uBAAA,AAAoB,EAAC;QAC1B,WAAW;QACX,GAAG,EAAE,cAAc,CAAC,OAAO,CAAC,aAAa,EAAE,UAAU,CAAC;KACvD,CAAC,CAAA;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 6990, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6996, "column": 0}, "map": {"version":3,"file":"getEnsAvatar.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/ens/getEnsAvatar.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { AssetGatewayUrls } from '../../types/ens.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type ParseAvatarRecordErrorType,\n  parseAvatarRecord,\n} from '../../utils/ens/avatar/parseAvatarRecord.js'\nimport { getAction } from '../../utils/getAction.js'\n\nimport {\n  type GetEnsTextErrorType,\n  type GetEnsTextParameters,\n  getEnsText,\n} from './getEnsText.js'\n\nexport type GetEnsAvatarParameters = Prettify<\n  Omit<GetEnsTextParameters, 'key'> & {\n    /** Gateway urls to resolve IPFS and/or Arweave assets. */\n    gatewayUrls?: AssetGatewayUrls\n  }\n>\n\nexport type GetEnsAvatarReturnType = string | null\n\nexport type GetEnsAvatarErrorType =\n  | GetEnsTextErrorType\n  | ParseAvatarRecordErrorType\n  | ErrorType\n\n/**\n * Gets the avatar of an ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsAvatar.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls [`getEnsText`](https://viem.sh/docs/ens/actions/getEnsText.html) with `key` set to `'avatar'`.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsAvatarParameters}\n * @returns Avatar URI or `null` if not found. {@link GetEnsAvatarReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsAvatar, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const ensAvatar = await getEnsAvatar(client, {\n *   name: normalize('wevm.eth'),\n * })\n * // 'https://ipfs.io/ipfs/Qma8mnp6xV3J2cRNf3mTth5C8nV11CAnceVinc3y8jSbio'\n */\nexport async function getEnsAvatar<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    blockNumber,\n    blockTag,\n    gatewayUrls,\n    name,\n    universalResolverAddress,\n  }: GetEnsAvatarParameters,\n): Promise<GetEnsAvatarReturnType> {\n  const record = await getAction(\n    client,\n    getEnsText,\n    'getEnsText',\n  )({\n    blockNumber,\n    blockTag,\n    key: 'avatar',\n    name,\n    universalResolverAddress,\n  })\n  if (!record) return null\n  try {\n    return await parseAvatarRecord(client, { record, gatewayUrls })\n  } catch {\n    return null\n  }\n}\n"],"names":[],"mappings":";;;AAUA,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAA;AAEpD,OAAO,EAGL,UAAU,GACX,MAAM,iBAAiB,CAAA;AAVxB,OAAO,EAEL,iBAAiB,GAClB,MAAM,6CAA6C,CAAA;;;;AAmD7C,KAAK,UAAU,YAAY,CAChC,MAAiC,EACjC,EACE,WAAW,EACX,QAAQ,EACR,WAAW,EACX,IAAI,EACJ,wBAAwB,EACD;IAEzB,MAAM,MAAM,GAAG,MAAM,+OAAA,AAAS,EAC5B,MAAM,2OACN,aAAU,EACV,YAAY,CACb,CAAC;QACA,WAAW;QACX,QAAQ;QACR,GAAG,EAAE,QAAQ;QACb,IAAI;QACJ,wBAAwB;KACzB,CAAC,CAAA;IACF,IAAI,CAAC,MAAM,EAAE,OAAO,IAAI,CAAA;IACxB,IAAI;QACF,OAAO,kQAAM,oBAAA,AAAiB,EAAC,MAAM,EAAE;YAAE,MAAM;YAAE,WAAW;QAAA,CAAE,CAAC,CAAA;KAChE,CAAC,OAAM;QACN,OAAO,IAAI,CAAA;KACZ;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7023, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7029, "column": 0}, "map": {"version":3,"file":"getEnsName.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/ens/getEnsName.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { universalResolverReverseAbi } from '../../constants/abis.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport { type ToHexErrorType, toHex } from '../../utils/encoding/toHex.js'\nimport { isNullUniversalResolverError } from '../../utils/ens/errors.js'\nimport {\n  type PacketToBytesErrorType,\n  packetToBytes,\n} from '../../utils/ens/packetToBytes.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type ReadContractErrorType,\n  type ReadContractParameters,\n  readContract,\n} from '../public/readContract.js'\n\nexport type GetEnsNameParameters = Prettify<\n  Pick<ReadContractParameters, 'blockNumber' | 'blockTag'> & {\n    /** Address to get ENS name for. */\n    address: Address\n    /** Address of ENS Universal Resolver Contract. */\n    universalResolverAddress?: Address\n  }\n>\n\nexport type GetEnsNameReturnType = string | null\n\nexport type GetEnsNameErrorType =\n  | GetChainContractAddressErrorType\n  | ReadContractErrorType\n  | ToHexErrorType\n  | PacketToBytesErrorType\n  | ErrorType\n\n/**\n * Gets primary name for specified address.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsName.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls `reverse(bytes)` on ENS Universal Resolver Contract to \"reverse resolve\" the address to the primary ENS name.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsNameParameters}\n * @returns Name or `null` if not found. {@link GetEnsNameReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsName } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const ensName = await getEnsName(client, {\n *   address: '0xd2135CfB216b74109775236E36d4b433F1DF507B',\n * })\n * // 'wevm.eth'\n */\nexport async function getEnsName<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    address,\n    blockNumber,\n    blockTag,\n    universalResolverAddress: universalResolverAddress_,\n  }: GetEnsNameParameters,\n): Promise<GetEnsNameReturnType> {\n  let universalResolverAddress = universalResolverAddress_\n  if (!universalResolverAddress) {\n    if (!client.chain)\n      throw new Error(\n        'client chain not configured. universalResolverAddress is required.',\n      )\n\n    universalResolverAddress = getChainContractAddress({\n      blockNumber,\n      chain: client.chain,\n      contract: 'ensUniversalResolver',\n    })\n  }\n\n  const reverseNode = `${address.toLowerCase().substring(2)}.addr.reverse`\n  try {\n    const [name, resolvedAddress] = await getAction(\n      client,\n      readContract,\n      'readContract',\n    )({\n      address: universalResolverAddress,\n      abi: universalResolverReverseAbi,\n      functionName: 'reverse',\n      args: [toHex(packetToBytes(reverseNode))],\n      blockNumber,\n      blockTag,\n    })\n    if (address.toLowerCase() !== resolvedAddress.toLowerCase()) return null\n    return name\n  } catch (err) {\n    if (isNullUniversalResolverError(err, 'reverse')) return null\n    throw err\n  }\n}\n"],"names":[],"mappings":";;;AAQA,OAAO,EAEL,uBAAuB,GACxB,MAAM,8CAA8C,CAAA;AAOrD,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAA;AACpD,OAAO,EAGL,YAAY,GACb,MAAM,2BAA2B,CAAA;AAnBlC,OAAO,EAAE,2BAA2B,EAAE,MAAM,yBAAyB,CAAA;AAQrE,OAAO,EAAuB,KAAK,EAAE,MAAM,+BAA+B,CAAA;AAE1E,OAAO,EAEL,aAAa,GACd,MAAM,kCAAkC,CAAA;AAJzC,OAAO,EAAE,4BAA4B,EAAE,MAAM,2BAA2B,CAAA;;;;;;;;AAwDjE,KAAK,UAAU,UAAU,CAC9B,MAAiC,EACjC,EACE,OAAO,EACP,WAAW,EACX,QAAQ,EACR,wBAAwB,EAAE,yBAAyB,EAC9B;IAEvB,IAAI,wBAAwB,GAAG,yBAAyB,CAAA;IACxD,IAAI,CAAC,wBAAwB,EAAE;QAC7B,IAAI,CAAC,MAAM,CAAC,KAAK,EACf,MAAM,IAAI,KAAK,CACb,oEAAoE,CACrE,CAAA;QAEH,wBAAwB,6PAAG,0BAAA,AAAuB,EAAC;YACjD,WAAW;YACX,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,QAAQ,EAAE,sBAAsB;SACjC,CAAC,CAAA;KACH;IAED,MAAM,WAAW,GAAG,GAAG,OAAO,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA,aAAA,CAAe,CAAA;IACxE,IAAI;QACF,MAAM,CAAC,IAAI,EAAE,eAAe,CAAC,GAAG,yOAAM,YAAA,AAAS,EAC7C,MAAM,+OACN,gBAAY,EACZ,cAAc,CACf,CAAC;YACA,OAAO,EAAE,wBAAwB;YACjC,GAAG,gOAAE,8BAA2B;YAChC,YAAY,EAAE,SAAS;YACvB,IAAI,EAAE;gBAAC,mPAAA,AAAK,gPAAC,gBAAA,AAAa,EAAC,WAAW,CAAC,CAAC;aAAC;YACzC,WAAW;YACX,QAAQ;SACT,CAAC,CAAA;QACF,IAAI,OAAO,CAAC,WAAW,EAAE,KAAK,eAAe,CAAC,WAAW,EAAE,EAAE,OAAO,IAAI,CAAA;QACxE,OAAO,IAAI,CAAA;KACZ,CAAC,OAAO,GAAG,EAAE;QACZ,2OAAI,+BAAA,AAA4B,EAAC,GAAG,EAAE,SAAS,CAAC,EAAE,OAAO,IAAI,CAAA;QAC7D,MAAM,GAAG,CAAA;KACV;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7075, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7081, "column": 0}, "map": {"version":3,"file":"getEnsResolver.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/ens/getEnsResolver.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Prettify } from '../../types/utils.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport { type ToHexErrorType, toHex } from '../../utils/encoding/toHex.js'\nimport {\n  type PacketToBytesErrorType,\n  packetToBytes,\n} from '../../utils/ens/packetToBytes.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type ReadContractParameters,\n  readContract,\n} from '../public/readContract.js'\n\nexport type GetEnsResolverParameters = Prettify<\n  Pick<ReadContractParameters, 'blockNumber' | 'blockTag'> & {\n    /** Name to get the address for. */\n    name: string\n    /** Address of ENS Universal Resolver Contract. */\n    universalResolverAddress?: Address\n  }\n>\n\nexport type GetEnsResolverReturnType = Address\n\nexport type GetEnsResolverErrorType =\n  | GetChainContractAddressErrorType\n  | ToHexErrorType\n  | PacketToBytesErrorType\n  | ErrorType\n\n/**\n * Gets resolver for ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls `findResolver(bytes)` on ENS Universal Resolver Contract to retrieve the resolver of an ENS name.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsResolverParameters}\n * @returns Address for ENS resolver. {@link GetEnsResolverReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsResolver, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const resolverAddress = await getEnsResolver(client, {\n *   name: normalize('wevm.eth'),\n * })\n * // '0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41'\n */\nexport async function getEnsResolver<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    blockNumber,\n    blockTag,\n    name,\n    universalResolverAddress: universalResolverAddress_,\n  }: GetEnsResolverParameters,\n) {\n  let universalResolverAddress = universalResolverAddress_\n  if (!universalResolverAddress) {\n    if (!client.chain)\n      throw new Error(\n        'client chain not configured. universalResolverAddress is required.',\n      )\n\n    universalResolverAddress = getChainContractAddress({\n      blockNumber,\n      chain: client.chain,\n      contract: 'ensUniversalResolver',\n    })\n  }\n\n  const [resolverAddress] = await getAction(\n    client,\n    readContract,\n    'readContract',\n  )({\n    address: universalResolverAddress,\n    abi: [\n      {\n        inputs: [{ type: 'bytes' }],\n        name: 'findResolver',\n        outputs: [{ type: 'address' }, { type: 'bytes32' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n    ],\n    functionName: 'findResolver',\n    args: [toHex(packetToBytes(name))],\n    blockNumber,\n    blockTag,\n  })\n  return resolverAddress\n}\n"],"names":[],"mappings":";;;AAOA,OAAO,EAEL,uBAAuB,GACxB,MAAM,8CAA8C,CAAA;AAMrD,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAA;AACpD,OAAO,EAEL,YAAY,GACb,MAAM,2BAA2B,CAAA;AATlC,OAAO,EAAuB,KAAK,EAAE,MAAM,+BAA+B,CAAA;AAC1E,OAAO,EAEL,aAAa,GACd,MAAM,kCAAkC,CAAA;;;;;;AAoDlC,KAAK,UAAU,cAAc,CAClC,MAAiC,EACjC,EACE,WAAW,EACX,QAAQ,EACR,IAAI,EACJ,wBAAwB,EAAE,yBAAyB,EAC1B;IAE3B,IAAI,wBAAwB,GAAG,yBAAyB,CAAA;IACxD,IAAI,CAAC,wBAAwB,EAAE;QAC7B,IAAI,CAAC,MAAM,CAAC,KAAK,EACf,MAAM,IAAI,KAAK,CACb,oEAAoE,CACrE,CAAA;QAEH,wBAAwB,IAAG,mRAAuB,AAAvB,EAAwB;YACjD,WAAW;YACX,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,QAAQ,EAAE,sBAAsB;SACjC,CAAC,CAAA;KACH;IAED,MAAM,CAAC,eAAe,CAAC,GAAG,yOAAM,YAAA,AAAS,EACvC,MAAM,gPACN,eAAY,EACZ,cAAc,CACf,CAAC;QACA,OAAO,EAAE,wBAAwB;QACjC,GAAG,EAAE;YACH;gBACE,MAAM,EAAE;oBAAC;wBAAE,IAAI,EAAE,OAAO;oBAAA,CAAE;iBAAC;gBAC3B,IAAI,EAAE,cAAc;gBACpB,OAAO,EAAE;oBAAC;wBAAE,IAAI,EAAE,SAAS;oBAAA,CAAE;oBAAE;wBAAE,IAAI,EAAE,SAAS;oBAAA,CAAE;iBAAC;gBACnD,eAAe,EAAE,MAAM;gBACvB,IAAI,EAAE,UAAU;aACjB;SACF;QACD,YAAY,EAAE,cAAc;QAC5B,IAAI,EAAE;uPAAC,QAAK,AAAL,gPAAM,gBAAA,AAAa,EAAC,IAAI,CAAC,CAAC;SAAC;QAClC,WAAW;QACX,QAAQ;KACT,CAAC,CAAA;IACF,OAAO,eAAe,CAAA;AACxB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7135, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7141, "column": 0}, "map": {"version":3,"file":"feeHistory.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/formatters/feeHistory.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { FeeHistory } from '../../types/fee.js'\nimport type { RpcFeeHistory } from '../../types/rpc.js'\n\nexport type FormatFeeHistoryErrorType = ErrorType\n\nexport function formatFeeHistory(feeHistory: RpcFeeHistory): FeeHistory {\n  return {\n    baseFeePerGas: feeHistory.baseFeePerGas.map((value) => BigInt(value)),\n    gasUsedRatio: feeHistory.gasUsedRatio,\n    oldestBlock: BigInt(feeHistory.oldestBlock),\n    reward: feeHistory.reward?.map((reward) =>\n      reward.map((value) => BigInt(value)),\n    ),\n  }\n}\n"],"names":[],"mappings":";;;AAMM,SAAU,gBAAgB,CAAC,UAAyB;IACxD,OAAO;QACL,aAAa,EAAE,UAAU,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAG,CAAD,KAAO,CAAC,KAAK,CAAC,CAAC;QACrE,YAAY,EAAE,UAAU,CAAC,YAAY;QACrC,WAAW,EAAE,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC;QAC3C,MAAM,EAAE,UAAU,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,CACtC,CADwC,KAClC,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAG,CAAD,KAAO,CAAC,KAAK,CAAC,CAAC,CACrC;KACF,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7158, "column": 0}, "map": {"version":3,"file":"getFeeHistory.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/getFeeHistory.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { FeeHistory } from '../../types/fee.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type FormatFeeHistoryErrorType,\n  formatFeeHistory,\n} from '../../utils/formatters/feeHistory.js'\n\nexport type GetFeeHistoryParameters = {\n  /**\n   * Number of blocks in the requested range. Between 1 and 1024 blocks can be requested in a single query. Less than requested may be returned if not all blocks are available.\n   */\n  blockCount: number\n  /**\n   * A monotonically increasing list of percentile values to sample from each block's effective priority fees per gas in ascending order, weighted by gas used.\n   */\n  rewardPercentiles: number[]\n} & (\n  | {\n      blockNumber?: never\n      /**\n       * Highest number block of the requested range.\n       * @default 'latest'\n       */\n      blockTag?: BlockTag\n    }\n  | {\n      /** Highest number block of the requested range. */\n      blockNumber?: bigint\n      blockTag?: never\n    }\n)\nexport type GetFeeHistoryReturnType = FeeHistory\n\nexport type GetFeeHistoryErrorType =\n  | NumberToHexErrorType\n  | RequestErrorType\n  | FormatFeeHistoryErrorType\n\n/**\n * Returns a collection of historical gas information.\n *\n * - Docs: https://viem.sh/docs/actions/public/getFeeHistory.html\n * - JSON-RPC Methods: [`eth_feeHistory`](https://docs.alchemy.com/reference/eth-feehistory)\n *\n * @param client - Client to use\n * @param parameters - {@link GetFeeHistoryParameters}\n * @returns The gas estimate (in wei). {@link GetFeeHistoryReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getFeeHistory } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const feeHistory = await getFeeHistory(client, {\n *   blockCount: 4,\n *   rewardPercentiles: [25, 75],\n * })\n */\nexport async function getFeeHistory<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    blockCount,\n    blockNumber,\n    blockTag = 'latest',\n    rewardPercentiles,\n  }: GetFeeHistoryParameters,\n): Promise<GetFeeHistoryReturnType> {\n  const blockNumberHex = blockNumber ? numberToHex(blockNumber) : undefined\n  const feeHistory = await client.request({\n    method: 'eth_feeHistory',\n    params: [\n      numberToHex(blockCount),\n      blockNumberHex || blockTag,\n      rewardPercentiles,\n    ],\n  })\n  return formatFeeHistory(feeHistory)\n}\n"],"names":[],"mappings":";;;AAMA,OAAO,EAEL,WAAW,GACZ,MAAM,+BAA+B,CAAA;AACtC,OAAO,EAEL,gBAAgB,GACjB,MAAM,sCAAsC,CAAA;;;AAyDtC,KAAK,UAAU,aAAa,CACjC,MAAiC,EACjC,EACE,UAAU,EACV,WAAW,EACX,QAAQ,GAAG,QAAQ,EACnB,iBAAiB,EACO;IAE1B,MAAM,cAAc,GAAG,WAAW,CAAC,CAAC,4OAAC,cAAA,AAAW,EAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAA;IACzE,MAAM,UAAU,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;QACtC,MAAM,EAAE,gBAAgB;QACxB,MAAM,EAAE;uPACN,cAAA,AAAW,EAAC,UAAU,CAAC;YACvB,cAAc,IAAI,QAAQ;YAC1B,iBAAiB;SAClB;KACF,CAAC,CAAA;IACF,yPAAO,mBAAA,AAAgB,EAAC,UAAU,CAAC,CAAA;AACrC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7177, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7183, "column": 0}, "map": {"version":3,"file":"getFilterChanges.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/getFilterChanges.ts"],"sourcesContent":["import type { Abi, AbiEvent, ExtractAbiEvent } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  DecodeLogDataMismatch,\n  DecodeLogTopicsMismatch,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter, FilterType } from '../../types/filter.js'\nimport type { Log } from '../../types/log.js'\nimport type { Hash } from '../../types/misc.js'\nimport {\n  type DecodeEventLogErrorType,\n  decodeEventLog,\n} from '../../utils/abi/decodeEventLog.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type FormatLogErrorType,\n  formatLog,\n} from '../../utils/formatters/log.js'\n\nexport type GetFilterChangesParameters<\n  TFilterType extends FilterType = FilterType,\n  TAbi extends Abi | readonly unknown[] | undefined = undefined,\n  TEventName extends string | undefined = undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = {\n  filter: Filter<\n    TFilterType,\n    TAbi,\n    TEventName,\n    any,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >\n}\n\nexport type GetFilterChangesReturnType<\n  TFilterType extends FilterType = FilterType,\n  TAbi extends Abi | readonly unknown[] | undefined = undefined,\n  TEventName extends string | undefined = undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _AbiEvent extends AbiEvent | undefined = TAbi extends Abi\n    ? TEventName extends string\n      ? ExtractAbiEvent<TAbi, TEventName>\n      : undefined\n    : undefined,\n  _Pending extends boolean =\n    | (TFromBlock extends 'pending' ? true : false)\n    | (TToBlock extends 'pending' ? true : false),\n> = TFilterType extends 'event'\n  ? Log<bigint, number, _Pending, _AbiEvent, TStrict, TAbi, TEventName>[]\n  : Hash[]\n\nexport type GetFilterChangesErrorType =\n  | RequestErrorType\n  | DecodeEventLogErrorType\n  | FormatLogErrorType\n  | ErrorType\n\n/**\n * Returns a list of logs or hashes based on a [Filter](/docs/glossary/terms#filter) since the last time it was called.\n *\n * - Docs: https://viem.sh/docs/actions/public/getFilterChanges.html\n * - JSON-RPC Methods: [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges)\n *\n * A Filter can be created from the following actions:\n *\n * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter.html)\n * - [`createContractEventFilter`](https://viem.sh/docs/contract/createContractEventFilter.html)\n * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter.html)\n * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter.html)\n *\n * Depending on the type of filter, the return value will be different:\n *\n * - If the filter was created with `createContractEventFilter` or `createEventFilter`, it returns a list of logs.\n * - If the filter was created with `createPendingTransactionFilter`, it returns a list of transaction hashes.\n * - If the filter was created with `createBlockFilter`, it returns a list of block hashes.\n *\n * @param client - Client to use\n * @param parameters - {@link GetFilterChangesParameters}\n * @returns Logs or hashes. {@link GetFilterChangesReturnType}\n *\n * @example\n * // Blocks\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createBlockFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createBlockFilter(client)\n * const hashes = await getFilterChanges(client, { filter })\n *\n * @example\n * // Contract Events\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createContractEventFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createContractEventFilter(client, {\n *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n *   eventName: 'Transfer',\n * })\n * const logs = await getFilterChanges(client, { filter })\n *\n * @example\n * // Raw Events\n * import { createPublicClient, http, parseAbiItem } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createEventFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createEventFilter(client, {\n *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n * })\n * const logs = await getFilterChanges(client, { filter })\n *\n * @example\n * // Transactions\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createPendingTransactionFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createPendingTransactionFilter(client)\n * const hashes = await getFilterChanges(client, { filter })\n */\nexport async function getFilterChanges<\n  TTransport extends Transport,\n  TChain extends Chain | undefined,\n  TFilterType extends FilterType,\n  const TAbi extends Abi | readonly unknown[] | undefined,\n  TEventName extends string | undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  _client: Client<TTransport, TChain>,\n  {\n    filter,\n  }: GetFilterChangesParameters<\n    TFilterType,\n    TAbi,\n    TEventName,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >,\n): Promise<\n  GetFilterChangesReturnType<\n    TFilterType,\n    TAbi,\n    TEventName,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >\n> {\n  const strict = 'strict' in filter && filter.strict\n\n  const logs = await filter.request({\n    method: 'eth_getFilterChanges',\n    params: [filter.id],\n  })\n  return logs\n    .map((log) => {\n      if (typeof log === 'string') return log\n      try {\n        const { eventName, args } =\n          'abi' in filter && filter.abi\n            ? decodeEventLog({\n                abi: filter.abi,\n                data: log.data,\n                topics: log.topics as any,\n                strict,\n              })\n            : { eventName: undefined, args: undefined }\n        return formatLog(log, { args, eventName })\n      } catch (err) {\n        let eventName\n        let isUnnamed\n        if (\n          err instanceof DecodeLogDataMismatch ||\n          err instanceof DecodeLogTopicsMismatch\n        ) {\n          // If strict mode is on, and log data/topics do not match event definition, skip.\n          if ('strict' in filter && filter.strict) return\n          eventName = err.abiItem.name\n          isUnnamed = err.abiItem.inputs?.some((x) => !('name' in x && x.name))\n        }\n\n        // Set args undefined if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n        return formatLog(log, { args: isUnnamed ? [] : {}, eventName })\n      }\n    })\n    .filter(Boolean) as GetFilterChangesReturnType<\n    TFilterType,\n    TAbi,\n    TEventName,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >\n}\n"],"names":[],"mappings":";;;AAcA,OAAO,EAEL,cAAc,GACf,MAAM,mCAAmC,CAAA;AAE1C,OAAO,EAEL,SAAS,GACV,MAAM,+BAA+B,CAAA;AAlBtC,OAAO,EACL,qBAAqB,EACrB,uBAAuB,GACxB,MAAM,qBAAqB,CAAA;;;;AA+IrB,KAAK,UAAU,gBAAgB,CAUpC,OAAmC,EACnC,EACE,MAAM,EAQP;IAWD,MAAM,MAAM,GAAG,QAAQ,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,CAAA;IAElD,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;QAChC,MAAM,EAAE,sBAAsB;QAC9B,MAAM,EAAE;YAAC,MAAM,CAAC,EAAE;SAAC;KACpB,CAAC,CAAA;IACF,OAAO,IAAI,CACR,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;QACX,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE,OAAO,GAAG,CAAA;QACvC,IAAI;YACF,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GACvB,KAAK,IAAI,MAAM,IAAI,MAAM,CAAC,GAAG,kPACzB,iBAAA,AAAc,EAAC;gBACb,GAAG,EAAE,MAAM,CAAC,GAAG;gBACf,IAAI,EAAE,GAAG,CAAC,IAAI;gBACd,MAAM,EAAE,GAAG,CAAC,MAAa;gBACzB,MAAM;aACP,CAAC,GACF;gBAAE,SAAS,EAAE,SAAS;gBAAE,IAAI,EAAE,SAAS;YAAA,CAAE,CAAA;YAC/C,kPAAO,YAAA,AAAS,EAAC,GAAG,EAAE;gBAAE,IAAI;gBAAE,SAAS;YAAA,CAAE,CAAC,CAAA;SAC3C,CAAC,OAAO,GAAG,EAAE;YACZ,IAAI,SAAS,CAAA;YACb,IAAI,SAAS,CAAA;YACb,IACE,GAAG,sOAAY,wBAAqB,IACpC,GAAG,qOAAY,2BAAuB,EACtC;gBACA,iFAAiF;gBACjF,IAAI,QAAQ,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE,OAAM;gBAC/C,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAA;gBAC5B,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,AAAE,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA;aACtE;YAED,+FAA+F;YAC/F,kPAAO,YAAA,AAAS,EAAC,GAAG,EAAE;gBAAE,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA,CAAE;gBAAE,SAAS;YAAA,CAAE,CAAC,CAAA;SAChE;IACH,CAAC,CAAC,CACD,MAAM,CAAC,OAAO,CAOhB,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7233, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7239, "column": 0}, "map": {"version":3,"file":"getFilterLogs.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/getFilterLogs.ts"],"sourcesContent":["import type { Abi, AbiEvent, ExtractAbiEvent } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  DecodeLogDataMismatch,\n  DecodeLogTopicsMismatch,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Log } from '../../types/log.js'\nimport {\n  type DecodeEventLogErrorType,\n  decodeEventLog,\n} from '../../utils/abi/decodeEventLog.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type FormatLogErrorType,\n  formatLog,\n} from '../../utils/formatters/log.js'\n\nexport type GetFilterLogsParameters<\n  TAbi extends Abi | readonly unknown[] | undefined = undefined,\n  TEventName extends string | undefined = undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n> = {\n  filter: Filter<'event', TAbi, TEventName, any, TStrict, TFromBlock, TToBlock>\n}\nexport type GetFilterLogsReturnType<\n  TAbi extends Abi | readonly unknown[] | undefined = undefined,\n  TEventName extends string | undefined = undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  _AbiEvent extends AbiEvent | undefined = TAbi extends Abi\n    ? TEventName extends string\n      ? ExtractAbiEvent<TAbi, TEventName>\n      : undefined\n    : undefined,\n  _Pending extends boolean =\n    | (TFromBlock extends 'pending' ? true : false)\n    | (TToBlock extends 'pending' ? true : false),\n> = Log<bigint, number, _Pending, _AbiEvent, TStrict, TAbi, TEventName>[]\n\nexport type GetFilterLogsErrorType =\n  | RequestErrorType\n  | DecodeEventLogErrorType\n  | FormatLogErrorType\n  | ErrorType\n\n/**\n * Returns a list of event logs since the filter was created.\n *\n * - Docs: https://viem.sh/docs/actions/public/getFilterLogs.html\n * - JSON-RPC Methods: [`eth_getFilterLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterlogs)\n *\n * `getFilterLogs` is only compatible with **event filters**.\n *\n * @param client - Client to use\n * @param parameters - {@link GetFilterLogsParameters}\n * @returns A list of event logs. {@link GetFilterLogsReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbiItem } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createEventFilter, getFilterLogs } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createEventFilter(client, {\n *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n * })\n * const logs = await getFilterLogs(client, { filter })\n */\nexport async function getFilterLogs<\n  TChain extends Chain | undefined,\n  const TAbi extends Abi | readonly unknown[] | undefined,\n  TEventName extends string | undefined,\n  TStrict extends boolean | undefined = undefined,\n  TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n  TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n>(\n  _client: Client<Transport, TChain>,\n  {\n    filter,\n  }: GetFilterLogsParameters<TAbi, TEventName, TStrict, TFromBlock, TToBlock>,\n): Promise<\n  GetFilterLogsReturnType<TAbi, TEventName, TStrict, TFromBlock, TToBlock>\n> {\n  const strict = filter.strict ?? false\n\n  const logs = await filter.request({\n    method: 'eth_getFilterLogs',\n    params: [filter.id],\n  })\n  return logs\n    .map((log) => {\n      try {\n        const { eventName, args } =\n          'abi' in filter && filter.abi\n            ? decodeEventLog({\n                abi: filter.abi,\n                data: log.data,\n                topics: log.topics as any,\n                strict,\n              })\n            : { eventName: undefined, args: undefined }\n        return formatLog(log, { args, eventName })\n      } catch (err) {\n        let eventName\n        let isUnnamed\n        if (\n          err instanceof DecodeLogDataMismatch ||\n          err instanceof DecodeLogTopicsMismatch\n        ) {\n          // If strict mode is on, and log data/topics do not match event definition, skip.\n          if ('strict' in filter && filter.strict) return\n          eventName = err.abiItem.name\n          isUnnamed = err.abiItem.inputs?.some((x) => !('name' in x && x.name))\n        }\n\n        // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n        return formatLog(log, { args: isUnnamed ? [] : {}, eventName })\n      }\n    })\n    .filter(Boolean) as unknown as GetFilterLogsReturnType<\n    TAbi,\n    TEventName,\n    TStrict,\n    TFromBlock,\n    TToBlock\n  >\n}\n"],"names":[],"mappings":";;;AAaA,OAAO,EAEL,cAAc,GACf,MAAM,mCAAmC,CAAA;AAE1C,OAAO,EAEL,SAAS,GACV,MAAM,+BAA+B,CAAA;AAjBtC,OAAO,EACL,qBAAqB,EACrB,uBAAuB,GACxB,MAAM,qBAAqB,CAAA;;;;AA0ErB,KAAK,UAAU,aAAa,CAQjC,OAAkC,EAClC,EACE,MAAM,EACmE;IAI3E,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,KAAK,CAAA;IAErC,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;QAChC,MAAM,EAAE,mBAAmB;QAC3B,MAAM,EAAE;YAAC,MAAM,CAAC,EAAE;SAAC;KACpB,CAAC,CAAA;IACF,OAAO,IAAI,CACR,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;QACX,IAAI;YACF,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GACvB,KAAK,IAAI,MAAM,IAAI,MAAM,CAAC,GAAG,kPACzB,iBAAA,AAAc,EAAC;gBACb,GAAG,EAAE,MAAM,CAAC,GAAG;gBACf,IAAI,EAAE,GAAG,CAAC,IAAI;gBACd,MAAM,EAAE,GAAG,CAAC,MAAa;gBACzB,MAAM;aACP,CAAC,GACF;gBAAE,SAAS,EAAE,SAAS;gBAAE,IAAI,EAAE,SAAS;YAAA,CAAE,CAAA;YAC/C,kPAAO,YAAA,AAAS,EAAC,GAAG,EAAE;gBAAE,IAAI;gBAAE,SAAS;YAAA,CAAE,CAAC,CAAA;SAC3C,CAAC,OAAO,GAAG,EAAE;YACZ,IAAI,SAAS,CAAA;YACb,IAAI,SAAS,CAAA;YACb,IACE,GAAG,sOAAY,wBAAqB,IACpC,GAAG,sOAAY,0BAAuB,EACtC;gBACA,iFAAiF;gBACjF,IAAI,QAAQ,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE,OAAM;gBAC/C,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,CAAA;gBAC5B,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAG,CAAD,AAAE,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA;aACtE;YAED,8FAA8F;YAC9F,kPAAO,YAAA,AAAS,EAAC,GAAG,EAAE;gBAAE,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA,CAAE;gBAAE,SAAS;YAAA,CAAE,CAAC,CAAA;SAChE;IACH,CAAC,CAAC,CACD,MAAM,CAAC,OAAO,CAMhB,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7288, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7294, "column": 0}, "map": {"version":3,"file":"proof.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/formatters/proof.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { Proof } from '../../types/proof.js'\nimport type { RpcProof } from '../../types/rpc.js'\nimport { hexToNumber } from '../index.js'\n\nexport type FormatProofErrorType = ErrorType\n\nfunction formatStorageProof(storageProof: RpcProof['storageProof']) {\n  return storageProof.map((proof) => ({\n    ...proof,\n    value: BigInt(proof.value),\n  }))\n}\n\nexport function formatProof(proof: Partial<RpcProof>) {\n  return {\n    ...proof,\n    balance: proof.balance ? BigInt(proof.balance) : undefined,\n    nonce: proof.nonce ? hexToNumber(proof.nonce) : undefined,\n    storageProof: proof.storageProof\n      ? formatStorageProof(proof.storageProof)\n      : undefined,\n  } as Proof\n}\n"],"names":[],"mappings":";;;AAGA,OAAO,EAAE,WAAW,EAAE,MAAM,aAAa,CAAA;;AAIzC,SAAS,kBAAkB,CAAC,YAAsC;IAChE,OAAO,YAAY,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAG,CAAD,AAAE;YAClC,GAAG,KAAK;YACR,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;SAC3B,CAAC,CAAC,CAAA;AACL,CAAC;AAEK,SAAU,WAAW,CAAC,KAAwB;IAClD,OAAO;QACL,GAAG,KAAK;QACR,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS;QAC1D,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC,8OAAC,cAAA,AAAW,EAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS;QACzD,YAAY,EAAE,KAAK,CAAC,YAAY,GAC5B,kBAAkB,CAAC,KAAK,CAAC,YAAY,CAAC,GACtC,SAAS;KACL,CAAA;AACZ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7313, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7319, "column": 0}, "map": {"version":3,"file":"getProof.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/getProof.ts"],"sourcesContent":["import type { Address } from 'abitype'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { Proof } from '../../types/proof.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type FormatProofErrorType,\n  formatProof,\n} from '../../utils/formatters/proof.js'\n\nexport type GetProofParameters = {\n  /** Account address. */\n  address: Address\n  /** Array of storage-keys that should be proofed and included. */\n  storageKeys: Hash[]\n} & (\n  | {\n      /** The block number. */\n      blockNumber?: bigint\n      blockTag?: never\n    }\n  | {\n      blockNumber?: never\n      /**\n       * The block tag.\n       * @default 'latest'\n       */\n      blockTag?: BlockTag\n    }\n)\n\nexport type GetProofReturnType = Proof\n\nexport type GetProofErrorType =\n  | NumberToHexErrorType\n  | FormatProofErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns the account and storage values of the specified account including the Merkle-proof.\n *\n * - Docs: https://viem.sh/docs/actions/public/getProof.html\n * - JSON-RPC Methods:\n *   - Calls [`eth_getProof`](https://eips.ethereum.org/EIPS/eip-1186)\n *\n * @param client - Client to use\n * @param parameters - {@link GetProofParameters}\n * @returns Proof data. {@link GetProofReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getProof } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const block = await getProof(client, {\n *  address: '0x...',\n *  storageKeys: ['0x...'],\n * })\n */\nexport async function getProof<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    address,\n    blockNumber,\n    blockTag: blockTag_,\n    storageKeys,\n  }: GetProofParameters,\n): Promise<GetProofReturnType> {\n  const blockTag = blockTag_ ?? 'latest'\n\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n\n  const proof = await client.request({\n    method: 'eth_getProof',\n    params: [address, storageKeys, blockNumberHex || blockTag],\n  })\n\n  return formatProof(proof)\n}\n"],"names":[],"mappings":";;;AASA,OAAO,EAEL,WAAW,GACZ,MAAM,+BAA+B,CAAA;AACtC,OAAO,EAEL,WAAW,GACZ,MAAM,iCAAiC,CAAA;;;AAwDjC,KAAK,UAAU,QAAQ,CAC5B,MAAiC,EACjC,EACE,OAAO,EACP,WAAW,EACX,QAAQ,EAAE,SAAS,EACnB,WAAW,EACQ;IAErB,MAAM,QAAQ,GAAG,SAAS,IAAI,QAAQ,CAAA;IAEtC,MAAM,cAAc,GAClB,WAAW,KAAK,SAAS,CAAC,CAAC,EAAC,wPAAA,AAAW,EAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAA;IAElE,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;QACjC,MAAM,EAAE,cAAc;QACtB,MAAM,EAAE;YAAC,OAAO;YAAE,WAAW;YAAE,cAAc,IAAI,QAAQ;SAAC;KAC3D,CAAC,CAAA;IAEF,oPAAO,cAAA,AAAW,EAAC,KAAK,CAAC,CAAA;AAC3B,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7339, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7345, "column": 0}, "map": {"version":3,"file":"getStorageAt.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/getStorageAt.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type GetStorageAtParameters = {\n  address: Address\n  slot: Hex\n} & (\n  | {\n      blockNumber?: never\n      blockTag?: BlockTag\n    }\n  | {\n      blockNumber?: bigint\n      blockTag?: never\n    }\n)\n\nexport type GetStorageAtReturnType = Hex | undefined\n\nexport type GetStorageAtErrorType =\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns the value from a storage slot at a given address.\n *\n * - Docs: https://viem.sh/docs/contract/getStorageAt.html\n * - JSON-RPC Methods: [`eth_getStorageAt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getstorageat)\n *\n * @param client - Client to use\n * @param parameters - {@link GetStorageAtParameters}\n * @returns The value of the storage slot. {@link GetStorageAtReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getStorageAt } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const code = await getStorageAt(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   slot: toHex(0),\n * })\n */\nexport async function getStorageAt<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  { address, blockNumber, blockTag = 'latest', slot }: GetStorageAtParameters,\n): Promise<GetStorageAtReturnType> {\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n  const data = await client.request({\n    method: 'eth_getStorageAt',\n    params: [address, slot, blockNumberHex || blockTag],\n  })\n  return data\n}\n"],"names":[],"mappings":";;;AASA,OAAO,EAEL,WAAW,GACZ,MAAM,+BAA+B,CAAA;;AA+C/B,KAAK,UAAU,YAAY,CAChC,MAAiC,EACjC,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,GAAG,QAAQ,EAAE,IAAI,EAA0B;IAE3E,MAAM,cAAc,GAClB,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC,yPAAA,AAAW,EAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAA;IAClE,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;QAChC,MAAM,EAAE,kBAAkB;QAC1B,MAAM,EAAE;YAAC,OAAO;YAAE,IAAI;YAAE,cAAc,IAAI,QAAQ;SAAC;KACpD,CAAC,CAAA;IACF,OAAO,IAAI,CAAA;AACb,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7362, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7368, "column": 0}, "map": {"version":3,"file":"getTransaction.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/getTransaction.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { TransactionNotFoundError } from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RpcTransaction } from '../../types/rpc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\nimport {\n  type FormattedTransaction,\n  formatTransaction,\n} from '../../utils/formatters/transaction.js'\n\nexport type GetTransactionParameters<TBlockTag extends BlockTag = 'latest'> =\n  | {\n      /** The block hash */\n      blockHash: Hash\n      blockNumber?: never\n      blockTag?: never\n      hash?: never\n      /** The index of the transaction on the block. */\n      index: number\n    }\n  | {\n      blockHash?: never\n      /** The block number */\n      blockNumber: bigint\n      blockTag?: never\n      hash?: never\n      /** The index of the transaction on the block. */\n      index: number\n    }\n  | {\n      blockHash?: never\n      blockNumber?: never\n      /** The block tag. */\n      blockTag: TBlockTag | BlockTag\n      hash?: never\n      /** The index of the transaction on the block. */\n      index: number\n    }\n  | {\n      blockHash?: never\n      blockNumber?: never\n      blockTag?: never\n      /** The hash of the transaction. */\n      hash: Hash\n      index?: number\n    }\n\nexport type GetTransactionReturnType<\n  TChain extends Chain | undefined = Chain,\n  TBlockTag extends BlockTag = 'latest',\n> = FormattedTransaction<TChain, TBlockTag>\n\nexport type GetTransactionErrorType =\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Returns information about a [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) given a hash or block identifier.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransaction.html\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/fetching-transactions\n * - JSON-RPC Methods: [`eth_getTransactionByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionByHash)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionParameters}\n * @returns The transaction information. {@link GetTransactionReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransaction } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transaction = await getTransaction(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getTransaction<\n  TChain extends Chain | undefined,\n  TBlockTag extends BlockTag = 'latest',\n>(\n  client: Client<Transport, TChain>,\n  {\n    blockHash,\n    blockNumber,\n    blockTag: blockTag_,\n    hash,\n    index,\n  }: GetTransactionParameters<TBlockTag>,\n): Promise<GetTransactionReturnType<TChain, TBlockTag>> {\n  const blockTag = blockTag_ || 'latest'\n\n  const blockNumberHex =\n    blockNumber !== undefined ? numberToHex(blockNumber) : undefined\n\n  let transaction: RpcTransaction | null = null\n  if (hash) {\n    transaction = await client.request({\n      method: 'eth_getTransactionByHash',\n      params: [hash],\n    })\n  } else if (blockHash) {\n    transaction = await client.request({\n      method: 'eth_getTransactionByBlockHashAndIndex',\n      params: [blockHash, numberToHex(index)],\n    })\n  } else if (blockNumberHex || blockTag) {\n    transaction = await client.request({\n      method: 'eth_getTransactionByBlockNumberAndIndex',\n      params: [blockNumberHex || blockTag, numberToHex(index)],\n    })\n  }\n\n  if (!transaction)\n    throw new TransactionNotFoundError({\n      blockHash,\n      blockNumber,\n      blockTag,\n      hash,\n      index,\n    })\n\n  const format =\n    client.chain?.formatters?.transaction?.format || formatTransaction\n  return format(transaction)\n}\n"],"names":[],"mappings":";;;AASA,OAAO,EAEL,WAAW,GACZ,MAAM,+BAA+B,CAAA;AAVtC,OAAO,EAAE,wBAAwB,EAAE,MAAM,6BAA6B,CAAA;AAWtE,OAAO,EAEL,iBAAiB,GAClB,MAAM,uCAAuC,CAAA;;;;AAyEvC,KAAK,UAAU,cAAc,CAIlC,MAAiC,EACjC,EACE,SAAS,EACT,WAAW,EACX,QAAQ,EAAE,SAAS,EACnB,IAAI,EACJ,KAAK,EAC+B;IAEtC,MAAM,QAAQ,GAAG,SAAS,IAAI,QAAQ,CAAA;IAEtC,MAAM,cAAc,GAClB,WAAW,KAAK,SAAS,CAAC,CAAC,4OAAC,cAAA,AAAW,EAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAA;IAElE,IAAI,WAAW,GAA0B,IAAI,CAAA;IAC7C,IAAI,IAAI,EAAE;QACR,WAAW,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;YACjC,MAAM,EAAE,0BAA0B;YAClC,MAAM,EAAE;gBAAC,IAAI;aAAC;SACf,CAAC,CAAA;KACH,MAAM,IAAI,SAAS,EAAE;QACpB,WAAW,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;YACjC,MAAM,EAAE,uCAAuC;YAC/C,MAAM,EAAE;gBAAC,SAAS;2PAAE,cAAA,AAAW,EAAC,KAAK,CAAC;aAAC;SACxC,CAAC,CAAA;KACH,MAAM,IAAI,cAAc,IAAI,QAAQ,UAAE;QACrC,WAAW,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;YACjC,MAAM,EAAE,yCAAyC;YACjD,MAAM,EAAE;gBAAC,cAAc,IAAI,QAAQ;2PAAE,cAAA,AAAW,EAAC,KAAK,CAAC;aAAC;SACzD,CAAC,CAAA;KACH;IAED,IAAI,CAAC,WAAW,EACd,MAAM,sOAAI,2BAAwB,CAAC;QACjC,SAAS;QACT,WAAW;QACX,QAAQ;QACR,IAAI;QACJ,KAAK;KACN,CAAC,CAAA;IAEJ,MAAM,MAAM,GACV,MAAM,CAAC,KAAK,EAAE,UAAU,EAAE,WAAW,EAAE,MAAM,mPAAI,oBAAiB,CAAA;IACpE,OAAO,MAAM,CAAC,WAAW,CAAC,CAAA;AAC5B,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7415, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7421, "column": 0}, "map": {"version":3,"file":"getTransactionConfirmations.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/getTransactionConfirmations.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { FormattedTransactionReceipt } from '../../utils/formatters/transactionReceipt.js'\nimport { getAction } from '../../utils/getAction.js'\n\nimport {\n  type GetBlockNumberErrorType,\n  getBlockNumber,\n} from './getBlockNumber.js'\nimport {\n  type GetTransactionErrorType,\n  getTransaction,\n} from './getTransaction.js'\n\nexport type GetTransactionConfirmationsParameters<\n  TChain extends Chain | undefined = Chain,\n> =\n  | {\n      /** The transaction hash. */\n      hash: Hash\n      transactionReceipt?: never\n    }\n  | {\n      hash?: never\n      /** The transaction receipt. */\n      transactionReceipt: FormattedTransactionReceipt<TChain>\n    }\n\nexport type GetTransactionConfirmationsReturnType = bigint\n\nexport type GetTransactionConfirmationsErrorType =\n  | GetBlockNumberErrorType\n  | GetTransactionErrorType\n  | ErrorType\n\n/**\n * Returns the number of blocks passed (confirmations) since the transaction was processed on a block.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransactionConfirmations.html\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/fetching-transactions\n * - JSON-RPC Methods: [`eth_getTransactionConfirmations`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionConfirmations)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionConfirmationsParameters}\n * @returns The number of blocks passed since the transaction was processed. If confirmations is 0, then the Transaction has not been confirmed & processed yet. {@link GetTransactionConfirmationsReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransactionConfirmations } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const confirmations = await getTransactionConfirmations(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getTransactionConfirmations<\n  TChain extends Chain | undefined,\n>(\n  client: Client<Transport, TChain>,\n  { hash, transactionReceipt }: GetTransactionConfirmationsParameters<TChain>,\n): Promise<GetTransactionConfirmationsReturnType> {\n  const [blockNumber, transaction] = await Promise.all([\n    getAction(client, getBlockNumber, 'getBlockNumber')({}),\n    hash\n      ? getAction(client, getTransaction, 'getBlockNumber')({ hash })\n      : undefined,\n  ])\n  const transactionBlockNumber =\n    transactionReceipt?.blockNumber || transaction?.blockNumber\n  if (!transactionBlockNumber) return 0n\n  return blockNumber - transactionBlockNumber! + 1n\n}\n"],"names":[],"mappings":";;;AAMA,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAA;AAEpD,OAAO,EAEL,cAAc,GACf,MAAM,qBAAqB,CAAA;AAC5B,OAAO,EAEL,cAAc,GACf,MAAM,qBAAqB,CAAA;;;;AA+CrB,KAAK,UAAU,2BAA2B,CAG/C,MAAiC,EACjC,EAAE,IAAI,EAAE,kBAAkB,EAAiD;IAE3E,MAAM,CAAC,WAAW,EAAE,WAAW,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;2OACnD,YAAA,AAAS,EAAC,MAAM,kPAAE,iBAAc,EAAE,gBAAgB,CAAC,CAAC,CAAA,CAAE,CAAC;QACvD,IAAI,IACA,8OAAA,AAAS,EAAC,MAAM,kPAAE,iBAAc,EAAE,gBAAgB,CAAC,CAAC;YAAE,IAAI;QAAA,CAAE,CAAC,GAC7D,SAAS;KACd,CAAC,CAAA;IACF,MAAM,sBAAsB,GAC1B,kBAAkB,EAAE,WAAW,IAAI,WAAW,EAAE,WAAW,CAAA;IAC7D,IAAI,CAAC,sBAAsB,EAAE,OAAO,EAAE,CAAA;IACtC,OAAO,WAAW,GAAG,sBAAuB,GAAG,EAAE,CAAA;AACnD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7441, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7447, "column": 0}, "map": {"version":3,"file":"transactionReceipt.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/formatters/transactionReceipt.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type {\n  Chain,\n  ExtractChainFormatterReturnType,\n} from '../../types/chain.js'\nimport type { RpcTransactionReceipt } from '../../types/rpc.js'\nimport type { TransactionReceipt } from '../../types/transaction.js'\nimport { hexToNumber } from '../encoding/fromHex.js'\n\nimport { type DefineFormatterErrorType, defineFormatter } from './formatter.js'\nimport { formatLog } from './log.js'\nimport { transactionType } from './transaction.js'\n\nexport type FormattedTransactionReceipt<\n  TChain extends Chain | undefined = Chain | undefined,\n> = ExtractChainFormatterReturnType<\n  TChain,\n  'transactionReceipt',\n  TransactionReceipt\n>\n\nconst statuses = {\n  '0x0': 'reverted',\n  '0x1': 'success',\n} as const\n\nexport type FormatTransactionReceiptErrorType = ErrorType\n\nexport function formatTransactionReceipt(\n  transactionReceipt: Partial<RpcTransactionReceipt>,\n) {\n  return {\n    ...transactionReceipt,\n    blockNumber: transactionReceipt.blockNumber\n      ? BigInt(transactionReceipt.blockNumber)\n      : null,\n    contractAddress: transactionReceipt.contractAddress\n      ? transactionReceipt.contractAddress\n      : null,\n    cumulativeGasUsed: transactionReceipt.cumulativeGasUsed\n      ? BigInt(transactionReceipt.cumulativeGasUsed)\n      : null,\n    effectiveGasPrice: transactionReceipt.effectiveGasPrice\n      ? BigInt(transactionReceipt.effectiveGasPrice)\n      : null,\n    gasUsed: transactionReceipt.gasUsed\n      ? BigInt(transactionReceipt.gasUsed)\n      : null,\n    logs: transactionReceipt.logs\n      ? transactionReceipt.logs.map((log) => formatLog(log))\n      : null,\n    to: transactionReceipt.to ? transactionReceipt.to : null,\n    transactionIndex: transactionReceipt.transactionIndex\n      ? hexToNumber(transactionReceipt.transactionIndex)\n      : null,\n    status: transactionReceipt.status\n      ? statuses[transactionReceipt.status]\n      : null,\n    type: transactionReceipt.type\n      ? transactionType[\n          transactionReceipt.type as keyof typeof transactionType\n        ] || transactionReceipt.type\n      : null,\n  } as TransactionReceipt\n}\n\nexport type DefineTransactionReceiptErrorType =\n  | DefineFormatterErrorType\n  | ErrorType\n\nexport const defineTransactionReceipt = /*#__PURE__*/ defineFormatter(\n  'transactionReceipt',\n  formatTransactionReceipt,\n)\n"],"names":[],"mappings":";;;;AASA,OAAO,EAAiC,eAAe,EAAE,MAAM,gBAAgB,CAAA;AAC/E,OAAO,EAAE,SAAS,EAAE,MAAM,UAAU,CAAA;AAHpC,OAAO,EAAE,WAAW,EAAE,MAAM,wBAAwB,CAAA;AAIpD,OAAO,EAAE,eAAe,EAAE,MAAM,kBAAkB,CAAA;;;;;AAUlD,MAAM,QAAQ,GAAG;IACf,KAAK,EAAE,UAAU;IACjB,KAAK,EAAE,SAAS;CACR,CAAA;AAIJ,SAAU,wBAAwB,CACtC,kBAAkD;IAElD,OAAO;QACL,GAAG,kBAAkB;QACrB,WAAW,EAAE,kBAAkB,CAAC,WAAW,GACvC,MAAM,CAAC,kBAAkB,CAAC,WAAW,CAAC,GACtC,IAAI;QACR,eAAe,EAAE,kBAAkB,CAAC,eAAe,GAC/C,kBAAkB,CAAC,eAAe,GAClC,IAAI;QACR,iBAAiB,EAAE,kBAAkB,CAAC,iBAAiB,GACnD,MAAM,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,GAC5C,IAAI;QACR,iBAAiB,EAAE,kBAAkB,CAAC,iBAAiB,GACnD,MAAM,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,GAC5C,IAAI;QACR,OAAO,EAAE,kBAAkB,CAAC,OAAO,GAC/B,MAAM,CAAC,kBAAkB,CAAC,OAAO,CAAC,GAClC,IAAI;QACR,IAAI,EAAE,kBAAkB,CAAC,IAAI,GACzB,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,0OAAC,YAAA,AAAS,EAAC,GAAG,CAAC,CAAC,GACpD,IAAI;QACR,EAAE,EAAE,kBAAkB,CAAC,EAAE,CAAC,CAAC,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI;QACxD,gBAAgB,EAAE,kBAAkB,CAAC,gBAAgB,gPACjD,cAAA,AAAW,EAAC,kBAAkB,CAAC,gBAAgB,CAAC,GAChD,IAAI;QACR,MAAM,EAAE,kBAAkB,CAAC,MAAM,GAC7B,QAAQ,CAAC,kBAAkB,CAAC,MAAM,CAAC,GACnC,IAAI;QACR,IAAI,EAAE,kBAAkB,CAAC,IAAI,kPACzB,kBAAe,CACb,kBAAkB,CAAC,IAAoC,CACxD,IAAI,kBAAkB,CAAC,IAAI,GAC5B,IAAI;KACa,CAAA;AACzB,CAAC;AAMM,MAAM,wBAAwB,GAAG,WAAA,EAAa,kPAAC,kBAAA,AAAe,EACnE,oBAAoB,EACpB,wBAAwB,CACzB,CAAA","ignoreList":[0]}},
    {"offset": {"line": 7479, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7485, "column": 0}, "map": {"version":3,"file":"getTransactionReceipt.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/getTransactionReceipt.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  TransactionReceiptNotFoundError,\n  type TransactionReceiptNotFoundErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type FormattedTransactionReceipt,\n  formatTransactionReceipt,\n} from '../../utils/formatters/transactionReceipt.js'\n\nexport type GetTransactionReceiptParameters = {\n  /** The hash of the transaction. */\n  hash: Hash\n}\n\nexport type GetTransactionReceiptReturnType<\n  TChain extends Chain | undefined = Chain | undefined,\n> = FormattedTransactionReceipt<TChain>\n\nexport type GetTransactionReceiptErrorType =\n  | RequestErrorType\n  | TransactionReceiptNotFoundErrorType\n  | ErrorType\n\n/**\n * Returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms.html#transaction-receipt) given a [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) hash.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransactionReceipt.html\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/fetching-transactions\n * - JSON-RPC Methods: [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactionreceipt)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionReceiptParameters}\n * @returns The transaction receipt. {@link GetTransactionReceiptReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransactionReceipt } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transactionReceipt = await getTransactionReceipt(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getTransactionReceipt<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  { hash }: GetTransactionReceiptParameters,\n) {\n  const receipt = await client.request({\n    method: 'eth_getTransactionReceipt',\n    params: [hash],\n  })\n\n  if (!receipt) throw new TransactionReceiptNotFoundError({ hash })\n\n  const format =\n    client.chain?.formatters?.transactionReceipt?.format ||\n    formatTransactionReceipt\n  return format(receipt) as GetTransactionReceiptReturnType<TChain>\n}\n"],"names":[],"mappings":";;;AAEA,OAAO,EACL,+BAA+B,GAEhC,MAAM,6BAA6B,CAAA;AAKpC,OAAO,EAEL,wBAAwB,GACzB,MAAM,8CAA8C,CAAA;;;AAwC9C,KAAK,UAAU,qBAAqB,CACzC,MAAiC,EACjC,EAAE,IAAI,EAAmC;IAEzC,MAAM,OAAO,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;QACnC,MAAM,EAAE,2BAA2B;QACnC,MAAM,EAAE;YAAC,IAAI;SAAC;KACf,CAAC,CAAA;IAEF,IAAI,CAAC,OAAO,EAAE,MAAM,sOAAI,kCAA+B,CAAC;QAAE,IAAI;IAAA,CAAE,CAAC,CAAA;IAEjE,MAAM,MAAM,GACV,MAAM,CAAC,KAAK,EAAE,UAAU,EAAE,kBAAkB,EAAE,MAAM,0PACpD,2BAAwB,CAAA;IAC1B,OAAO,MAAM,CAAC,OAAO,CAA4C,CAAA;AACnE,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7505, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7511, "column": 0}, "map": {"version":3,"file":"multicall.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/multicall.ts"],"sourcesContent":["import type { Address, Narrow } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { multicall3Abi } from '../../constants/abis.js'\nimport { AbiDecodingZeroDataError } from '../../errors/abi.js'\nimport { BaseError } from '../../errors/base.js'\nimport { RawContractError } from '../../errors/contract.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { ContractFunctionConfig } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type {\n  MulticallContracts,\n  MulticallResults,\n} from '../../types/multicall.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetChainContractAddressErrorType,\n  getChainContractAddress,\n} from '../../utils/chain/getChainContractAddress.js'\nimport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from '../../utils/errors/getContractError.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { getAction } from '../../utils/getAction.js'\nimport type { CallParameters } from './call.js'\nimport { type ReadContractErrorType, readContract } from './readContract.js'\n\nexport type MulticallParameters<\n  TContracts extends ContractFunctionConfig[] = ContractFunctionConfig[],\n  TAllowFailure extends boolean = true,\n> = Pick<CallParameters, 'blockNumber' | 'blockTag'> & {\n  allowFailure?: TAllowFailure\n  /** The maximum size (in bytes) for each calldata chunk. Set to `0` to disable the size limit. @default 1_024 */\n  batchSize?: number\n  contracts: Narrow<readonly [...MulticallContracts<TContracts>]>\n  multicallAddress?: Address\n}\n\nexport type MulticallReturnType<\n  TContracts extends ContractFunctionConfig[] = ContractFunctionConfig[],\n  TAllowFailure extends boolean = true,\n> = MulticallResults<TContracts, TAllowFailure>\n\nexport type MulticallErrorType =\n  | GetChainContractAddressErrorType\n  | ReadContractErrorType\n  | GetContractErrorReturnType<\n      EncodeFunctionDataErrorType | DecodeFunctionResultErrorType\n    >\n  | ErrorType\n\n/**\n * Similar to [`readContract`](https://viem.sh/docs/contract/readContract.html), but batches up multiple functions on a contract in a single RPC call via the [`multicall3` contract](https://github.com/mds1/multicall).\n *\n * - Docs: https://viem.sh/docs/contract/multicall.html\n *\n * @param client - Client to use\n * @param parameters - {@link MulticallParameters}\n * @returns An array of results with accompanying status. {@link MulticallReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { multicall } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const abi = parseAbi([\n *   'function balanceOf(address) view returns (uint256)',\n *   'function totalSupply() view returns (uint256)',\n * ])\n * const results = await multicall(client, {\n *   contracts: [\n *     {\n *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *       abi,\n *       functionName: 'balanceOf',\n *       args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n *     },\n *     {\n *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *       abi,\n *       functionName: 'totalSupply',\n *     },\n *   ],\n * })\n * // [{ result: 424122n, status: 'success' }, { result: 1000000n, status: 'success' }]\n */\nexport async function multicall<\n  TContracts extends ContractFunctionConfig[],\n  TChain extends Chain | undefined,\n  TAllowFailure extends boolean = true,\n>(\n  client: Client<Transport, TChain>,\n  args: MulticallParameters<TContracts, TAllowFailure>,\n): Promise<MulticallReturnType<TContracts, TAllowFailure>> {\n  const {\n    allowFailure = true,\n    batchSize: batchSize_,\n    blockNumber,\n    blockTag,\n    contracts,\n    multicallAddress: multicallAddress_,\n  } = args\n\n  const batchSize =\n    batchSize_ ??\n    ((typeof client.batch?.multicall === 'object' &&\n      client.batch.multicall.batchSize) ||\n      1_024)\n\n  let multicallAddress = multicallAddress_\n  if (!multicallAddress) {\n    if (!client.chain)\n      throw new Error(\n        'client chain not configured. multicallAddress is required.',\n      )\n\n    multicallAddress = getChainContractAddress({\n      blockNumber,\n      chain: client.chain,\n      contract: 'multicall3',\n    })\n  }\n\n  type Aggregate3Calls = {\n    allowFailure: boolean\n    callData: Hex\n    target: Address\n  }[]\n\n  const chunkedCalls: Aggregate3Calls[] = [[]]\n  let currentChunk = 0\n  let currentChunkSize = 0\n  for (let i = 0; i < contracts.length; i++) {\n    const { abi, address, args, functionName } = contracts[\n      i\n    ] as ContractFunctionConfig\n    try {\n      const callData = encodeFunctionData({\n        abi,\n        args,\n        functionName,\n      } as unknown as EncodeFunctionDataParameters)\n\n      currentChunkSize += (callData.length - 2) / 2\n      // Check to see if we need to create a new chunk.\n      if (\n        // Check if batching is enabled.\n        batchSize > 0 &&\n        // Check if the current size of the batch exceeds the size limit.\n        currentChunkSize > batchSize &&\n        // Check if the current chunk is not already empty.\n        chunkedCalls[currentChunk].length > 0\n      ) {\n        currentChunk++\n        currentChunkSize = (callData.length - 2) / 2\n        chunkedCalls[currentChunk] = []\n      }\n\n      chunkedCalls[currentChunk] = [\n        ...chunkedCalls[currentChunk],\n        {\n          allowFailure: true,\n          callData,\n          target: address,\n        },\n      ]\n    } catch (err) {\n      const error = getContractError(err as BaseError, {\n        abi,\n        address,\n        args,\n        docsPath: '/docs/contract/multicall',\n        functionName,\n      })\n      if (!allowFailure) throw error\n      chunkedCalls[currentChunk] = [\n        ...chunkedCalls[currentChunk],\n        {\n          allowFailure: true,\n          callData: '0x' as Hex,\n          target: address,\n        },\n      ]\n    }\n  }\n\n  const aggregate3Results = await Promise.allSettled(\n    chunkedCalls.map((calls) =>\n      getAction(\n        client,\n        readContract,\n        'readContract',\n      )({\n        abi: multicall3Abi,\n        address: multicallAddress!,\n        args: [calls],\n        blockNumber,\n        blockTag,\n        functionName: 'aggregate3',\n      }),\n    ),\n  )\n\n  const results = []\n  for (let i = 0; i < aggregate3Results.length; i++) {\n    const result = aggregate3Results[i]\n\n    // If an error occurred in a `readContract` invocation (ie. network error),\n    // then append the failure reason to each contract result.\n    if (result.status === 'rejected') {\n      if (!allowFailure) throw result.reason\n      for (let j = 0; j < chunkedCalls[i].length; j++) {\n        results.push({\n          status: 'failure',\n          error: result.reason,\n          result: undefined,\n        })\n      }\n      continue\n    }\n\n    // If the `readContract` call was successful, then decode the results.\n    const aggregate3Result = result.value\n    for (let j = 0; j < aggregate3Result.length; j++) {\n      // Extract the response from `readContract`\n      const { returnData, success } = aggregate3Result[j]\n\n      // Extract the request call data from the original call.\n      const { callData } = chunkedCalls[i][j]\n\n      // Extract the contract config for this call from the `contracts` argument\n      // for decoding.\n      const { abi, address, functionName, args } = contracts[\n        results.length\n      ] as ContractFunctionConfig\n\n      try {\n        if (callData === '0x') throw new AbiDecodingZeroDataError()\n        if (!success) throw new RawContractError({ data: returnData })\n        const result = decodeFunctionResult({\n          abi,\n          args,\n          data: returnData,\n          functionName,\n        })\n        results.push(allowFailure ? { result, status: 'success' } : result)\n      } catch (err) {\n        const error = getContractError(err as BaseError, {\n          abi,\n          address,\n          args,\n          docsPath: '/docs/contract/multicall',\n          functionName,\n        })\n        if (!allowFailure) throw error\n        results.push({ error, result: undefined, status: 'failure' })\n      }\n    }\n  }\n\n  if (results.length !== contracts.length)\n    throw new BaseError('multicall results mismatch')\n  return results as MulticallResults<TContracts, TAllowFailure>\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7667, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7673, "column": 0}, "map": {"version":3,"file":"sendRawTransaction.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/wallet/sendRawTransaction.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { TransactionSerialized } from '../../types/transaction.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type SendRawTransactionParameters = {\n  /**\n   * The signed serialized tranasction.\n   */\n  serializedTransaction: TransactionSerialized\n}\n\nexport type SendRawTransactionReturnType = Hash\n\nexport type SendRawTransactionErrorType = RequestErrorType | ErrorType\n\n/**\n * Sends a **signed** transaction to the network\n *\n * - Docs: https://viem.sh/docs/actions/wallet/sendRawTransaction.html\n * - JSON-RPC Method: [`eth_sendRawTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n *\n * @param client - Client to use\n * @param parameters - {@link SendRawTransactionParameters}\n * @returns The transaction hash. {@link SendRawTransactionReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { sendRawTransaction } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n *\n * const hash = await sendRawTransaction(client, {\n *   serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33'\n * })\n */\nexport async function sendRawTransaction<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  { serializedTransaction }: SendRawTransactionParameters,\n): Promise<SendRawTransactionReturnType> {\n  return client.request({\n    method: 'eth_sendRawTransaction',\n    params: [serializedTransaction],\n  })\n}\n"],"names":[],"mappings":"AAmBA;;;;;;;;;;;;;;;;;;;;;;;GAuBG;;;AACI,KAAK,UAAU,kBAAkB,CACtC,MAAiC,EACjC,EAAE,qBAAqB,EAAgC;IAEvD,OAAO,MAAM,CAAC,OAAO,CAAC;QACpB,MAAM,EAAE,wBAAwB;QAChC,MAAM,EAAE;YAAC,qBAAqB;SAAC;KAChC,CAAC,CAAA;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7707, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7713, "column": 0}, "map": {"version":3,"file":"simulateContract.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/simulateContract.ts"],"sourcesContent":["import type { Abi } from 'abitype'\n\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { BaseError } from '../../errors/base.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractFunctionConfig,\n  ContractFunctionResult,\n  GetValue,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport {\n  type DecodeFunctionResultErrorType,\n  type DecodeFunctionResultParameters,\n  decodeFunctionResult,\n} from '../../utils/abi/decodeFunctionResult.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport {\n  type GetContractErrorReturnType,\n  getContractError,\n} from '../../utils/errors/getContractError.js'\nimport type { WriteContractParameters } from '../wallet/writeContract.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { type CallErrorType, type CallParameters, call } from './call.js'\n\nexport type SimulateContractParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string = any,\n  TChain extends Chain | undefined = Chain | undefined,\n  TChainOverride extends Chain | undefined = Chain | undefined,\n> = {\n  chain?: TChainOverride\n  /** Data to append to the end of the calldata. Useful for adding a [\"domain\" tag](https://opensea.notion.site/opensea/Seaport-Order-Attributions-ec2d69bf455041a5baa490941aad307f). */\n  dataSuffix?: Hex\n} & ContractFunctionConfig<TAbi, TFunctionName, 'payable' | 'nonpayable'> &\n  UnionOmit<\n    CallParameters<TChainOverride extends Chain ? TChainOverride : TChain>,\n    'batch' | 'to' | 'data' | 'value'\n  > &\n  GetValue<\n    TAbi,\n    TFunctionName,\n    CallParameters<TChain> extends CallParameters\n      ? CallParameters<TChain>['value']\n      : CallParameters['value']\n  >\n\nexport type SimulateContractReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string = string,\n  TChain extends Chain | undefined = Chain | undefined,\n  TChainOverride extends Chain | undefined = Chain | undefined,\n> = {\n  result: ContractFunctionResult<TAbi, TFunctionName>\n  request: UnionOmit<\n    WriteContractParameters<\n      TAbi,\n      TFunctionName,\n      TChain,\n      undefined,\n      TChainOverride\n    >,\n    'chain' | 'functionName'\n  > & {\n    chain: TChainOverride\n    functionName: TFunctionName\n  } & ContractFunctionConfig<TAbi, TFunctionName, 'payable' | 'nonpayable'>\n}\n\nexport type SimulateContractErrorType =\n  | ParseAccountErrorType\n  | EncodeFunctionDataErrorType\n  | GetContractErrorReturnType<CallErrorType | DecodeFunctionResultErrorType>\n  | ErrorType\n\n/**\n * Simulates/validates a contract interaction. This is useful for retrieving **return data** and **revert reasons** of contract write functions.\n *\n * - Docs: https://viem.sh/docs/contract/simulateContract.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts/writing-to-contracts\n *\n * This function does not require gas to execute and _**does not**_ change the state of the blockchain. It is almost identical to [`readContract`](https://viem.sh/docs/contract/readContract.html), but also supports contract write functions.\n *\n * Internally, uses a [Public Client](https://viem.sh/docs/clients/public.html) to call the [`call` action](https://viem.sh/docs/actions/public/call.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n *\n * @param client - Client to use\n * @param parameters - {@link SimulateContractParameters}\n * @returns The simulation result and write request. {@link SimulateContractReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { simulateContract } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const result = await simulateContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint(uint32) view returns (uint32)']),\n *   functionName: 'mint',\n *   args: ['69420'],\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n */\nexport async function simulateContract<\n  TChain extends Chain | undefined,\n  const TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string,\n  TChainOverride extends Chain | undefined = undefined,\n>(\n  client: Client<Transport, TChain>,\n  {\n    abi,\n    address,\n    args,\n    dataSuffix,\n    functionName,\n    ...callRequest\n  }: SimulateContractParameters<TAbi, TFunctionName, TChain, TChainOverride>,\n): Promise<\n  SimulateContractReturnType<TAbi, TFunctionName, TChain, TChainOverride>\n> {\n  const account = callRequest.account\n    ? parseAccount(callRequest.account)\n    : undefined\n  const calldata = encodeFunctionData({\n    abi,\n    args,\n    functionName,\n  } as unknown as EncodeFunctionDataParameters<TAbi, TFunctionName>)\n  try {\n    const { data } = await getAction(\n      client,\n      call,\n      'call',\n    )({\n      batch: false,\n      data: `${calldata}${dataSuffix ? dataSuffix.replace('0x', '') : ''}`,\n      to: address,\n      ...callRequest,\n    } as unknown as CallParameters<TChain>)\n    const result = decodeFunctionResult({\n      abi,\n      args,\n      functionName,\n      data: data || '0x',\n    } as DecodeFunctionResultParameters)\n    return {\n      result,\n      request: {\n        abi,\n        address,\n        args,\n        dataSuffix,\n        functionName,\n        ...callRequest,\n      },\n    } as unknown as SimulateContractReturnType<\n      TAbi,\n      TFunctionName,\n      TChain,\n      TChainOverride\n    >\n  } catch (err) {\n    throw getContractError(err as BaseError, {\n      abi: abi as Abi,\n      address,\n      args,\n      docsPath: '/docs/contract/simulateContract',\n      functionName,\n      sender: account?.address,\n    })\n  }\n}\n"],"names":[],"mappings":";;;AAEA,OAAO,EAEL,YAAY,GACb,MAAM,sCAAsC,CAAA;AAiB7C,OAAO,EAGL,kBAAkB,GACnB,MAAM,uCAAuC,CAAA;AAQ9C,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAA;AACpD,OAAO,EAA2C,IAAI,EAAE,MAAM,WAAW,CAAA;AAlBzE,OAAO,EAGL,oBAAoB,GACrB,MAAM,yCAAyC,CAAA;AAMhD,OAAO,EAEL,gBAAgB,GACjB,MAAM,wCAAwC,CAAA;;;;;;;AAwFxC,KAAK,UAAU,gBAAgB,CAMpC,MAAiC,EACjC,EACE,GAAG,EACH,OAAO,EACP,IAAI,EACJ,UAAU,EACV,YAAY,EACZ,GAAG,WAAW,EAC0D;IAI1E,MAAM,OAAO,GAAG,WAAW,CAAC,OAAO,qPAC/B,eAAA,AAAY,EAAC,WAAW,CAAC,OAAO,CAAC,GACjC,SAAS,CAAA;IACb,MAAM,QAAQ,IAAG,uQAAA,AAAkB,EAAC;QAClC,GAAG;QACH,IAAI;QACJ,YAAY;KACmD,CAAC,CAAA;IAClE,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,GAAG,OAAM,8OAAA,AAAS,EAC9B,MAAM,wOACN,OAAI,EACJ,MAAM,CACP,CAAC;YACA,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,GAAG,QAAQ,GAAG,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;YACpE,EAAE,EAAE,OAAO;YACX,GAAG,WAAW;SACsB,CAAC,CAAA;QACvC,MAAM,MAAM,wPAAG,uBAAoB,AAApB,EAAqB;YAClC,GAAG;YACH,IAAI;YACJ,YAAY;YACZ,IAAI,EAAE,IAAI,IAAI,IAAI;SACe,CAAC,CAAA;QACpC,OAAO;YACL,MAAM;YACN,OAAO,EAAE;gBACP,GAAG;gBACH,OAAO;gBACP,IAAI;gBACJ,UAAU;gBACV,YAAY;gBACZ,GAAG,WAAW;aACf;SAMF,CAAA;KACF,CAAC,OAAO,GAAG,EAAE;QACZ,0PAAM,mBAAA,AAAgB,EAAC,GAAgB,EAAE;YACvC,GAAG,EAAE,GAAU;YACf,OAAO;YACP,IAAI;YACJ,QAAQ,EAAE,iCAAiC;YAC3C,YAAY;YACZ,MAAM,EAAE,OAAO,EAAE,OAAO;SACzB,CAAC,CAAA;KACH;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7770, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7776, "column": 0}, "map": {"version":3,"file":"strings.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/constants/strings.ts"],"sourcesContent":["export const presignMessagePrefix = '\\x19Ethereum Signed Message:\\n'\n"],"names":[],"mappings":";;;AAAO,MAAM,oBAAoB,GAAG,gCAAgC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 7780, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7786, "column": 0}, "map": {"version":3,"file":"hashMessage.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/signature/hashMessage.ts"],"sourcesContent":["import { presignMessagePrefix } from '../../constants/strings.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex, SignableMessage } from '../../types/misc.js'\nimport { type ConcatErrorType, concat } from '../data/concat.js'\nimport {\n  type StringToBytesErrorType,\n  type ToBytesErrorType,\n  stringToBytes,\n  toBytes,\n} from '../encoding/toBytes.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type HashMessage<TTo extends To> =\n  | (TTo extends 'bytes' ? ByteArray : never)\n  | (TTo extends 'hex' ? Hex : never)\n\nexport type HashMessageErrorType =\n  | ConcatErrorType\n  | Keccak256ErrorType\n  | StringToBytesErrorType\n  | ToBytesErrorType\n  | ErrorType\n\nexport function hashMessage<TTo extends To = 'hex'>(\n  message: SignableMessage,\n  to_?: TTo,\n): HashMessage<TTo> {\n  const messageBytes = (() => {\n    if (typeof message === 'string') return stringToBytes(message)\n    if (message.raw instanceof Uint8Array) return message.raw\n    return toBytes(message.raw)\n  })()\n  const prefixBytes = stringToBytes(\n    `${presignMessagePrefix}${messageBytes.length}`,\n  )\n  return keccak256(concat([prefixBytes, messageBytes]), to_)\n}\n"],"names":[],"mappings":";;;AAIA,OAAO,EAGL,aAAa,EACb,OAAO,GACR,MAAM,wBAAwB,CAAA;AAT/B,OAAO,EAAE,oBAAoB,EAAE,MAAM,4BAA4B,CAAA;AAUjE,OAAO,EAA2B,SAAS,EAAE,MAAM,sBAAsB,CAAA;AAPzE,OAAO,EAAwB,MAAM,EAAE,MAAM,mBAAmB,CAAA;;;;;AAsB1D,SAAU,WAAW,CACzB,OAAwB,EACxB,GAAS;IAET,MAAM,YAAY,GAAG,CAAC,GAAG,EAAE;QACzB,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE,oPAAO,gBAAA,AAAa,EAAC,OAAO,CAAC,CAAA;QAC9D,IAAI,OAAO,CAAC,GAAG,YAAY,UAAU,EAAE,OAAO,OAAO,CAAC,GAAG,CAAA;QACzD,oPAAO,UAAA,AAAO,EAAC,OAAO,CAAC,GAAG,CAAC,CAAA;IAC7B,CAAC,CAAC,EAAE,CAAA;IACJ,MAAM,WAAW,gPAAG,gBAAA,AAAa,EAC/B,oOAAG,uBAAoB,GAAG,YAAY,CAAC,MAAM,EAAE,CAChD,CAAA;IACD,kPAAO,YAAA,AAAS,0OAAC,SAAA,AAAM,EAAC;QAAC,WAAW;QAAE,YAAY;KAAC,CAAC,EAAE,GAAG,CAAC,CAAA;AAC5D,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7809, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7815, "column": 0}, "map": {"version":3,"file":"encodeDeployData.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/abi/encodeDeployData.ts"],"sourcesContent":["import type { Abi } from 'abitype'\n\nimport {\n  AbiConstructorNotFoundError,\n  type AbiConstructorNotFoundErrorType,\n  AbiConstructorParamsNotFoundError,\n} from '../../errors/abi.js'\nimport type { GetConstructorArgs } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\n\nconst docsPath = '/docs/contract/encodeDeployData'\n\nexport type EncodeDeployDataParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n> = {\n  abi: TAbi\n  bytecode: Hex\n} & GetConstructorArgs<TAbi>\n\nexport type EncodeDeployDataErrorType =\n  | AbiConstructorNotFoundErrorType\n  | ConcatHexErrorType\n  | EncodeAbiParametersErrorType\n  | ErrorType\n\nexport function encodeDeployData<const TAbi extends Abi | readonly unknown[]>({\n  abi,\n  args,\n  bytecode,\n}: EncodeDeployDataParameters<TAbi>) {\n  if (!args || args.length === 0) return bytecode\n\n  const description = (abi as Abi).find(\n    (x) => 'type' in x && x.type === 'constructor',\n  )\n  if (!description) throw new AbiConstructorNotFoundError({ docsPath })\n  if (!('inputs' in description))\n    throw new AbiConstructorParamsNotFoundError({ docsPath })\n  if (!description.inputs || description.inputs.length === 0)\n    throw new AbiConstructorParamsNotFoundError({ docsPath })\n\n  const data = encodeAbiParameters(\n    description.inputs,\n    args as readonly unknown[],\n  )\n  return concatHex([bytecode, data!])\n}\n"],"names":[],"mappings":";;;AAEA,OAAO,EACL,2BAA2B,EAE3B,iCAAiC,GAClC,MAAM,qBAAqB,CAAA;AAM5B,OAAO,EAEL,mBAAmB,GACpB,MAAM,0BAA0B,CAAA;AANjC,OAAO,EAA2B,SAAS,EAAE,MAAM,mBAAmB,CAAA;;;;AAQtE,MAAM,QAAQ,GAAG,iCAAiC,CAAA;AAe5C,SAAU,gBAAgB,CAA8C,EAC5E,GAAG,EACH,IAAI,EACJ,QAAQ,EACyB;IACjC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO,QAAQ,CAAA;IAE/C,MAAM,WAAW,GAAI,GAAW,CAAC,IAAI,CACnC,CAAC,CAAC,EAAE,CAAG,CAAD,KAAO,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,aAAa,CAC/C,CAAA;IACD,IAAI,CAAC,WAAW,EAAE,MAAM,8NAAI,8BAA2B,CAAC;QAAE,QAAQ;IAAA,CAAE,CAAC,CAAA;IACrE,IAAI,CAAC,CAAC,QAAQ,IAAI,WAAW,CAAC,EAC5B,MAAM,6NAAI,qCAAiC,CAAC;QAAE,QAAQ;IAAA,CAAE,CAAC,CAAA;IAC3D,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,WAAW,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,EACxD,MAAM,8NAAI,oCAAiC,CAAC;QAAE,QAAQ;IAAA,CAAE,CAAC,CAAA;IAE3D,MAAM,IAAI,uPAAG,sBAAA,AAAmB,EAC9B,WAAW,CAAC,MAAM,EAClB,IAA0B,CAC3B,CAAA;IACD,+OAAO,YAAA,AAAS,EAAC;QAAC,QAAQ;QAAE,IAAK;KAAC,CAAC,CAAA;AACrC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7843, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7849, "column": 0}, "map": {"version":3,"file":"contracts.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/constants/contracts.ts"],"sourcesContent":["export const universalSignatureValidatorByteCode =\n  '0x60806040523480156200001157600080fd5b50604051620007003803806200070083398101604081905262000034916200056f565b6000620000438484846200004f565b9050806000526001601ff35b600080846001600160a01b0316803b806020016040519081016040528181526000908060200190933c90507f6492649264926492649264926492649264926492649264926492649264926492620000a68462000451565b036200021f57600060608085806020019051810190620000c79190620005ce565b8651929550909350915060000362000192576000836001600160a01b031683604051620000f5919062000643565b6000604051808303816000865af19150503d806000811462000134576040519150601f19603f3d011682016040523d82523d6000602084013e62000139565b606091505b5050905080620001905760405162461bcd60e51b815260206004820152601e60248201527f5369676e617475726556616c696461746f723a206465706c6f796d656e74000060448201526064015b60405180910390fd5b505b604051630b135d3f60e11b808252906001600160a01b038a1690631626ba7e90620001c4908b90869060040162000661565b602060405180830381865afa158015620001e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200020891906200069d565b6001600160e01b031916149450505050506200044a565b805115620002b157604051630b135d3f60e11b808252906001600160a01b03871690631626ba7e9062000259908890889060040162000661565b602060405180830381865afa15801562000277573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200029d91906200069d565b6001600160e01b031916149150506200044a565b8251604114620003195760405162461bcd60e51b815260206004820152603a6024820152600080516020620006e083398151915260448201527f3a20696e76616c6964207369676e6174757265206c656e677468000000000000606482015260840162000187565b620003236200046b565b506020830151604080850151855186939260009185919081106200034b576200034b620006c9565b016020015160f81c9050601b81148015906200036b57508060ff16601c14155b15620003cf5760405162461bcd60e51b815260206004820152603b6024820152600080516020620006e083398151915260448201527f3a20696e76616c6964207369676e617475726520762076616c75650000000000606482015260840162000187565b6040805160008152602081018083528a905260ff83169181019190915260608101849052608081018390526001600160a01b038a169060019060a0016020604051602081039080840390855afa1580156200042e573d6000803e3d6000fd5b505050602060405103516001600160a01b031614955050505050505b9392505050565b60006020825110156200046357600080fd5b508051015190565b60405180606001604052806003906020820280368337509192915050565b6001600160a01b03811681146200049f57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620004d5578181015183820152602001620004bb565b50506000910152565b600082601f830112620004f057600080fd5b81516001600160401b03808211156200050d576200050d620004a2565b604051601f8301601f19908116603f01168101908282118183101715620005385762000538620004a2565b816040528381528660208588010111156200055257600080fd5b62000565846020830160208901620004b8565b9695505050505050565b6000806000606084860312156200058557600080fd5b8351620005928162000489565b6020850151604086015191945092506001600160401b03811115620005b657600080fd5b620005c486828701620004de565b9150509250925092565b600080600060608486031215620005e457600080fd5b8351620005f18162000489565b60208501519093506001600160401b03808211156200060f57600080fd5b6200061d87838801620004de565b935060408601519150808211156200063457600080fd5b50620005c486828701620004de565b6000825162000657818460208701620004b8565b9190910192915050565b828152604060208201526000825180604084015262000688816060850160208701620004b8565b601f01601f1916919091016060019392505050565b600060208284031215620006b057600080fd5b81516001600160e01b0319811681146200044a57600080fd5b634e487b7160e01b600052603260045260246000fdfe5369676e617475726556616c696461746f72237265636f7665725369676e6572'\n"],"names":[],"mappings":";;;AAAO,MAAM,mCAAmC,GAC9C,ogHAAogH,CAAA","ignoreList":[0]}},
    {"offset": {"line": 7853, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7859, "column": 0}, "map": {"version":3,"file":"isBytesEqual.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/data/isBytesEqual.ts"],"sourcesContent":["import { equalBytes } from '@noble/curves/abstract/utils'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\nimport { type IsHexErrorType, isHex } from './isHex.js'\n\nexport type IsBytesEqualErrorType =\n  | IsHexErrorType\n  | ToBytesErrorType\n  | ErrorType\n\nexport function isBytesEqual(a_: ByteArray | Hex, b_: ByteArray | Hex) {\n  const a = isHex(a_) ? toBytes(a_) : a_\n  const b = isHex(b_) ? toBytes(b_) : b_\n  return equalBytes(a, b)\n}\n"],"names":[],"mappings":";;;AAKA,OAAO,EAAuB,KAAK,EAAE,MAAM,YAAY,CAAA;AADvD,OAAO,EAAyB,OAAO,EAAE,MAAM,wBAAwB,CAAA;AAJvE,OAAO,EAAE,UAAU,EAAE,MAAM,8BAA8B,CAAA;;;;AAYnD,SAAU,YAAY,CAAC,EAAmB,EAAE,EAAmB;IACnE,MAAM,CAAC,0OAAG,QAAA,AAAK,EAAC,EAAE,CAAC,CAAC,CAAC,8OAAC,UAAO,AAAP,EAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAA;IACtC,MAAM,CAAC,0OAAG,QAAA,AAAK,EAAC,EAAE,CAAC,CAAC,CAAC,8OAAC,UAAA,AAAO,EAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAA;IACtC,uOAAO,aAAA,AAAU,EAAC,CAAC,EAAE,CAAC,CAAC,CAAA;AACzB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7873, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7879, "column": 0}, "map": {"version":3,"file":"verifyHash.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/verifyHash.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { universalSignatureValidatorAbi } from '../../constants/abis.js'\nimport { universalSignatureValidatorByteCode } from '../../constants/contracts.js'\nimport { CallExecutionError } from '../../errors/contract.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport type { EncodeDeployDataErrorType } from '../../utils/abi/encodeDeployData.js'\nimport {\n  type IsBytesEqualErrorType,\n  isBytesEqual,\n} from '../../utils/data/isBytesEqual.js'\nimport type { IsHexErrorType } from '../../utils/data/isHex.js'\nimport type { ToHexErrorType } from '../../utils/encoding/toHex.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { encodeDeployData, isHex, toHex } from '../../utils/index.js'\nimport { type CallErrorType, type CallParameters, call } from './call.js'\n\nexport type VerifyHashParameters = Pick<\n  CallParameters,\n  'blockNumber' | 'blockTag'\n> & {\n  /** The address that signed the original message. */\n  address: Address\n  /** The hash to be verified. */\n  hash: Hex\n  /** The signature that was generated by signing the message with the address's private key. */\n  signature: Hex | ByteArray\n}\n\nexport type VerifyHashReturnType = boolean\n\nexport type VerifyHashErrorType =\n  | CallErrorType\n  | IsHexErrorType\n  | ToHexErrorType\n  | IsBytesEqualErrorType\n  | EncodeDeployDataErrorType\n  | ErrorType\n\n/**\n * Verifies a message hash on chain using ERC-6492.\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifyHashParameters}\n * @returns Whether or not the signature is valid. {@link VerifyHashReturnType}\n */\nexport async function verifyHash<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  { address, hash, signature, ...callRequest }: VerifyHashParameters,\n): Promise<VerifyHashReturnType> {\n  const signatureHex = isHex(signature) ? signature : toHex(signature)\n\n  try {\n    const { data } = await getAction(\n      client,\n      call,\n      'call',\n    )({\n      data: encodeDeployData({\n        abi: universalSignatureValidatorAbi,\n        args: [address, hash, signatureHex],\n        bytecode: universalSignatureValidatorByteCode,\n      }),\n      ...callRequest,\n    } as unknown as CallParameters)\n\n    return isBytesEqual(data ?? '0x0', '0x1')\n  } catch (error) {\n    if (error instanceof CallExecutionError) {\n      // if the execution fails, the signature was not valid and an internal method inside of the validator reverted\n      // this can happen for many reasons, for example if signer can not be recovered from the signature\n      // or if the signature has no valid format\n      return false\n    }\n\n    throw error\n  }\n}\n"],"names":[],"mappings":";;;AAkBA,OAAO,EAAE,gBAAgB,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,sBAAsB,CAAA;;AADrE,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAA;AAEpD,OAAO,EAA2C,IAAI,EAAE,MAAM,WAAW,CAAA;;AAfzE,OAAO,EAAE,8BAA8B,EAAE,MAAM,yBAAyB,CAAA;AACxE,OAAO,EAAE,mCAAmC,EAAE,MAAM,8BAA8B,CAAA;AAMlF,OAAO,EAEL,YAAY,GACb,MAAM,kCAAkC,CAAA;AARzC,OAAO,EAAE,kBAAkB,EAAE,MAAM,0BAA0B,CAAA;;;;;;;;AA4CtD,KAAK,UAAU,UAAU,CAC9B,MAAiC,EACjC,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,WAAW,EAAwB;IAElE,MAAM,YAAY,0OAAG,QAAA,AAAK,EAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,4OAAC,QAAA,AAAK,EAAC,SAAS,CAAC,CAAA;IAEpE,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,GAAG,yOAAM,YAAA,AAAS,EAC9B,MAAM,wOACN,OAAI,EACJ,MAAM,CACP,CAAC;YACA,IAAI,mPAAE,mBAAA,AAAgB,EAAC;gBACrB,GAAG,gOAAE,iCAA8B;gBACnC,IAAI,EAAE;oBAAC,OAAO;oBAAE,IAAI;oBAAE,YAAY;iBAAC;gBACnC,QAAQ,qOAAE,sCAAmC;aAC9C,CAAC;YACF,GAAG,WAAW;SACc,CAAC,CAAA;QAE/B,qPAAO,eAAA,AAAY,EAAC,IAAI,IAAI,KAAK,EAAE,KAAK,CAAC,CAAA;KAC1C,CAAC,OAAO,KAAK,EAAE;QACd,IAAI,KAAK,2OAAY,qBAAkB,EAAE;YACvC,8GAA8G;YAC9G,kGAAkG;YAClG,0CAA0C;YAC1C,OAAO,KAAK,CAAA;SACb;QAED,MAAM,KAAK,CAAA;KACZ;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7924, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7930, "column": 0}, "map": {"version":3,"file":"verifyMessage.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/verifyMessage.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { ByteArray, Hex, SignableMessage } from '../../types/misc.js'\nimport { hashMessage } from '../../utils/index.js'\nimport type { HashMessageErrorType } from '../../utils/signature/hashMessage.js'\nimport {\n  type VerifyHashErrorType,\n  type VerifyHashParameters,\n  verifyHash,\n} from './verifyHash.js'\n\nexport type VerifyMessageParameters = Omit<VerifyHashParameters, 'hash'> & {\n  /** The address that signed the original message. */\n  address: Address\n  /** The message to be verified. */\n  message: SignableMessage\n  /** The signature that was generated by signing the message with the address's private key. */\n  signature: Hex | ByteArray\n}\n\nexport type VerifyMessageReturnType = boolean\n\nexport type VerifyMessageErrorType =\n  | HashMessageErrorType\n  | VerifyHashErrorType\n  | ErrorType\n\n/**\n * Verify that a message was signed by the provided address.\n *\n * Compatible with Smart Contract Accounts & Externally Owned Accounts via [ERC-6492](https://eips.ethereum.org/EIPS/eip-6492).\n *\n * - Docs {@link https://viem.sh/docs/actions/public/verifyMessage.html}\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifyMessageParameters}\n * @returns Whether or not the signature is valid. {@link VerifyMessageReturnType}\n */\nexport async function verifyMessage<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  { address, message, signature, ...callRequest }: VerifyMessageParameters,\n): Promise<VerifyMessageReturnType> {\n  const hash = hashMessage(message)\n  return verifyHash(client, {\n    address,\n    hash,\n    signature,\n    ...callRequest,\n  })\n}\n"],"names":[],"mappings":";;;AAOA,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAA;AAElD,OAAO,EAGL,UAAU,GACX,MAAM,iBAAiB,CAAA;;;AA6BjB,KAAK,UAAU,aAAa,CACjC,MAAiC,EACjC,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,WAAW,EAA2B;IAExE,MAAM,IAAI,qPAAG,cAAA,AAAW,EAAC,OAAO,CAAC,CAAA;IACjC,uPAAO,aAAA,AAAU,EAAC,MAAM,EAAE;QACxB,OAAO;QACP,IAAI;QACJ,SAAS;QACT,GAAG,WAAW;KACf,CAAC,CAAA;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 7946, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7952, "column": 0}, "map": {"version":3,"file":"regex.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/regex.ts"],"sourcesContent":["export const arrayRegex = /^(.*)\\[([0-9]*)\\]$/\n\n// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n// https://regexr.com/6va55\nexport const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/\n\n// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n// https://regexr.com/6v8hp\nexport const integerRegex =\n  /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/\n"],"names":[],"mappings":";;;;;AAAO,MAAM,UAAU,GAAG,oBAAoB,CAAA;AAIvC,MAAM,UAAU,GAAG,sCAAsC,CAAA;AAIzD,MAAM,YAAY,GACvB,gIAAgI,CAAA","ignoreList":[0]}},
    {"offset": {"line": 7960, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7966, "column": 0}, "map": {"version":3,"file":"typedData.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/typedData.ts"],"sourcesContent":["import type {\n  TypedData,\n  TypedDataDomain,\n  TypedDataParameter,\n  TypedDataType,\n} from 'abitype'\n\nimport { BytesSizeMismatchError } from '../errors/abi.js'\nimport { InvalidAddressError } from '../errors/address.js'\nimport type { Hex } from '../types/misc.js'\nimport type { TypedDataDefinition } from '../types/typedData.js'\n\nimport type { ErrorType } from '../errors/utils.js'\nimport { type IsAddressErrorType, isAddress } from './address/isAddress.js'\nimport { type SizeErrorType, size } from './data/size.js'\nimport { type NumberToHexErrorType, numberToHex } from './encoding/toHex.js'\nimport { bytesRegex, integerRegex } from './regex.js'\nimport {\n  type HashDomainErrorType,\n  hashDomain,\n} from './signature/hashTypedData.js'\n\nexport type ValidateTypedDataErrorType =\n  | HashDomainErrorType\n  | IsAddressErrorType\n  | NumberToHexErrorType\n  | SizeErrorType\n  | ErrorType\n\nexport function validateTypedData<\n  const TTypedData extends TypedData | { [key: string]: unknown },\n  TPrimaryType extends string = string,\n>({\n  domain,\n  message,\n  primaryType,\n  types: types_,\n}: TypedDataDefinition<TTypedData, TPrimaryType>) {\n  const types = types_ as TypedData\n\n  const validateData = (\n    struct: readonly TypedDataParameter[],\n    value_: Record<string, unknown>,\n  ) => {\n    for (const param of struct) {\n      const { name, type: type_ } = param\n      const type = type_ as TypedDataType\n      const value = value_[name]\n\n      const integerMatch = type.match(integerRegex)\n      if (\n        integerMatch &&\n        (typeof value === 'number' || typeof value === 'bigint')\n      ) {\n        const [_type, base, size_] = integerMatch\n        // If number cannot be cast to a sized hex value, it is out of range\n        // and will throw.\n        numberToHex(value, {\n          signed: base === 'int',\n          size: parseInt(size_) / 8,\n        })\n      }\n\n      if (type === 'address' && typeof value === 'string' && !isAddress(value))\n        throw new InvalidAddressError({ address: value })\n\n      const bytesMatch = type.match(bytesRegex)\n      if (bytesMatch) {\n        const [_type, size_] = bytesMatch\n        if (size_ && size(value as Hex) !== parseInt(size_))\n          throw new BytesSizeMismatchError({\n            expectedSize: parseInt(size_),\n            givenSize: size(value as Hex),\n          })\n      }\n\n      const struct = types[type]\n      if (struct) validateData(struct, value as Record<string, unknown>)\n    }\n  }\n\n  // Validate domain types.\n  if (types.EIP712Domain && domain) validateData(types.EIP712Domain, domain)\n\n  if (primaryType !== 'EIP712Domain') {\n    // Validate message types.\n    const type = types[primaryType]\n    validateData(type, message as Record<string, unknown>)\n  }\n}\n\nexport type GetTypesForEIP712DomainErrorType = ErrorType\n\nexport function getTypesForEIP712Domain({\n  domain,\n}: { domain?: TypedDataDomain }): TypedDataParameter[] {\n  return [\n    typeof domain?.name === 'string' && { name: 'name', type: 'string' },\n    domain?.version && { name: 'version', type: 'string' },\n    typeof domain?.chainId === 'number' && {\n      name: 'chainId',\n      type: 'uint256',\n    },\n    domain?.verifyingContract && {\n      name: 'verifyingContract',\n      type: 'address',\n    },\n    domain?.salt && { name: 'salt', type: 'bytes32' },\n  ].filter(Boolean) as TypedDataParameter[]\n}\n\nexport type DomainSeparatorErrorType =\n  | GetTypesForEIP712DomainErrorType\n  | HashDomainErrorType\n  | ErrorType\n\nexport function domainSeparator({ domain }: { domain: TypedDataDomain }): Hex {\n  return hashDomain({\n    domain,\n    types: {\n      EIP712Domain: getTypesForEIP712Domain({ domain }),\n    },\n  })\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8059, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8065, "column": 0}, "map": {"version":3,"file":"hashTypedData.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/signature/hashTypedData.ts"],"sourcesContent":["// Implementation forked and adapted from https://github.com/MetaMask/eth-sig-util/blob/main/src/sign-typed-data.ts\n\nimport type { AbiParameter, TypedData, TypedDataDomain } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from '../abi/encodeAbiParameters.js'\nimport { concat } from '../data/concat.js'\nimport { type ToHexErrorType, toHex } from '../encoding/toHex.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport {\n  type GetTypesForEIP712DomainErrorType,\n  type ValidateTypedDataErrorType,\n  getTypesForEIP712Domain,\n  validateTypedData,\n} from '../typedData.js'\n\ntype MessageTypeProperty = {\n  name: string\n  type: string\n}\n\nexport type HashTypedDataParameters<\n  TTypedData extends TypedData | { [key: string]: unknown } = TypedData,\n  TPrimaryType extends string = string,\n> = TypedDataDefinition<TTypedData, TPrimaryType>\n\nexport type HashTypedDataReturnType = Hex\n\nexport type HashTypedDataErrorType =\n  | GetTypesForEIP712DomainErrorType\n  | HashDomainErrorType\n  | HashStructErrorType\n  | ValidateTypedDataErrorType\n  | ErrorType\n\nexport function hashTypedData<\n  const TTypedData extends TypedData | { [key: string]: unknown },\n  TPrimaryType extends string = string,\n>({\n  domain: domain_,\n  message,\n  primaryType,\n  types: types_,\n}: HashTypedDataParameters<TTypedData, TPrimaryType>): HashTypedDataReturnType {\n  const domain: TypedDataDomain = typeof domain_ === 'undefined' ? {} : domain_\n  const types = {\n    EIP712Domain: getTypesForEIP712Domain({ domain }),\n    ...(types_ as TTypedData),\n  }\n\n  // Need to do a runtime validation check on addresses, byte ranges, integer ranges, etc\n  // as we can't statically check this with TypeScript.\n  validateTypedData({\n    domain,\n    message,\n    primaryType,\n    types,\n  } as TypedDataDefinition)\n\n  const parts: Hex[] = ['0x1901']\n  if (domain)\n    parts.push(\n      hashDomain({\n        domain,\n        types: types as Record<string, MessageTypeProperty[]>,\n      }),\n    )\n\n  if (primaryType !== 'EIP712Domain') {\n    parts.push(\n      hashStruct({\n        data: message,\n        primaryType: primaryType as string,\n        types: types as Record<string, MessageTypeProperty[]>,\n      }),\n    )\n  }\n\n  return keccak256(concat(parts))\n}\n\nexport type HashDomainErrorType = HashStructErrorType | ErrorType\n\nexport function hashDomain({\n  domain,\n  types,\n}: {\n  domain: TypedDataDomain\n  types: Record<string, MessageTypeProperty[]>\n}) {\n  return hashStruct({\n    data: domain,\n    primaryType: 'EIP712Domain',\n    types,\n  })\n}\n\ntype HashStructErrorType = EncodeDataErrorType | Keccak256ErrorType | ErrorType\n\nfunction hashStruct({\n  data,\n  primaryType,\n  types,\n}: {\n  data: Record<string, unknown>\n  primaryType: string\n  types: Record<string, MessageTypeProperty[]>\n}) {\n  const encoded = encodeData({\n    data,\n    primaryType,\n    types,\n  })\n  return keccak256(encoded)\n}\n\ntype EncodeDataErrorType =\n  | EncodeAbiParametersErrorType\n  | EncodeFieldErrorType\n  | HashTypeErrorType\n  | ErrorType\n\nfunction encodeData({\n  data,\n  primaryType,\n  types,\n}: {\n  data: Record<string, unknown>\n  primaryType: string\n  types: Record<string, MessageTypeProperty[]>\n}) {\n  const encodedTypes: AbiParameter[] = [{ type: 'bytes32' }]\n  const encodedValues: unknown[] = [hashType({ primaryType, types })]\n\n  for (const field of types[primaryType]) {\n    const [type, value] = encodeField({\n      types,\n      name: field.name,\n      type: field.type,\n      value: data[field.name],\n    })\n    encodedTypes.push(type)\n    encodedValues.push(value)\n  }\n\n  return encodeAbiParameters(encodedTypes, encodedValues)\n}\n\ntype HashTypeErrorType =\n  | ToHexErrorType\n  | EncodeTypeErrorType\n  | Keccak256ErrorType\n  | ErrorType\n\nfunction hashType({\n  primaryType,\n  types,\n}: {\n  primaryType: string\n  types: Record<string, MessageTypeProperty[]>\n}) {\n  const encodedHashType = toHex(encodeType({ primaryType, types }))\n  return keccak256(encodedHashType)\n}\n\ntype EncodeTypeErrorType = FindTypeDependenciesErrorType\n\nfunction encodeType({\n  primaryType,\n  types,\n}: {\n  primaryType: string\n  types: Record<string, MessageTypeProperty[]>\n}) {\n  let result = ''\n  const unsortedDeps = findTypeDependencies({ primaryType, types })\n  unsortedDeps.delete(primaryType)\n\n  const deps = [primaryType, ...Array.from(unsortedDeps).sort()]\n  for (const type of deps) {\n    result += `${type}(${types[type]\n      .map(({ name, type: t }) => `${t} ${name}`)\n      .join(',')})`\n  }\n\n  return result\n}\n\ntype FindTypeDependenciesErrorType = ErrorType\n\nfunction findTypeDependencies(\n  {\n    primaryType: primaryType_,\n    types,\n  }: {\n    primaryType: string\n    types: Record<string, MessageTypeProperty[]>\n  },\n  results: Set<string> = new Set(),\n): Set<string> {\n  const match = primaryType_.match(/^\\w*/u)\n  const primaryType = match?.[0]!\n  if (results.has(primaryType) || types[primaryType] === undefined) {\n    return results\n  }\n\n  results.add(primaryType)\n\n  for (const field of types[primaryType]) {\n    findTypeDependencies({ primaryType: field.type, types }, results)\n  }\n  return results\n}\n\ntype EncodeFieldErrorType =\n  | Keccak256ErrorType\n  | EncodeAbiParametersErrorType\n  | ToHexErrorType\n  | ErrorType\n\nfunction encodeField({\n  types,\n  name,\n  type,\n  value,\n}: {\n  types: Record<string, MessageTypeProperty[]>\n  name: string\n  type: string\n  value: any\n}): [type: AbiParameter, value: any] {\n  if (types[type] !== undefined) {\n    return [\n      { type: 'bytes32' },\n      keccak256(encodeData({ data: value, primaryType: type, types })),\n    ]\n  }\n\n  if (type === 'bytes') {\n    const prepend = value.length % 2 ? '0' : ''\n    value = `0x${prepend + value.slice(2)}`\n    return [{ type: 'bytes32' }, keccak256(value)]\n  }\n\n  if (type === 'string') return [{ type: 'bytes32' }, keccak256(toHex(value))]\n\n  if (type.lastIndexOf(']') === type.length - 1) {\n    const parsedType = type.slice(0, type.lastIndexOf('['))\n    const typeValuePairs = (value as [AbiParameter, any][]).map((item) =>\n      encodeField({\n        name,\n        type: parsedType,\n        types,\n        value: item,\n      }),\n    )\n    return [\n      { type: 'bytes32' },\n      keccak256(\n        encodeAbiParameters(\n          typeValuePairs.map(([t]) => t),\n          typeValuePairs.map(([, v]) => v),\n        ),\n      ),\n    ]\n  }\n\n  return [{ type }, value]\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8240, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8246, "column": 0}, "map": {"version":3,"file":"verifyTypedData.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/verifyTypedData.ts"],"sourcesContent":["import type { Address, TypedData } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\nimport {\n  type HashTypedDataErrorType,\n  hashTypedData,\n} from '../../utils/signature/hashTypedData.js'\nimport {\n  type VerifyHashErrorType,\n  type VerifyHashParameters,\n  verifyHash,\n} from './verifyHash.js'\n\nexport type VerifyTypedDataParameters<\n  TTypedData extends TypedData | { [key: string]: unknown } = TypedData,\n  TPrimaryType extends string = string,\n> = Omit<VerifyHashParameters, 'hash'> &\n  TypedDataDefinition<TTypedData, TPrimaryType> & {\n    /** The address to verify the typed data for. */\n    address: Address\n    /** The signature to verify */\n    signature: Hex | ByteArray\n  }\n\nexport type VerifyTypedDataReturnType = boolean\n\nexport type VerifyTypedDataErrorType =\n  | HashTypedDataErrorType\n  | VerifyHashErrorType\n  | ErrorType\n\n/**\n * Verify that typed data was signed by the provided address.\n *\n * - Docs {@link https://viem.sh/docs/actions/public/verifyTypedData.html}\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifyTypedDataParameters}\n * @returns Whether or not the signature is valid. {@link VerifyTypedDataReturnType}\n */\nexport async function verifyTypedData<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    address,\n    signature,\n    message,\n    primaryType,\n    types,\n    domain,\n    ...callRequest\n  }: VerifyTypedDataParameters,\n): Promise<VerifyTypedDataReturnType> {\n  const hash = hashTypedData({ message, primaryType, types, domain })\n  return verifyHash(client, {\n    address,\n    hash,\n    signature,\n    ...callRequest,\n  })\n}\n"],"names":[],"mappings":";;;AAQA,OAAO,EAEL,aAAa,GACd,MAAM,wCAAwC,CAAA;AAC/C,OAAO,EAGL,UAAU,GACX,MAAM,iBAAiB,CAAA;;;AA6BjB,KAAK,UAAU,eAAe,CACnC,MAAiC,EACjC,EACE,OAAO,EACP,SAAS,EACT,OAAO,EACP,WAAW,EACX,KAAK,EACL,MAAM,EACN,GAAG,WAAW,EACY;IAE5B,MAAM,IAAI,GAAG,oQAAA,AAAa,EAAC;QAAE,OAAO;QAAE,WAAW;QAAE,KAAK;QAAE,MAAM;IAAA,CAAE,CAAC,CAAA;IACnE,uPAAO,aAAA,AAAU,EAAC,MAAM,EAAE;QACxB,OAAO;QACP,IAAI;QACJ,SAAS;QACT,GAAG,WAAW;KACf,CAAC,CAAA;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 8267, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8273, "column": 0}, "map": {"version":3,"file":"uninstallFilter.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/uninstallFilter.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type UninstallFilterParameters = {\n  filter: Filter<any>\n}\nexport type UninstallFilterReturnType = boolean\n\nexport type UninstallFilterErrorType = RequestErrorType | ErrorType\n\n/**\n * Destroys a [`Filter`](https://viem.sh/docs/glossary/types.html#filter).\n *\n * - Docs: https://viem.sh/docs/actions/public/uninstallFilter.html\n * - JSON-RPC Methods: [`eth_uninstallFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_uninstallFilter)\n *\n * Destroys a Filter that was created from one of the following Actions:\n * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter.html)\n * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter.html)\n * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter.html)\n *\n * @param client - Client to use\n * @param parameters - {@link UninstallFilterParameters}\n * @returns A boolean indicating if the Filter was successfully uninstalled. {@link UninstallFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createPendingTransactionFilter, uninstallFilter } from 'viem/public'\n *\n * const filter = await createPendingTransactionFilter(client)\n * const uninstalled = await uninstallFilter(client, { filter })\n * // true\n */\nexport async function uninstallFilter<\n  TTransport extends Transport,\n  TChain extends Chain | undefined,\n>(\n  _client: Client<TTransport, TChain>,\n  { filter }: UninstallFilterParameters,\n): Promise<UninstallFilterReturnType> {\n  return filter.request({\n    method: 'eth_uninstallFilter',\n    params: [filter.id],\n  })\n}\n"],"names":[],"mappings":"AAcA;;;;;;;;;;;;;;;;;;;;;;;GAuBG;;;AACI,KAAK,UAAU,eAAe,CAInC,OAAmC,EACnC,EAAE,MAAM,EAA6B;IAErC,OAAO,MAAM,CAAC,OAAO,CAAC;QACpB,MAAM,EAAE,qBAAqB;QAC7B,MAAM,EAAE;YAAC,MAAM,CAAC,EAAE;SAAC;KACpB,CAAC,CAAA;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 8307, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8313, "column": 0}, "map": {"version":3,"file":"observe.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/observe.ts"],"sourcesContent":["import type { ErrorType } from '../errors/utils.js'\nimport type { MaybePromise } from '../types/utils.js'\n\ntype Callback = ((...args: any[]) => any) | undefined\ntype Callbacks = Record<string, Callback>\n\nexport type ObserveErrorType = ErrorType\n\nexport const listenersCache = /*#__PURE__*/ new Map<\n  string,\n  { id: number; fns: Callbacks }[]\n>()\nexport const cleanupCache = /*#__PURE__*/ new Map<string, () => void>()\n\ntype EmitFunction<TCallbacks extends Callbacks> = (\n  emit: TCallbacks,\n) => MaybePromise<void | (() => void)>\n\nlet callbackCount = 0\n\n/**\n * @description Sets up an observer for a given function. If another function\n * is set up under the same observer id, the function will only be called once\n * for both instances of the observer.\n */\nexport function observe<TCallbacks extends Callbacks>(\n  observerId: string,\n  callbacks: TCallbacks,\n  fn: EmitFunction<TCallbacks>,\n) {\n  const callbackId = ++callbackCount\n\n  const getListeners = () => listenersCache.get(observerId) || []\n\n  const unsubscribe = () => {\n    const listeners = getListeners()\n    listenersCache.set(\n      observerId,\n      listeners.filter((cb: any) => cb.id !== callbackId),\n    )\n  }\n\n  const unwatch = () => {\n    const cleanup = cleanupCache.get(observerId)\n    if (getListeners().length === 1 && cleanup) cleanup()\n    unsubscribe()\n  }\n\n  const listeners = getListeners()\n  listenersCache.set(observerId, [\n    ...listeners,\n    { id: callbackId, fns: callbacks },\n  ])\n\n  if (listeners && listeners.length > 0) return unwatch\n\n  const emit: TCallbacks = {} as TCallbacks\n  for (const key in callbacks) {\n    emit[key] = ((\n      ...args: Parameters<NonNullable<TCallbacks[keyof TCallbacks]>>\n    ) => {\n      const listeners = getListeners()\n      if (listeners.length === 0) return\n      for (const listener of listeners) listener.fns[key]?.(...args)\n    }) as TCallbacks[Extract<keyof TCallbacks, string>]\n  }\n\n  const cleanup = fn(emit)\n  if (typeof cleanup === 'function') cleanupCache.set(observerId, cleanup)\n\n  return unwatch\n}\n"],"names":[],"mappings":";;;;;AAQO,MAAM,cAAc,GAAG,WAAA,EAAa,CAAC,IAAI,GAAG,EAGhD,CAAA;AACI,MAAM,YAAY,GAAG,WAAA,EAAa,CAAC,IAAI,GAAG,EAAsB,CAAA;AAMvE,IAAI,aAAa,GAAG,CAAC,CAAA;AAOf,SAAU,OAAO,CACrB,UAAkB,EAClB,SAAqB,EACrB,EAA4B;IAE5B,MAAM,UAAU,GAAG,EAAE,aAAa,CAAA;IAElC,MAAM,YAAY,GAAG,GAAG,CAAG,CAAD,aAAe,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAA;IAE/D,MAAM,WAAW,GAAG,GAAG,EAAE;QACvB,MAAM,SAAS,GAAG,YAAY,EAAE,CAAA;QAChC,cAAc,CAAC,GAAG,CAChB,UAAU,EACV,SAAS,CAAC,MAAM,CAAC,CAAC,EAAO,EAAE,CAAG,CAAD,CAAG,CAAC,EAAE,KAAK,UAAU,CAAC,CACpD,CAAA;IACH,CAAC,CAAA;IAED,MAAM,OAAO,GAAG,GAAG,EAAE;QACnB,MAAM,OAAO,GAAG,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAA;QAC5C,IAAI,YAAY,EAAE,CAAC,MAAM,KAAK,CAAC,IAAI,OAAO,EAAE,OAAO,EAAE,CAAA;QACrD,WAAW,EAAE,CAAA;IACf,CAAC,CAAA;IAED,MAAM,SAAS,GAAG,YAAY,EAAE,CAAA;IAChC,cAAc,CAAC,GAAG,CAAC,UAAU,EAAE;WAC1B,SAAS;QACZ;YAAE,EAAE,EAAE,UAAU;YAAE,GAAG,EAAE,SAAS;QAAA,CAAE;KACnC,CAAC,CAAA;IAEF,IAAI,SAAS,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,OAAO,OAAO,CAAA;IAErD,MAAM,IAAI,GAAe,CAAA,CAAgB,CAAA;IACzC,IAAK,MAAM,GAAG,IAAI,SAAS,CAAE;QAC3B,IAAI,CAAC,GAAG,CAAC,GAAG,AAAC,CACX,GAAG,IAA2D,EAC9D,EAAE;YACF,MAAM,SAAS,GAAG,YAAY,EAAE,CAAA;YAChC,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE,OAAM;YAClC,KAAK,MAAM,QAAQ,IAAI,SAAS,CAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAA;QAChE,CAAC,CAAkD,CAAA;KACpD;IAED,MAAM,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,CAAA;IACxB,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE,YAAY,CAAC,GAAG,CAAC,UAAU,EAAE,OAAO,CAAC,CAAA;IAExE,OAAO,OAAO,CAAA;AAChB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 8354, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8360, "column": 0}, "map": {"version":3,"file":"wait.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/wait.ts"],"sourcesContent":["export async function wait(time: number) {\n  return new Promise((res) => setTimeout(res, time))\n}\n"],"names":[],"mappings":";;;AAAO,KAAK,UAAU,IAAI,CAAC,IAAY;IACrC,OAAO,IAAI,OAAO,CAAC,CAAC,GAAG,EAAE,CAAG,CAAD,SAAW,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAA;AACpD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 8366, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8372, "column": 0}, "map": {"version":3,"file":"poll.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/poll.ts"],"sourcesContent":["import type { ErrorType } from '../errors/utils.js'\nimport { wait } from './wait.js'\n\ntype PollOptions<TData> = {\n  // Whether or not to emit when the polling starts.\n  emitOnBegin?: boolean\n  // The initial wait time (in ms) before polling.\n  initialWaitTime?: (data: TData | void) => Promise<number>\n  // The interval (in ms).\n  interval: number\n}\n\nexport type PollErrorType = ErrorType\n\n/**\n * @description Polls a function at a specified interval.\n */\nexport function poll<TData>(\n  fn: ({ unpoll }: { unpoll: () => void }) => Promise<TData | void>,\n  { emitOnBegin, initialWaitTime, interval }: PollOptions<TData>,\n) {\n  let active = true\n\n  const unwatch = () => (active = false)\n\n  const watch = async () => {\n    let data: TData | void = undefined\n    if (emitOnBegin) data = await fn({ unpoll: unwatch })\n\n    const initialWait = (await initialWaitTime?.(data)) ?? interval\n    await wait(initialWait)\n\n    const poll = async () => {\n      if (!active) return\n      await fn({ unpoll: unwatch })\n      await wait(interval)\n      poll()\n    }\n\n    poll()\n  }\n  watch()\n\n  return unwatch\n}\n"],"names":[],"mappings":";;;AACA,OAAO,EAAE,IAAI,EAAE,MAAM,WAAW,CAAA;;AAgB1B,SAAU,IAAI,CAClB,EAAiE,EACjE,EAAE,WAAW,EAAE,eAAe,EAAE,QAAQ,EAAsB;IAE9D,IAAI,MAAM,GAAG,IAAI,CAAA;IAEjB,MAAM,OAAO,GAAG,GAAG,CAAI,CAAF,CAAC,IAAO,GAAG,KAAK,CAAC,CAAA;IAEtC,MAAM,KAAK,GAAG,KAAK,IAAI,EAAE;QACvB,IAAI,IAAI,GAAiB,SAAS,CAAA;QAClC,IAAI,WAAW,EAAE,IAAI,GAAG,MAAM,EAAE,CAAC;YAAE,MAAM,EAAE,OAAO;QAAA,CAAE,CAAC,CAAA;QAErD,MAAM,WAAW,GAAG,AAAC,MAAM,eAAe,EAAE,CAAC,IAAI,CAAC,CAAC,GAAI,QAAQ,CAAA;QAC/D,OAAM,oOAAA,AAAI,EAAC,WAAW,CAAC,CAAA;QAEvB,MAAM,IAAI,GAAG,KAAK,IAAI,EAAE;YACtB,IAAI,CAAC,MAAM,EAAE,OAAM;YACnB,MAAM,EAAE,CAAC;gBAAE,MAAM,EAAE,OAAO;YAAA,CAAE,CAAC,CAAA;YAC7B,oOAAM,OAAA,AAAI,EAAC,QAAQ,CAAC,CAAA;YACpB,IAAI,EAAE,CAAA;QACR,CAAC,CAAA;QAED,IAAI,EAAE,CAAA;IACR,CAAC,CAAA;IACD,KAAK,EAAE,CAAA;IAEP,OAAO,OAAO,CAAA;AAChB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 8400, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8406, "column": 0}, "map": {"version":3,"file":"watchBlockNumber.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/watchBlockNumber.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { GetTransportConfig } from '../../types/transport.js'\nimport { hexToBigInt } from '../../utils/encoding/fromHex.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { observe } from '../../utils/observe.js'\nimport { type PollErrorType, poll } from '../../utils/poll.js'\nimport { stringify } from '../../utils/stringify.js'\n\nimport {\n  type GetBlockNumberReturnType,\n  getBlockNumber,\n} from './getBlockNumber.js'\n\nexport type OnBlockNumberParameter = GetBlockNumberReturnType\nexport type OnBlockNumberFn = (\n  blockNumber: OnBlockNumberParameter,\n  prevBlockNumber: OnBlockNumberParameter | undefined,\n) => void\n\nexport type PollOptions = {\n  /** Whether or not to emit the missed block numbers to the callback. */\n  emitMissed?: boolean\n  /** Whether or not to emit the latest block number to the callback when the subscription opens. */\n  emitOnBegin?: boolean\n  /** Polling frequency (in ms). Defaults to Client's pollingInterval config. */\n  pollingInterval?: number\n}\n\nexport type WatchBlockNumberParameters<\n  TTransport extends Transport = Transport,\n> = {\n  /** The callback to call when a new block number is received. */\n  onBlockNumber: OnBlockNumberFn\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: (error: Error) => void\n} & (GetTransportConfig<TTransport>['type'] extends 'webSocket'\n  ?\n      | {\n          emitMissed?: never\n          emitOnBegin?: never\n          /** Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`. */\n          poll?: false\n          pollingInterval?: never\n        }\n      | (PollOptions & { poll: true })\n  : PollOptions & { poll?: true })\n\nexport type WatchBlockNumberReturnType = () => void\n\nexport type WatchBlockNumberErrorType = PollErrorType | ErrorType\n\n/**\n * Watches and returns incoming block numbers.\n *\n * - Docs: https://viem.sh/docs/actions/public/watchBlockNumber.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks/watching-blocks\n * - JSON-RPC Methods:\n *   - When `poll: true`, calls [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber) on a polling interval.\n *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchBlockNumberParameters}\n * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlockNumberReturnType}\n *\n * @example\n * import { createPublicClient, watchBlockNumber, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchBlockNumber(client, {\n *   onBlockNumber: (blockNumber) => console.log(blockNumber),\n * })\n */\nexport function watchBlockNumber<\n  TChain extends Chain | undefined,\n  TTransport extends Transport,\n>(\n  client: Client<TTransport, TChain>,\n  {\n    emitOnBegin = false,\n    emitMissed = false,\n    onBlockNumber,\n    onError,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n  }: WatchBlockNumberParameters<TTransport>,\n): WatchBlockNumberReturnType {\n  const enablePolling =\n    typeof poll_ !== 'undefined' ? poll_ : client.transport.type !== 'webSocket'\n\n  let prevBlockNumber: GetBlockNumberReturnType | undefined\n\n  const pollBlockNumber = () => {\n    const observerId = stringify([\n      'watchBlockNumber',\n      client.uid,\n      emitOnBegin,\n      emitMissed,\n      pollingInterval,\n    ])\n\n    return observe(observerId, { onBlockNumber, onError }, (emit) =>\n      poll(\n        async () => {\n          try {\n            const blockNumber = await getAction(\n              client,\n              getBlockNumber,\n              'getBlockNumber',\n            )({ cacheTime: 0 })\n\n            if (prevBlockNumber) {\n              // If the current block number is the same as the previous,\n              // we can skip.\n              if (blockNumber === prevBlockNumber) return\n\n              // If we have missed out on some previous blocks, and the\n              // `emitMissed` flag is truthy, let's emit those blocks.\n              if (blockNumber - prevBlockNumber > 1 && emitMissed) {\n                for (let i = prevBlockNumber + 1n; i < blockNumber; i++) {\n                  emit.onBlockNumber(i, prevBlockNumber)\n                  prevBlockNumber = i\n                }\n              }\n            }\n\n            // If the next block number is greater than the previous,\n            // it is not in the past, and we can emit the new block number.\n            if (!prevBlockNumber || blockNumber > prevBlockNumber) {\n              emit.onBlockNumber(blockNumber, prevBlockNumber)\n              prevBlockNumber = blockNumber\n            }\n          } catch (err) {\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin,\n          interval: pollingInterval,\n        },\n      ),\n    )\n  }\n\n  const subscribeBlockNumber = () => {\n    let active = true\n    let unsubscribe = () => (active = false)\n    ;(async () => {\n      try {\n        const { unsubscribe: unsubscribe_ } = await client.transport.subscribe({\n          params: ['newHeads'],\n          onData(data: any) {\n            if (!active) return\n            const blockNumber = hexToBigInt(data.result?.number)\n            onBlockNumber(blockNumber, prevBlockNumber)\n            prevBlockNumber = blockNumber\n          },\n          onError(error: Error) {\n            onError?.(error)\n          },\n        })\n        unsubscribe = unsubscribe_\n        if (!active) unsubscribe()\n      } catch (err) {\n        onError?.(err as Error)\n      }\n    })()\n    return unsubscribe\n  }\n\n  return enablePolling ? pollBlockNumber() : subscribeBlockNumber()\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8496, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8502, "column": 0}, "map": {"version":3,"file":"withRetry.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/promise/withRetry.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport { wait } from '../wait.js'\n\nexport type WithRetryErrorType = ErrorType\n\nexport function withRetry<TData>(\n  fn: () => Promise<TData>,\n  {\n    delay: delay_ = 100,\n    retryCount = 2,\n    shouldRetry = () => true,\n  }: {\n    // The delay (in ms) between retries.\n    delay?: ((config: { count: number; error: Error }) => number) | number\n    // The max number of times to retry.\n    retryCount?: number\n    // Whether or not to retry when an error is thrown.\n    shouldRetry?: ({\n      count,\n      error,\n    }: {\n      count: number\n      error: Error\n    }) => Promise<boolean> | boolean\n  } = {},\n) {\n  return new Promise<TData>((resolve, reject) => {\n    const attemptRetry = async ({ count = 0 } = {}) => {\n      const retry = async ({ error }: { error: Error }) => {\n        const delay =\n          typeof delay_ === 'function' ? delay_({ count, error }) : delay_\n        if (delay) await wait(delay)\n        attemptRetry({ count: count + 1 })\n      }\n\n      try {\n        const data = await fn()\n        resolve(data)\n      } catch (err) {\n        if (\n          count < retryCount &&\n          (await shouldRetry({ count, error: err as Error }))\n        )\n          return retry({ error: err as Error })\n        reject(err)\n      }\n    }\n    attemptRetry()\n  })\n}\n"],"names":[],"mappings":";;;AACA,OAAO,EAAE,IAAI,EAAE,MAAM,YAAY,CAAA;;AAI3B,SAAU,SAAS,CACvB,EAAwB,EACxB,EACE,KAAK,EAAE,MAAM,GAAG,GAAG,EACnB,UAAU,GAAG,CAAC,EACd,WAAW,GAAG,GAAG,CAAG,CAAD,GAAK,EAAA,GActB,CAAA,CAAE;IAEN,OAAO,IAAI,OAAO,CAAQ,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QAC5C,MAAM,YAAY,GAAG,KAAK,EAAE,EAAE,KAAK,GAAG,CAAC,EAAE,GAAG,CAAA,CAAE,EAAE,EAAE;YAChD,MAAM,KAAK,GAAG,KAAK,EAAE,EAAE,KAAK,EAAoB,EAAE,EAAE;gBAClD,MAAM,KAAK,GACT,OAAO,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC;oBAAE,KAAK;oBAAE,KAAK;gBAAA,CAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAA;gBAClE,IAAI,KAAK,EAAE,oOAAM,OAAA,AAAI,EAAC,KAAK,CAAC,CAAA;gBAC5B,YAAY,CAAC;oBAAE,KAAK,EAAE,KAAK,GAAG,CAAC;gBAAA,CAAE,CAAC,CAAA;YACpC,CAAC,CAAA;YAED,IAAI;gBACF,MAAM,IAAI,GAAG,MAAM,EAAE,EAAE,CAAA;gBACvB,OAAO,CAAC,IAAI,CAAC,CAAA;aACd,CAAC,OAAO,GAAG,EAAE;gBACZ,IACE,KAAK,GAAG,UAAU,IACjB,MAAM,WAAW,CAAC;oBAAE,KAAK;oBAAE,KAAK,EAAE,GAAY;gBAAA,CAAE,CAAC,CAAC,CAEnD,OAAO,KAAK,CAAC;oBAAE,KAAK,EAAE,GAAY;gBAAA,CAAE,CAAC,CAAA;gBACvC,MAAM,CAAC,GAAG,CAAC,CAAA;aACZ;QACH,CAAC,CAAA;QACD,YAAY,EAAE,CAAA;IAChB,CAAC,CAAC,CAAA;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 8536, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8542, "column": 0}, "map": {"version":3,"file":"waitForTransactionReceipt.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/waitForTransactionReceipt.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { BlockNotFoundError } from '../../errors/block.js'\nimport {\n  TransactionNotFoundError,\n  TransactionReceiptNotFoundError,\n  WaitForTransactionReceiptTimeoutError,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { Transaction } from '../../types/transaction.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { type ObserveErrorType, observe } from '../../utils/observe.js'\nimport { withRetry } from '../../utils/promise/withRetry.js'\nimport { stringify } from '../../utils/stringify.js'\n\nimport { type GetBlockErrorType, getBlock } from './getBlock.js'\nimport {\n  type GetTransactionErrorType,\n  type GetTransactionReturnType,\n  getTransaction,\n} from './getTransaction.js'\nimport {\n  type GetTransactionReceiptErrorType,\n  type GetTransactionReceiptReturnType,\n  getTransactionReceipt,\n} from './getTransactionReceipt.js'\nimport {\n  type WatchBlockNumberErrorType,\n  watchBlockNumber,\n} from './watchBlockNumber.js'\n\nexport type ReplacementReason = 'cancelled' | 'replaced' | 'repriced'\nexport type ReplacementReturnType<\n  TChain extends Chain | undefined = Chain | undefined,\n> = {\n  reason: ReplacementReason\n  replacedTransaction: Transaction\n  transaction: Transaction\n  transactionReceipt: GetTransactionReceiptReturnType<TChain>\n}\n\nexport type WaitForTransactionReceiptReturnType<\n  TChain extends Chain | undefined = Chain | undefined,\n> = GetTransactionReceiptReturnType<TChain>\n\nexport type WaitForTransactionReceiptParameters<\n  TChain extends Chain | undefined = Chain | undefined,\n> = {\n  /**\n   * The number of confirmations (blocks that have passed) to wait before resolving.\n   * @default 1\n   */\n  confirmations?: number\n  /** The hash of the transaction. */\n  hash: Hash\n  /** Optional callback to emit if the transaction has been replaced. */\n  onReplaced?: (response: ReplacementReturnType<TChain>) => void\n  /**\n   * Polling frequency (in ms). Defaults to the client's pollingInterval config.\n   * @default client.pollingInterval\n   */\n  pollingInterval?: number\n  /** Optional timeout (in milliseconds) to wait before stopping polling. */\n  timeout?: number\n}\n\nexport type WaitForTransactionReceiptErrorType =\n  | ObserveErrorType\n  | GetBlockErrorType\n  | GetTransactionErrorType\n  | GetTransactionReceiptErrorType\n  | WatchBlockNumberErrorType\n  | ErrorType\n\n/**\n * Waits for the [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) to be included on a [Block](https://viem.sh/docs/glossary/terms.html#block) (one confirmation), and then returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms.html#transaction-receipt). If the Transaction reverts, then the action will throw an error.\n *\n * - Docs: https://viem.sh/docs/actions/public/waitForTransactionReceipt.html\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/sending-transactions\n * - JSON-RPC Methods:\n *   - Polls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt) on each block until it has been processed.\n *   - If a Transaction has been replaced:\n *     - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) and extracts the transactions\n *     - Checks if one of the Transactions is a replacement\n *     - If so, calls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt).\n *\n * The `waitForTransactionReceipt` action additionally supports Replacement detection (e.g. sped up Transactions).\n *\n * Transactions can be replaced when a user modifies their transaction in their wallet (to speed up or cancel). Transactions are replaced when they are sent from the same nonce.\n *\n * There are 3 types of Transaction Replacement reasons:\n *\n * - `repriced`: The gas price has been modified (e.g. different `maxFeePerGas`)\n * - `cancelled`: The Transaction has been cancelled (e.g. `value === 0n`)\n * - `replaced`: The Transaction has been replaced (e.g. different `value` or `data`)\n *\n * @param client - Client to use\n * @param parameters - {@link WaitForTransactionReceiptParameters}\n * @returns The transaction receipt. {@link WaitForTransactionReceiptReturnType}\n *\n * @example\n * import { createPublicClient, waitForTransactionReceipt, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transactionReceipt = await waitForTransactionReceipt(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function waitForTransactionReceipt<\n  TChain extends Chain | undefined,\n>(\n  client: Client<Transport, TChain>,\n  {\n    confirmations = 1,\n    hash,\n    onReplaced,\n    pollingInterval = client.pollingInterval,\n    timeout,\n  }: WaitForTransactionReceiptParameters<TChain>,\n): Promise<WaitForTransactionReceiptReturnType<TChain>> {\n  const observerId = stringify(['waitForTransactionReceipt', client.uid, hash])\n\n  let transaction: GetTransactionReturnType<TChain> | undefined\n  let replacedTransaction: GetTransactionReturnType<TChain> | undefined\n  let receipt: GetTransactionReceiptReturnType<TChain>\n  let retrying = false\n\n  return new Promise((resolve, reject) => {\n    if (timeout)\n      setTimeout(\n        () => reject(new WaitForTransactionReceiptTimeoutError({ hash })),\n        timeout,\n      )\n\n    const _unobserve = observe(\n      observerId,\n      { onReplaced, resolve, reject },\n      (emit) => {\n        const _unwatch = getAction(\n          client,\n          watchBlockNumber,\n          'watchBlockNumber',\n        )({\n          emitMissed: true,\n          emitOnBegin: true,\n          poll: true,\n          pollingInterval,\n          async onBlockNumber(blockNumber_) {\n            if (retrying) return\n\n            let blockNumber = blockNumber_\n\n            const done = (fn: () => void) => {\n              _unwatch()\n              fn()\n              _unobserve()\n            }\n\n            try {\n              // If we already have a valid receipt, let's check if we have enough\n              // confirmations. If we do, then we can resolve.\n              if (receipt) {\n                if (\n                  confirmations > 1 &&\n                  (!receipt.blockNumber ||\n                    blockNumber - receipt.blockNumber + 1n < confirmations)\n                )\n                  return\n\n                done(() => emit.resolve(receipt))\n                return\n              }\n\n              // Get the transaction to check if it's been replaced.\n              // We need to retry as some RPC Providers may be slow to sync\n              // up mined transactions.\n              if (!transaction) {\n                retrying = true\n                await withRetry(\n                  async () => {\n                    transaction = (await getAction(\n                      client,\n                      getTransaction,\n                      'getTransaction',\n                    )({ hash })) as GetTransactionReturnType<TChain>\n                    if (transaction.blockNumber)\n                      blockNumber = transaction.blockNumber\n                  },\n                  {\n                    // exponential backoff\n                    delay: ({ count }) => ~~(1 << count) * 200,\n                    retryCount: 6,\n                  },\n                )\n                retrying = false\n              }\n\n              // Get the receipt to check if it's been processed.\n              receipt = await getAction(\n                client,\n                getTransactionReceipt,\n                'getTransactionReceipt',\n              )({ hash })\n\n              // Check if we have enough confirmations. If not, continue polling.\n              if (\n                confirmations > 1 &&\n                (!receipt.blockNumber ||\n                  blockNumber - receipt.blockNumber + 1n < confirmations)\n              )\n                return\n\n              done(() => emit.resolve(receipt))\n            } catch (err) {\n              // If the receipt is not found, the transaction will be pending.\n              // We need to check if it has potentially been replaced.\n              if (\n                transaction &&\n                (err instanceof TransactionNotFoundError ||\n                  err instanceof TransactionReceiptNotFoundError)\n              ) {\n                try {\n                  replacedTransaction = transaction\n\n                  // Let's retrieve the transactions from the current block.\n                  // We need to retry as some RPC Providers may be slow to sync\n                  // up mined blocks.\n                  retrying = true\n                  const block = await withRetry(\n                    () =>\n                      getAction(\n                        client,\n                        getBlock,\n                        'getBlock',\n                      )({\n                        blockNumber,\n                        includeTransactions: true,\n                      }),\n                    {\n                      // exponential backoff\n                      delay: ({ count }) => ~~(1 << count) * 200,\n                      retryCount: 6,\n                      shouldRetry: ({ error }) =>\n                        error instanceof BlockNotFoundError,\n                    },\n                  )\n                  retrying = false\n\n                  const replacementTransaction = (\n                    block.transactions as {} as Transaction[]\n                  ).find(\n                    ({ from, nonce }) =>\n                      from === replacedTransaction!.from &&\n                      nonce === replacedTransaction!.nonce,\n                  )\n\n                  // If we couldn't find a replacement transaction, continue polling.\n                  if (!replacementTransaction) return\n\n                  // If we found a replacement transaction, return it's receipt.\n                  receipt = await getAction(\n                    client,\n                    getTransactionReceipt,\n                    'getTransactionReceipt',\n                  )({\n                    hash: replacementTransaction.hash,\n                  })\n\n                  // Check if we have enough confirmations. If not, continue polling.\n                  if (\n                    confirmations > 1 &&\n                    (!receipt.blockNumber ||\n                      blockNumber - receipt.blockNumber + 1n < confirmations)\n                  )\n                    return\n\n                  let reason: ReplacementReason = 'replaced'\n                  if (\n                    replacementTransaction.to === replacedTransaction.to &&\n                    replacementTransaction.value === replacedTransaction.value\n                  ) {\n                    reason = 'repriced'\n                  } else if (\n                    replacementTransaction.from === replacementTransaction.to &&\n                    replacementTransaction.value === 0n\n                  ) {\n                    reason = 'cancelled'\n                  }\n\n                  done(() => {\n                    emit.onReplaced?.({\n                      reason,\n                      replacedTransaction: replacedTransaction!,\n                      transaction: replacementTransaction,\n                      transactionReceipt: receipt,\n                    })\n                    emit.resolve(receipt)\n                  })\n                } catch (err_) {\n                  done(() => emit.reject(err_))\n                }\n              } else {\n                done(() => emit.reject(err))\n              }\n            }\n          },\n        })\n      },\n    )\n  })\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8685, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8691, "column": 0}, "map": {"version":3,"file":"watchBlocks.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/watchBlocks.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { GetTransportConfig } from '../../types/transport.js'\nimport { formatBlock } from '../../utils/formatters/block.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { observe } from '../../utils/observe.js'\nimport { type PollErrorType, poll } from '../../utils/poll.js'\nimport { type StringifyErrorType, stringify } from '../../utils/stringify.js'\n\nimport { type GetBlockReturnType, getBlock } from './getBlock.js'\n\nexport type OnBlockParameter<\n  TChain extends Chain | undefined = Chain,\n  TIncludeTransactions extends boolean = false,\n  TBlockTag extends BlockTag = 'latest',\n> = GetBlockReturnType<TChain, TIncludeTransactions, TBlockTag>\n\nexport type OnBlock<\n  TChain extends Chain | undefined = Chain,\n  TIncludeTransactions extends boolean = false,\n  TBlockTag extends BlockTag = 'latest',\n> = (\n  block: OnBlockParameter<TChain, TIncludeTransactions, TBlockTag>,\n  prevBlock:\n    | OnBlockParameter<TChain, TIncludeTransactions, TBlockTag>\n    | undefined,\n) => void\n\ntype PollOptions<\n  TIncludeTransactions extends boolean = false,\n  TBlockTag extends BlockTag = 'latest',\n> = {\n  /** The block tag. Defaults to \"latest\". */\n  blockTag?: TBlockTag | BlockTag\n  /** Whether or not to emit the missed blocks to the callback. */\n  emitMissed?: boolean\n  /** Whether or not to emit the block to the callback when the subscription opens. */\n  emitOnBegin?: boolean\n  /** Whether or not to include transaction data in the response. */\n  includeTransactions?: TIncludeTransactions\n  /** Polling frequency (in ms). Defaults to the client's pollingInterval config. */\n  pollingInterval?: number\n}\n\nexport type WatchBlocksParameters<\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain,\n  TIncludeTransactions extends boolean = false,\n  TBlockTag extends BlockTag = 'latest',\n> = {\n  /** The callback to call when a new block is received. */\n  onBlock: OnBlock<TChain, TIncludeTransactions, TBlockTag>\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: (error: Error) => void\n} & (GetTransportConfig<TTransport>['type'] extends 'webSocket'\n  ?\n      | {\n          blockTag?: never\n          emitMissed?: never\n          emitOnBegin?: never\n          includeTransactions?: never\n          /** Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`. */\n          poll?: false\n          pollingInterval?: never\n        }\n      | (PollOptions<TIncludeTransactions, TBlockTag> & { poll?: true })\n  : PollOptions<TIncludeTransactions, TBlockTag> & { poll?: true })\n\nexport type WatchBlocksReturnType = () => void\n\nexport type WatchBlocksErrorType =\n  | StringifyErrorType\n  | PollErrorType\n  | ErrorType\n\n/**\n * Watches and returns information for incoming blocks.\n *\n * - Docs: https://viem.sh/docs/actions/public/watchBlocks.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks/watching-blocks\n * - JSON-RPC Methods:\n *   - When `poll: true`, calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getBlockByNumber) on a polling interval.\n *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchBlocksParameters}\n * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlocksReturnType}\n *\n * @example\n * import { createPublicClient, watchBlocks, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchBlocks(client, {\n *   onBlock: (block) => console.log(block),\n * })\n */\nexport function watchBlocks<\n  TTransport extends Transport,\n  TChain extends Chain | undefined,\n  TIncludeTransactions extends boolean = false,\n  TBlockTag extends BlockTag = 'latest',\n>(\n  client: Client<TTransport, TChain>,\n  {\n    blockTag = 'latest',\n    emitMissed = false,\n    emitOnBegin = false,\n    onBlock,\n    onError,\n    includeTransactions: includeTransactions_,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n  }: WatchBlocksParameters<TTransport, TChain, TIncludeTransactions, TBlockTag>,\n): WatchBlocksReturnType {\n  const enablePolling =\n    typeof poll_ !== 'undefined' ? poll_ : client.transport.type !== 'webSocket'\n  const includeTransactions = includeTransactions_ ?? false\n\n  let prevBlock:\n    | GetBlockReturnType<TChain, false | TIncludeTransactions, 'latest'>\n    | undefined\n\n  const pollBlocks = () => {\n    const observerId = stringify([\n      'watchBlocks',\n      client.uid,\n      emitMissed,\n      emitOnBegin,\n      includeTransactions,\n      pollingInterval,\n    ])\n\n    return observe(observerId, { onBlock, onError }, (emit) =>\n      poll(\n        async () => {\n          try {\n            const block = await getAction(\n              client,\n              getBlock,\n              'getBlock',\n            )({\n              blockTag,\n              includeTransactions,\n            })\n            if (block.number && prevBlock?.number) {\n              // If the current block number is the same as the previous,\n              // we can skip.\n              if (block.number === prevBlock.number) return\n\n              // If we have missed out on some previous blocks, and the\n              // `emitMissed` flag is truthy, let's emit those blocks.\n              if (block.number - prevBlock.number > 1 && emitMissed) {\n                for (let i = prevBlock?.number + 1n; i < block.number; i++) {\n                  const block = (await getAction(\n                    client,\n                    getBlock,\n                    'getBlock',\n                  )({\n                    blockNumber: i,\n                    includeTransactions,\n                  })) as GetBlockReturnType<TChain>\n                  emit.onBlock(block as any, prevBlock as any)\n                  prevBlock = block\n                }\n              }\n            }\n\n            if (\n              // If no previous block exists, emit.\n              !prevBlock?.number ||\n              // If the block tag is \"pending\" with no block number, emit.\n              (blockTag === 'pending' && !block?.number) ||\n              // If the next block number is greater than the previous block number, emit.\n              // We don't want to emit blocks in the past.\n              (block.number && block.number > prevBlock.number)\n            ) {\n              emit.onBlock(block as any, prevBlock as any)\n              prevBlock = block as any\n            }\n          } catch (err) {\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin,\n          interval: pollingInterval,\n        },\n      ),\n    )\n  }\n\n  const subscribeBlocks = () => {\n    let active = true\n    let unsubscribe = () => (active = false)\n    ;(async () => {\n      try {\n        const { unsubscribe: unsubscribe_ } = await client.transport.subscribe({\n          params: ['newHeads'],\n          onData(data: any) {\n            if (!active) return\n            const format =\n              client.chain?.formatters?.block?.format || formatBlock\n            const block = format(data.result)\n            onBlock(block, prevBlock as any)\n            prevBlock = block\n          },\n          onError(error: Error) {\n            onError?.(error)\n          },\n        })\n        unsubscribe = unsubscribe_\n        if (!active) unsubscribe()\n      } catch (err) {\n        onError?.(err as Error)\n      }\n    })()\n    return unsubscribe\n  }\n\n  return enablePolling ? pollBlocks() : subscribeBlocks()\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8788, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8794, "column": 0}, "map": {"version":3,"file":"watchContractEvent.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/watchContractEvent.ts"],"sourcesContent":["import type { Abi, Address, ExtractAbiEvent } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { GetEventArgs, InferEventName } from '../../types/contract.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Log } from '../../types/log.js'\nimport type { GetTransportConfig } from '../../types/transport.js'\n\nimport { type ObserveErrorType, observe } from '../../utils/observe.js'\nimport { poll } from '../../utils/poll.js'\nimport { type StringifyErrorType, stringify } from '../../utils/stringify.js'\n\nimport {\n  DecodeLogDataMismatch,\n  DecodeLogTopicsMismatch,\n} from '../../errors/abi.js'\nimport { InvalidInputRpcError } from '../../errors/rpc.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { LogTopic } from '../../types/misc.js'\nimport { decodeEventLog } from '../../utils/abi/decodeEventLog.js'\nimport {\n  type EncodeEventTopicsParameters,\n  encodeEventTopics,\n} from '../../utils/abi/encodeEventTopics.js'\nimport { formatLog } from '../../utils/formatters/log.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type CreateContractEventFilterParameters,\n  createContractEventFilter,\n} from './createContractEventFilter.js'\nimport { getBlockNumber } from './getBlockNumber.js'\nimport {\n  type GetContractEventsParameters,\n  getContractEvents,\n} from './getContractEvents.js'\nimport { getFilterChanges } from './getFilterChanges.js'\nimport { uninstallFilter } from './uninstallFilter.js'\n\ntype PollOptions = {\n  /**\n   * Whether or not the transaction hashes should be batched on each invocation.\n   * @default true\n   */\n  batch?: boolean\n  /**\n   * Polling frequency (in ms). Defaults to Client's pollingInterval config.\n   * @default client.pollingInterval\n   */\n  pollingInterval?: number\n}\n\nexport type WatchContractEventOnLogsParameter<\n  TAbi extends Abi | readonly unknown[] = readonly unknown[],\n  TEventName extends string = string,\n  TStrict extends boolean | undefined = undefined,\n> = TAbi extends Abi\n  ? Log<bigint, number, false, ExtractAbiEvent<TAbi, TEventName>, TStrict>[]\n  : Log[]\nexport type WatchContractEventOnLogsFn<\n  TAbi extends Abi | readonly unknown[] = readonly unknown[],\n  TEventName extends string = string,\n  TStrict extends boolean | undefined = undefined,\n> = (logs: WatchContractEventOnLogsParameter<TAbi, TEventName, TStrict>) => void\n\nexport type WatchContractEventParameters<\n  TAbi extends Abi | readonly unknown[] = readonly unknown[],\n  TEventName extends string = string,\n  TStrict extends boolean | undefined = undefined,\n> = {\n  /** The address of the contract. */\n  address?: Address | Address[]\n  /** Contract ABI. */\n  abi: TAbi\n  args?: GetEventArgs<TAbi, TEventName>\n  /** Contract event. */\n  eventName?: InferEventName<TAbi, TEventName>\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: (error: Error) => void\n  /** The callback to call when new event logs are received. */\n  onLogs: WatchContractEventOnLogsFn<TAbi, TEventName, TStrict>\n  /**\n   * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n   * @default false\n   */\n  strict?: TStrict\n} & (GetTransportConfig<Transport>['type'] extends 'webSocket'\n  ?\n      | {\n          batch?: never\n          /**\n           * Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`.\n           * @default false\n           */\n          poll?: false\n          pollingInterval?: never\n        }\n      | (PollOptions & {\n          /**\n           * Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`.\n           * @default true\n           */\n          poll?: true\n        })\n  : PollOptions & {\n      poll?: true\n    })\n\nexport type WatchContractEventReturnType = () => void\n\nexport type WatchContractEventErrorType =\n  | StringifyErrorType\n  | ObserveErrorType\n  | ErrorType\n\n/**\n * Watches and returns emitted contract event logs.\n *\n * - Docs: https://viem.sh/docs/contract/watchContractEvent.html\n *\n * This Action will batch up all the event logs found within the [`pollingInterval`](https://viem.sh/docs/contract/watchContractEvent.html#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/contract/watchContractEvent.html#onLogs).\n *\n * `watchContractEvent` will attempt to create an [Event Filter](https://viem.sh/docs/contract/createContractEventFilter.html) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchContractEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs) instead.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchContractEventParameters}\n * @returns A function that can be invoked to stop watching for new event logs. {@link WatchContractEventReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchContractEvent } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchContractEvent(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['event Transfer(address indexed from, address indexed to, uint256 value)']),\n *   eventName: 'Transfer',\n *   args: { from: '0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b' },\n *   onLogs: (logs) => console.log(logs),\n * })\n */\nexport function watchContractEvent<\n  TChain extends Chain | undefined,\n  const TAbi extends Abi | readonly unknown[],\n  TEventName extends string,\n  TStrict extends boolean | undefined = undefined,\n>(\n  client: Client<Transport, TChain>,\n  {\n    abi,\n    address,\n    args,\n    batch = true,\n    eventName,\n    onError,\n    onLogs,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n    strict: strict_,\n  }: WatchContractEventParameters<TAbi, TEventName, TStrict>,\n): WatchContractEventReturnType {\n  const enablePolling =\n    typeof poll_ !== 'undefined' ? poll_ : client.transport.type !== 'webSocket'\n\n  const pollContractEvent = () => {\n    const observerId = stringify([\n      'watchContractEvent',\n      address,\n      args,\n      batch,\n      client.uid,\n      eventName,\n      pollingInterval,\n    ])\n    const strict = strict_ ?? false\n\n    return observe(observerId, { onLogs, onError }, (emit) => {\n      let previousBlockNumber: bigint\n      let filter: Filter<'event', TAbi, TEventName> | undefined\n      let initialized = false\n\n      const unwatch = poll(\n        async () => {\n          if (!initialized) {\n            try {\n              filter = (await getAction(\n                client,\n                createContractEventFilter,\n                'createContractEventFilter',\n              )({\n                abi,\n                address,\n                args,\n                eventName,\n                strict,\n              } as unknown as CreateContractEventFilterParameters)) as Filter<\n                'event',\n                TAbi,\n                TEventName\n              >\n            } catch {}\n            initialized = true\n            return\n          }\n\n          try {\n            let logs: Log[]\n            if (filter) {\n              logs = await getAction(\n                client,\n                getFilterChanges,\n                'getFilterChanges',\n              )({ filter })\n            } else {\n              // If the filter doesn't exist, we will fall back to use `getLogs`.\n              // The fall back exists because some RPC Providers do not support filters.\n\n              // Fetch the block number to use for `getLogs`.\n              const blockNumber = await getAction(\n                client,\n                getBlockNumber,\n                'getBlockNumber',\n              )({})\n\n              // If the block number has changed, we will need to fetch the logs.\n              // If the block number doesn't exist, we are yet to reach the first poll interval,\n              // so do not emit any logs.\n              if (previousBlockNumber && previousBlockNumber !== blockNumber) {\n                logs = await getAction(\n                  client,\n                  getContractEvents,\n                  'getContractEvents',\n                )({\n                  abi,\n                  address,\n                  args,\n                  eventName,\n                  fromBlock: previousBlockNumber + 1n,\n                  toBlock: blockNumber,\n                  strict,\n                } as {} as GetContractEventsParameters)\n              } else {\n                logs = []\n              }\n              previousBlockNumber = blockNumber\n            }\n\n            if (logs.length === 0) return\n            if (batch) emit.onLogs(logs as any)\n            else for (const log of logs) emit.onLogs([log] as any)\n          } catch (err) {\n            // If a filter has been set and gets uninstalled, providers will throw an InvalidInput error.\n            // Reinitalize the filter when this occurs\n            if (filter && err instanceof InvalidInputRpcError)\n              initialized = false\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin: true,\n          interval: pollingInterval,\n        },\n      )\n\n      return async () => {\n        if (filter)\n          await getAction(\n            client,\n            uninstallFilter,\n            'uninstallFilter',\n          )({ filter })\n        unwatch()\n      }\n    })\n  }\n\n  const subscribeContractEvent = () => {\n    let active = true\n    let unsubscribe = () => (active = false)\n    ;(async () => {\n      try {\n        const topics: LogTopic[] = eventName\n          ? encodeEventTopics({\n              abi: abi,\n              eventName: eventName,\n              args,\n            } as EncodeEventTopicsParameters)\n          : []\n\n        const { unsubscribe: unsubscribe_ } = await client.transport.subscribe({\n          params: ['logs', { address, topics }],\n          onData(data: any) {\n            if (!active) return\n            const log = data.result\n            try {\n              const { eventName, args } = decodeEventLog({\n                abi: abi,\n                data: log.data,\n                topics: log.topics as any,\n                strict: strict_,\n              })\n              const formatted = formatLog(log, {\n                args,\n                eventName: eventName as string,\n              })\n              onLogs([formatted] as any)\n            } catch (err) {\n              let eventName\n              let isUnnamed\n              if (\n                err instanceof DecodeLogDataMismatch ||\n                err instanceof DecodeLogTopicsMismatch\n              ) {\n                // If strict mode is on, and log data/topics do not match event definition, skip.\n                if (strict_) return\n                eventName = err.abiItem.name\n                isUnnamed = err.abiItem.inputs?.some(\n                  (x) => !('name' in x && x.name),\n                )\n              }\n\n              // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n              const formatted = formatLog(log, {\n                args: isUnnamed ? [] : {},\n                eventName,\n              })\n              onLogs([formatted] as any)\n            }\n          },\n          onError(error: Error) {\n            onError?.(error)\n          },\n        })\n        unsubscribe = unsubscribe_\n        if (!active) unsubscribe()\n      } catch (err) {\n        onError?.(err as Error)\n      }\n    })()\n    return unsubscribe\n  }\n\n  return enablePolling ? pollContractEvent() : subscribeContractEvent()\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8979, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8985, "column": 0}, "map": {"version":3,"file":"watchEvent.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/watchEvent.ts"],"sourcesContent":["import type { Abi, AbiEvent, Address } from 'abitype'\n\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  MaybeAbiEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Log } from '../../types/log.js'\nimport type { LogTopic } from '../../types/misc.js'\nimport type { GetTransportConfig } from '../../types/transport.js'\nimport type { EncodeEventTopicsParameters } from '../../utils/index.js'\nimport { type ObserveErrorType, observe } from '../../utils/observe.js'\nimport { poll } from '../../utils/poll.js'\nimport { type StringifyErrorType, stringify } from '../../utils/stringify.js'\n\nimport {\n  DecodeLogDataMismatch,\n  DecodeLogTopicsMismatch,\n} from '../../errors/abi.js'\nimport { InvalidInputRpcError } from '../../errors/rpc.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  decodeEventLog,\n  encodeEventTopics,\n  formatLog,\n} from '../../utils/index.js'\nimport {\n  type CreateEventFilterParameters,\n  createEventFilter,\n} from './createEventFilter.js'\nimport { getBlockNumber } from './getBlockNumber.js'\nimport { getFilterChanges } from './getFilterChanges.js'\nimport { type GetLogsParameters, getLogs } from './getLogs.js'\nimport { uninstallFilter } from './uninstallFilter.js'\n\ntype PollOptions = {\n  /**\n   * Whether or not the transaction hashes should be batched on each invocation.\n   * @default true\n   */\n  batch?: boolean\n  /**\n   * Polling frequency (in ms). Defaults to Client's pollingInterval config.\n   * @default client.pollingInterval\n   */\n  pollingInterval?: number\n}\n\nexport type WatchEventOnLogsParameter<\n  TAbiEvent extends AbiEvent | undefined = undefined,\n  TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  TEventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n> = Log<bigint, number, false, TAbiEvent, TStrict, TAbiEvents, TEventName>[]\nexport type WatchEventOnLogsFn<\n  TAbiEvent extends AbiEvent | undefined = undefined,\n  TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  _EventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n> = (\n  logs: WatchEventOnLogsParameter<TAbiEvent, TAbiEvents, TStrict, _EventName>,\n) => void\n\nexport type WatchEventParameters<\n  TAbiEvent extends AbiEvent | undefined = undefined,\n  TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  _EventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n> = {\n  /** The address of the contract. */\n  address?: Address | Address[]\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: (error: Error) => void\n  /** The callback to call when new event logs are received. */\n  onLogs: WatchEventOnLogsFn<TAbiEvent, TAbiEvents, TStrict, _EventName>\n} & (GetTransportConfig<Transport>['type'] extends 'webSocket'\n  ?\n      | {\n          batch?: never\n          /**\n           * Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`.\n           * @default false\n           */\n          poll?: false\n          pollingInterval?: never\n        }\n      | (PollOptions & {\n          /**\n           * Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`.\n           * @default true\n           */\n          poll?: true\n        })\n  : PollOptions & {\n      poll?: true\n    }) &\n  (\n    | {\n        event: TAbiEvent\n        events?: never\n        args?: MaybeExtractEventArgsFromAbi<TAbiEvents, _EventName>\n        /**\n         * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n         * @default false\n         */\n        strict?: TStrict\n      }\n    | {\n        event?: never\n        events?: TAbiEvents\n        args?: never\n        /**\n         * Whether or not the logs must match the indexed/non-indexed arguments on `event`.\n         * @default false\n         */\n        strict?: TStrict\n      }\n    | {\n        event?: never\n        events?: never\n        args?: never\n        strict?: never\n      }\n  )\n\nexport type WatchEventReturnType = () => void\n\nexport type WatchEventErrorType =\n  | StringifyErrorType\n  | ObserveErrorType\n  | ErrorType\n\n/**\n * Watches and returns emitted [Event Logs](https://viem.sh/docs/glossary/terms.html#event-log).\n *\n * - Docs: https://viem.sh/docs/actions/public/watchEvent.html\n * - JSON-RPC Methods:\n *   - **RPC Provider supports `eth_newFilter`:**\n *     - Calls [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter) to create a filter (called on initialize).\n *     - On a polling interval, it will call [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges).\n *   - **RPC Provider does not support `eth_newFilter`:**\n *     - Calls [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs) for each block between the polling interval.\n *\n * This Action will batch up all the Event Logs found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchEvent.html#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/actions/public/watchEvent.html#onLogs).\n *\n * `watchEvent` will attempt to create an [Event Filter](https://viem.sh/docs/actions/public/createEventFilter.html) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs.html) instead.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchEventParameters}\n * @returns A function that can be invoked to stop watching for new Event Logs. {@link WatchEventReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchEvent } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchEvent(client, {\n *   onLogs: (logs) => console.log(logs),\n * })\n */\nexport function watchEvent<\n  TChain extends Chain | undefined,\n  const TAbiEvent extends AbiEvent | undefined = undefined,\n  const TAbiEvents extends\n    | readonly AbiEvent[]\n    | readonly unknown[]\n    | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n  TStrict extends boolean | undefined = undefined,\n  _EventName extends string | undefined = undefined,\n>(\n  client: Client<Transport, TChain>,\n  {\n    address,\n    args,\n    batch = true,\n    event,\n    events,\n    onError,\n    onLogs,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n    strict: strict_,\n  }: WatchEventParameters<TAbiEvent, TAbiEvents, TStrict>,\n): WatchEventReturnType {\n  const enablePolling =\n    typeof poll_ !== 'undefined' ? poll_ : client.transport.type !== 'webSocket'\n  const strict = strict_ ?? false\n\n  const pollEvent = () => {\n    const observerId = stringify([\n      'watchEvent',\n      address,\n      args,\n      batch,\n      client.uid,\n      event,\n      pollingInterval,\n    ])\n\n    return observe(observerId, { onLogs, onError }, (emit) => {\n      let previousBlockNumber: bigint\n      let filter: Filter<'event', TAbiEvents, _EventName, any>\n      let initialized = false\n\n      const unwatch = poll(\n        async () => {\n          if (!initialized) {\n            try {\n              filter = (await getAction(\n                client,\n                createEventFilter as any,\n                'createEventFilter',\n              )({\n                address,\n                args,\n                event: event!,\n                events,\n                strict,\n              } as unknown as CreateEventFilterParameters)) as unknown as Filter<\n                'event',\n                TAbiEvents,\n                _EventName\n              >\n            } catch {}\n            initialized = true\n            return\n          }\n\n          try {\n            let logs: Log[]\n            if (filter) {\n              logs = await getAction(\n                client,\n                getFilterChanges,\n                'getFilterChanges',\n              )({ filter })\n            } else {\n              // If the filter doesn't exist, we will fall back to use `getLogs`.\n              // The fall back exists because some RPC Providers do not support filters.\n\n              // Fetch the block number to use for `getLogs`.\n              const blockNumber = await getAction(\n                client,\n                getBlockNumber,\n                'getBlockNumber',\n              )({})\n\n              // If the block number has changed, we will need to fetch the logs.\n              // If the block number doesn't exist, we are yet to reach the first poll interval,\n              // so do not emit any logs.\n              if (previousBlockNumber && previousBlockNumber !== blockNumber) {\n                logs = await getAction(\n                  client,\n                  getLogs,\n                  'getLogs',\n                )({\n                  address,\n                  args,\n                  event: event!,\n                  events,\n                  fromBlock: previousBlockNumber + 1n,\n                  toBlock: blockNumber,\n                } as unknown as GetLogsParameters)\n              } else {\n                logs = []\n              }\n              previousBlockNumber = blockNumber\n            }\n\n            if (logs.length === 0) return\n            if (batch) emit.onLogs(logs as any)\n            else for (const log of logs) emit.onLogs([log] as any)\n          } catch (err) {\n            // If a filter has been set and gets uninstalled, providers will throw an InvalidInput error.\n            // Reinitalize the filter when this occurs\n            if (filter && err instanceof InvalidInputRpcError)\n              initialized = false\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin: true,\n          interval: pollingInterval,\n        },\n      )\n\n      return async () => {\n        if (filter)\n          await getAction(\n            client,\n            uninstallFilter,\n            'uninstallFilter',\n          )({ filter })\n        unwatch()\n      }\n    })\n  }\n\n  const subscribeEvent = () => {\n    let active = true\n    let unsubscribe = () => (active = false)\n    ;(async () => {\n      try {\n        const events_ = events ?? (event ? [event] : undefined)\n        let topics: LogTopic[] = []\n        if (events_) {\n          topics = [\n            (events_ as AbiEvent[]).flatMap((event) =>\n              encodeEventTopics({\n                abi: [event],\n                eventName: (event as AbiEvent).name,\n                args,\n              } as EncodeEventTopicsParameters),\n            ),\n          ]\n          if (event) topics = topics[0] as LogTopic[]\n        }\n\n        const { unsubscribe: unsubscribe_ } = await client.transport.subscribe({\n          params: ['logs', { address, topics }],\n          onData(data: any) {\n            if (!active) return\n            const log = data.result\n            try {\n              const { eventName, args } = decodeEventLog({\n                abi: events_ as Abi,\n                data: log.data,\n                topics: log.topics as any,\n                strict,\n              })\n              const formatted = formatLog(log, {\n                args,\n                eventName: eventName as string,\n              })\n              onLogs([formatted] as any)\n            } catch (err) {\n              let eventName\n              let isUnnamed\n              if (\n                err instanceof DecodeLogDataMismatch ||\n                err instanceof DecodeLogTopicsMismatch\n              ) {\n                // If strict mode is on, and log data/topics do not match event definition, skip.\n                if (strict_) return\n                eventName = err.abiItem.name\n                isUnnamed = err.abiItem.inputs?.some(\n                  (x) => !('name' in x && x.name),\n                )\n              }\n\n              // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n              const formatted = formatLog(log, {\n                args: isUnnamed ? [] : {},\n                eventName,\n              })\n              onLogs([formatted] as any)\n            }\n          },\n          onError(error: Error) {\n            onError?.(error)\n          },\n        })\n        unsubscribe = unsubscribe_\n        if (!active) unsubscribe()\n      } catch (err) {\n        onError?.(err as Error)\n      }\n    })()\n    return unsubscribe\n  }\n\n  return enablePolling ? pollEvent() : subscribeEvent()\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9178, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9184, "column": 0}, "map": {"version":3,"file":"watchPendingTransactions.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/public/watchPendingTransactions.ts"],"sourcesContent":["import type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Filter } from '../../types/filter.js'\nimport type { Hash } from '../../types/misc.js'\nimport type { GetTransportConfig } from '../../types/transport.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { type ObserveErrorType, observe } from '../../utils/observe.js'\nimport { poll } from '../../utils/poll.js'\nimport { type StringifyErrorType, stringify } from '../../utils/stringify.js'\n\nimport { createPendingTransactionFilter } from './createPendingTransactionFilter.js'\nimport { getFilterChanges } from './getFilterChanges.js'\nimport { uninstallFilter } from './uninstallFilter.js'\n\nexport type OnTransactionsParameter = Hash[]\nexport type OnTransactionsFn = (transactions: OnTransactionsParameter) => void\n\ntype PollOptions = {\n  /**\n   * Whether or not the transaction hashes should be batched on each invocation.\n   * @default true\n   */\n  batch?: boolean\n  /**\n   * Polling frequency (in ms). Defaults to Client's pollingInterval config.\n   * @default client.pollingInterval\n   */\n  pollingInterval?: number\n}\n\nexport type WatchPendingTransactionsParameters<\n  TTransport extends Transport = Transport,\n> = {\n  /** The callback to call when an error occurred when trying to get for a new block. */\n  onError?: (error: Error) => void\n  /** The callback to call when new transactions are received. */\n  onTransactions: OnTransactionsFn\n} & (GetTransportConfig<TTransport>['type'] extends 'webSocket'\n  ?\n      | {\n          batch?: never\n          /**\n           * Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`.\n           * @default false\n           */\n          poll?: false\n          pollingInterval?: never\n        }\n      | (PollOptions & {\n          /**\n           * Whether or not the WebSocket Transport should poll the JSON-RPC, rather than using `eth_subscribe`.\n           * @default true\n           */\n          poll?: true\n        })\n  : PollOptions & {\n      poll?: true\n    })\n\nexport type WatchPendingTransactionsReturnType = () => void\n\nexport type WatchPendingTransactionsErrorType =\n  | StringifyErrorType\n  | ObserveErrorType\n  | ErrorType\n\n/**\n * Watches and returns pending transaction hashes.\n *\n * - Docs: https://viem.sh/docs/actions/public/watchPendingTransactions.html\n * - JSON-RPC Methods:\n *   - When `poll: true`\n *     - Calls [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter) to initialize the filter.\n *     - Calls [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getFilterChanges) on a polling interval.\n *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newPendingTransactions\"` event.\n *\n * This Action will batch up all the pending transactions found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchPendingTransactions.html#pollinginterval-optional), and invoke them via [`onTransactions`](https://viem.sh/docs/actions/public/watchPendingTransactions.html#ontransactions).\n *\n * @param client - Client to use\n * @param parameters - {@link WatchPendingTransactionsParameters}\n * @returns A function that can be invoked to stop watching for new pending transaction hashes. {@link WatchPendingTransactionsReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchPendingTransactions } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = await watchPendingTransactions(client, {\n *   onTransactions: (hashes) => console.log(hashes),\n * })\n */\nexport function watchPendingTransactions<\n  TTransport extends Transport,\n  TChain extends Chain | undefined,\n>(\n  client: Client<TTransport, TChain>,\n  {\n    batch = true,\n    onError,\n    onTransactions,\n    poll: poll_,\n    pollingInterval = client.pollingInterval,\n  }: WatchPendingTransactionsParameters<TTransport>,\n) {\n  const enablePolling =\n    typeof poll_ !== 'undefined' ? poll_ : client.transport.type !== 'webSocket'\n\n  const pollPendingTransactions = () => {\n    const observerId = stringify([\n      'watchPendingTransactions',\n      client.uid,\n      batch,\n      pollingInterval,\n    ])\n    return observe(observerId, { onTransactions, onError }, (emit) => {\n      let filter: Filter<'transaction'>\n\n      const unwatch = poll(\n        async () => {\n          try {\n            if (!filter) {\n              try {\n                filter = await getAction(\n                  client,\n                  createPendingTransactionFilter,\n                  'createPendingTransactionFilter',\n                )({})\n                return\n              } catch (err) {\n                unwatch()\n                throw err\n              }\n            }\n\n            const hashes = await getAction(\n              client,\n              getFilterChanges,\n              'getFilterChanges',\n            )({ filter })\n            if (hashes.length === 0) return\n            if (batch) emit.onTransactions(hashes)\n            else for (const hash of hashes) emit.onTransactions([hash])\n          } catch (err) {\n            emit.onError?.(err as Error)\n          }\n        },\n        {\n          emitOnBegin: true,\n          interval: pollingInterval,\n        },\n      )\n\n      return async () => {\n        if (filter)\n          await getAction(\n            client,\n            uninstallFilter,\n            'uninstallFilter',\n          )({ filter })\n        unwatch()\n      }\n    })\n  }\n\n  const subscribePendingTransactions = () => {\n    let active = true\n    let unsubscribe = () => (active = false)\n    ;(async () => {\n      try {\n        const { unsubscribe: unsubscribe_ } = await client.transport.subscribe({\n          params: ['newPendingTransactions'],\n          onData(data: any) {\n            if (!active) return\n            const transaction = data.result\n            onTransactions([transaction])\n          },\n          onError(error: Error) {\n            onError?.(error)\n          },\n        })\n        unsubscribe = unsubscribe_\n        if (!active) unsubscribe()\n      } catch (err) {\n        onError?.(err as Error)\n      }\n    })()\n    return unsubscribe\n  }\n\n  return enablePolling\n    ? pollPendingTransactions()\n    : subscribePendingTransactions()\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9279, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9285, "column": 0}, "map": {"version":3,"file":"public.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/clients/decorators/public.ts"],"sourcesContent":["import type { Abi, AbiEvent } from 'abitype'\n\nimport {\n  type GetEnsAddressParameters,\n  type GetEnsAddressReturnType,\n  getEnsAddress,\n} from '../../actions/ens/getEnsAddress.js'\nimport {\n  type GetEnsAvatarParameters,\n  type GetEnsAvatarReturnType,\n  getEnsAvatar,\n} from '../../actions/ens/getEnsAvatar.js'\nimport {\n  type GetEnsNameParameters,\n  type GetEnsNameReturnType,\n  getEnsName,\n} from '../../actions/ens/getEnsName.js'\nimport {\n  type GetEnsResolverParameters,\n  type GetEnsResolverReturnType,\n  getEnsResolver,\n} from '../../actions/ens/getEnsResolver.js'\nimport {\n  type GetEnsTextParameters,\n  type GetEnsTextReturnType,\n  getEnsText,\n} from '../../actions/ens/getEnsText.js'\nimport {\n  type CallParameters,\n  type CallReturnType,\n  call,\n} from '../../actions/public/call.js'\nimport {\n  type CreateBlockFilterReturnType,\n  createBlockFilter,\n} from '../../actions/public/createBlockFilter.js'\nimport {\n  type CreateContractEventFilterParameters,\n  type CreateContractEventFilterReturnType,\n  createContractEventFilter,\n} from '../../actions/public/createContractEventFilter.js'\nimport {\n  type CreateEventFilterParameters,\n  type CreateEventFilterReturnType,\n  createEventFilter,\n} from '../../actions/public/createEventFilter.js'\nimport {\n  type CreatePendingTransactionFilterReturnType,\n  createPendingTransactionFilter,\n} from '../../actions/public/createPendingTransactionFilter.js'\nimport {\n  type EstimateContractGasParameters,\n  type EstimateContractGasReturnType,\n  estimateContractGas,\n} from '../../actions/public/estimateContractGas.js'\nimport {\n  type EstimateFeesPerGasParameters,\n  type EstimateFeesPerGasReturnType,\n  estimateFeesPerGas,\n} from '../../actions/public/estimateFeesPerGas.js'\nimport {\n  type EstimateGasParameters,\n  type EstimateGasReturnType,\n  estimateGas,\n} from '../../actions/public/estimateGas.js'\nimport {\n  type EstimateMaxPriorityFeePerGasParameters,\n  type EstimateMaxPriorityFeePerGasReturnType,\n  estimateMaxPriorityFeePerGas,\n} from '../../actions/public/estimateMaxPriorityFeePerGas.js'\nimport {\n  type GetBalanceParameters,\n  type GetBalanceReturnType,\n  getBalance,\n} from '../../actions/public/getBalance.js'\nimport {\n  type GetBlockParameters,\n  type GetBlockReturnType,\n  getBlock,\n} from '../../actions/public/getBlock.js'\nimport {\n  type GetBlockNumberParameters,\n  type GetBlockNumberReturnType,\n  getBlockNumber,\n} from '../../actions/public/getBlockNumber.js'\nimport {\n  type GetBlockTransactionCountParameters,\n  type GetBlockTransactionCountReturnType,\n  getBlockTransactionCount,\n} from '../../actions/public/getBlockTransactionCount.js'\nimport {\n  type GetBytecodeParameters,\n  type GetBytecodeReturnType,\n  getBytecode,\n} from '../../actions/public/getBytecode.js'\nimport {\n  type GetChainIdReturnType,\n  getChainId,\n} from '../../actions/public/getChainId.js'\nimport {\n  type GetContractEventsParameters,\n  type GetContractEventsReturnType,\n  getContractEvents,\n} from '../../actions/public/getContractEvents.js'\nimport {\n  type GetFeeHistoryParameters,\n  type GetFeeHistoryReturnType,\n  getFeeHistory,\n} from '../../actions/public/getFeeHistory.js'\nimport {\n  type GetFilterChangesParameters,\n  type GetFilterChangesReturnType,\n  getFilterChanges,\n} from '../../actions/public/getFilterChanges.js'\nimport {\n  type GetFilterLogsParameters,\n  type GetFilterLogsReturnType,\n  getFilterLogs,\n} from '../../actions/public/getFilterLogs.js'\nimport {\n  type GetGasPriceReturnType,\n  getGasPrice,\n} from '../../actions/public/getGasPrice.js'\nimport {\n  type GetLogsParameters,\n  type GetLogsReturnType,\n  getLogs,\n} from '../../actions/public/getLogs.js'\nimport {\n  type GetProofParameters,\n  type GetProofReturnType,\n  getProof,\n} from '../../actions/public/getProof.js'\nimport {\n  type GetStorageAtParameters,\n  type GetStorageAtReturnType,\n  getStorageAt,\n} from '../../actions/public/getStorageAt.js'\nimport {\n  type GetTransactionParameters,\n  type GetTransactionReturnType,\n  getTransaction,\n} from '../../actions/public/getTransaction.js'\nimport {\n  type GetTransactionConfirmationsParameters,\n  type GetTransactionConfirmationsReturnType,\n  getTransactionConfirmations,\n} from '../../actions/public/getTransactionConfirmations.js'\nimport {\n  type GetTransactionCountParameters,\n  type GetTransactionCountReturnType,\n  getTransactionCount,\n} from '../../actions/public/getTransactionCount.js'\nimport {\n  type GetTransactionReceiptParameters,\n  type GetTransactionReceiptReturnType,\n  getTransactionReceipt,\n} from '../../actions/public/getTransactionReceipt.js'\nimport {\n  type MulticallParameters,\n  type MulticallReturnType,\n  multicall,\n} from '../../actions/public/multicall.js'\nimport {\n  type ReadContractParameters,\n  type ReadContractReturnType,\n  readContract,\n} from '../../actions/public/readContract.js'\nimport {\n  type SimulateContractParameters,\n  type SimulateContractReturnType,\n  simulateContract,\n} from '../../actions/public/simulateContract.js'\nimport {\n  type UninstallFilterParameters,\n  type UninstallFilterReturnType,\n  uninstallFilter,\n} from '../../actions/public/uninstallFilter.js'\nimport {\n  type VerifyMessageParameters,\n  type VerifyMessageReturnType,\n  verifyMessage,\n} from '../../actions/public/verifyMessage.js'\nimport {\n  type VerifyTypedDataParameters,\n  type VerifyTypedDataReturnType,\n  verifyTypedData,\n} from '../../actions/public/verifyTypedData.js'\nimport {\n  type WaitForTransactionReceiptParameters,\n  type WaitForTransactionReceiptReturnType,\n  waitForTransactionReceipt,\n} from '../../actions/public/waitForTransactionReceipt.js'\nimport {\n  type WatchBlockNumberParameters,\n  type WatchBlockNumberReturnType,\n  watchBlockNumber,\n} from '../../actions/public/watchBlockNumber.js'\nimport {\n  type WatchBlocksParameters,\n  type WatchBlocksReturnType,\n  watchBlocks,\n} from '../../actions/public/watchBlocks.js'\nimport {\n  type WatchContractEventParameters,\n  type WatchContractEventReturnType,\n  watchContractEvent,\n} from '../../actions/public/watchContractEvent.js'\nimport {\n  type WatchEventParameters,\n  type WatchEventReturnType,\n  watchEvent,\n} from '../../actions/public/watchEvent.js'\nimport {\n  type WatchPendingTransactionsParameters,\n  type WatchPendingTransactionsReturnType,\n  watchPendingTransactions,\n} from '../../actions/public/watchPendingTransactions.js'\nimport {\n  type PrepareTransactionRequestParameters,\n  type PrepareTransactionRequestReturnType,\n  prepareTransactionRequest,\n} from '../../actions/wallet/prepareTransactionRequest.js'\nimport {\n  type SendRawTransactionParameters,\n  type SendRawTransactionReturnType,\n  sendRawTransaction,\n} from '../../actions/wallet/sendRawTransaction.js'\nimport type { Account } from '../../types/account.js'\nimport type { BlockNumber, BlockTag } from '../../types/block.js'\nimport type { Chain } from '../../types/chain.js'\nimport type {\n  ContractFunctionConfig,\n  MaybeAbiEventName,\n  MaybeExtractEventArgsFromAbi,\n} from '../../types/contract.js'\nimport type { FeeValuesType } from '../../types/fee.js'\nimport type { FilterType } from '../../types/filter.js'\nimport type { Client } from '../createClient.js'\nimport type { Transport } from '../transports/createTransport.js'\n\nexport type PublicActions<\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n> = {\n  /**\n   * Executes a new message call immediately without submitting a transaction to the network.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/call.html\n   * - JSON-RPC Methods: [`eth_call`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_call)\n   *\n   * @param args - {@link CallParameters}\n   * @returns The call data. {@link CallReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const data = await client.call({\n   *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n   *   data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   * })\n   */\n  call: (parameters: CallParameters<TChain>) => Promise<CallReturnType>\n  /**\n   * Creates a Filter to listen for new block hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/createBlockFilter.html\n   * - JSON-RPC Methods: [`eth_newBlockFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newBlockFilter)\n   *\n   * @returns Filter. {@link CreateBlockFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, createBlockFilter, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await createBlockFilter(client)\n   * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'block' }\n   */\n  createBlockFilter: () => Promise<CreateBlockFilterReturnType>\n  /**\n   * Creates a Filter to retrieve event logs that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html) or [`getFilterLogs`](https://viem.sh/docs/actions/public/getFilterLogs.html).\n   *\n   * - Docs: https://viem.sh/docs/contract/createContractEventFilter.html\n   *\n   * @param args - {@link CreateContractEventFilterParameters}\n   * @returns [`Filter`](https://viem.sh/docs/glossary/types.html#filter). {@link CreateContractEventFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createContractEventFilter({\n   *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n   * })\n   */\n  createContractEventFilter: <\n    const TAbi extends Abi | readonly unknown[],\n    TEventName extends string | undefined,\n    TArgs extends MaybeExtractEventArgsFromAbi<TAbi, TEventName> | undefined,\n    TStrict extends boolean | undefined = undefined,\n    TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args: CreateContractEventFilterParameters<\n      TAbi,\n      TEventName,\n      TArgs,\n      TStrict,\n      TFromBlock,\n      TToBlock\n    >,\n  ) => Promise<\n    CreateContractEventFilterReturnType<\n      TAbi,\n      TEventName,\n      TArgs,\n      TStrict,\n      TFromBlock,\n      TToBlock\n    >\n  >\n  /**\n   * Creates a [`Filter`](https://viem.sh/docs/glossary/types.html#filter) to listen for new events that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/createEventFilter.html\n   * - JSON-RPC Methods: [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter)\n   *\n   * @param args - {@link CreateEventFilterParameters}\n   * @returns [`Filter`](https://viem.sh/docs/glossary/types.html#filter). {@link CreateEventFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createEventFilter({\n   *   address: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\n   * })\n   */\n  createEventFilter: <\n    const TAbiEvent extends AbiEvent | undefined = undefined,\n    const TAbiEvents extends\n      | readonly AbiEvent[]\n      | readonly unknown[]\n      | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n    TStrict extends boolean | undefined = undefined,\n    TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n    _EventName extends string | undefined = MaybeAbiEventName<TAbiEvent>,\n    _Args extends\n      | MaybeExtractEventArgsFromAbi<TAbiEvents, _EventName>\n      | undefined = undefined,\n  >(\n    args?: CreateEventFilterParameters<\n      TAbiEvent,\n      TAbiEvents,\n      TStrict,\n      TFromBlock,\n      TToBlock,\n      _EventName,\n      _Args\n    >,\n  ) => Promise<\n    CreateEventFilterReturnType<\n      TAbiEvent,\n      TAbiEvents,\n      TStrict,\n      TFromBlock,\n      TToBlock,\n      _EventName,\n      _Args\n    >\n  >\n  /**\n   * Creates a Filter to listen for new pending transaction hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/createPendingTransactionFilter.html\n   * - JSON-RPC Methods: [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter)\n   *\n   * @returns [`Filter`](https://viem.sh/docs/glossary/types.html#filter). {@link CreateBlockFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createPendingTransactionFilter()\n   * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'transaction' }\n   */\n  createPendingTransactionFilter: () => Promise<CreatePendingTransactionFilterReturnType>\n  /**\n   * Estimates the gas required to successfully execute a contract write function call.\n   *\n   * - Docs: https://viem.sh/docs/contract/estimateContractGas.html\n   *\n   * @remarks\n   * Internally, uses a [Public Client](https://viem.sh/docs/clients/public.html) to call the [`estimateGas` action](https://viem.sh/docs/actions/public/estimateGas.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n   *\n   * @param args - {@link EstimateContractGasParameters}\n   * @returns The gas estimate (in wei). {@link EstimateContractGasReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const gas = await client.estimateContractGas({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function mint() public']),\n   *   functionName: 'mint',\n   *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n   * })\n   */\n  estimateContractGas: <\n    TChain extends Chain | undefined,\n    const TAbi extends Abi | readonly unknown[],\n    TFunctionName extends string,\n  >(\n    args: EstimateContractGasParameters<TAbi, TFunctionName, TChain, TAccount>,\n  ) => Promise<EstimateContractGasReturnType>\n  /**\n   * Estimates the gas necessary to complete a transaction without submitting it to the network.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/estimateGas.html\n   * - JSON-RPC Methods: [`eth_estimateGas`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_estimategas)\n   *\n   * @param args - {@link EstimateGasParameters}\n   * @returns The gas estimate (in wei). {@link EstimateGasReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseEther } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const gasEstimate = await client.estimateGas({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *   value: parseEther('1'),\n   * })\n   */\n  estimateGas: (\n    args: EstimateGasParameters<TChain, TAccount>,\n  ) => Promise<EstimateGasReturnType>\n  /**\n   * Returns the balance of an address in wei.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBalance.html\n   * - JSON-RPC Methods: [`eth_getBalance`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getbalance)\n   *\n   * @remarks\n   * You can convert the balance to ether units with [`formatEther`](https://viem.sh/docs/utilities/formatEther.html).\n   *\n   * ```ts\n   * const balance = await getBalance(client, {\n   *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   blockTag: 'safe'\n   * })\n   * const balanceAsEther = formatEther(balance)\n   * // \"6.942\"\n   * ```\n   *\n   * @param args - {@link GetBalanceParameters}\n   * @returns The balance of the address in wei. {@link GetBalanceReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const balance = await client.getBalance({\n   *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   * // 10000000000000000000000n (wei)\n   */\n  getBalance: (args: GetBalanceParameters) => Promise<GetBalanceReturnType>\n  /**\n   * Returns information about a block at a block number, hash, or tag.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBlock.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks/fetching-blocks\n   * - JSON-RPC Methods:\n   *   - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) for `blockNumber` & `blockTag`.\n   *   - Calls [`eth_getBlockByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbyhash) for `blockHash`.\n   *\n   * @param args - {@link GetBlockParameters}\n   * @returns Information about the block. {@link GetBlockReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const block = await client.getBlock()\n   */\n  getBlock: <\n    TIncludeTransactions extends boolean = false,\n    TBlockTag extends BlockTag = 'latest',\n  >(\n    args?: GetBlockParameters<TIncludeTransactions, TBlockTag>,\n  ) => Promise<GetBlockReturnType<TChain, TIncludeTransactions, TBlockTag>>\n  /**\n   * Returns the number of the most recent block seen.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBlockNumber.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks/fetching-blocks\n   * - JSON-RPC Methods: [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber)\n   *\n   * @param args - {@link GetBlockNumberParameters}\n   * @returns The number of the block. {@link GetBlockNumberReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const blockNumber = await client.getBlockNumber()\n   * // 69420n\n   */\n  getBlockNumber: (\n    args?: GetBlockNumberParameters,\n  ) => Promise<GetBlockNumberReturnType>\n  /**\n   * Returns the number of Transactions at a block number, hash, or tag.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getBlockTransactionCount.html\n   * - JSON-RPC Methods:\n   *   - Calls [`eth_getBlockTransactionCountByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbynumber) for `blockNumber` & `blockTag`.\n   *   - Calls [`eth_getBlockTransactionCountByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbyhash) for `blockHash`.\n   *\n   * @param args - {@link GetBlockTransactionCountParameters}\n   * @returns The block transaction count. {@link GetBlockTransactionCountReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const count = await client.getBlockTransactionCount()\n   */\n  getBlockTransactionCount: (\n    args?: GetBlockTransactionCountParameters,\n  ) => Promise<GetBlockTransactionCountReturnType>\n  /**\n   * Retrieves the bytecode at an address.\n   *\n   * - Docs: https://viem.sh/docs/contract/getBytecode.html\n   * - JSON-RPC Methods: [`eth_getCode`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getcode)\n   *\n   * @param args - {@link GetBytecodeParameters}\n   * @returns The contract's bytecode. {@link GetBytecodeReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const code = await client.getBytecode({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   * })\n   */\n  getBytecode: (args: GetBytecodeParameters) => Promise<GetBytecodeReturnType>\n  /**\n   * Returns the chain ID associated with the current network.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getChainId.html\n   * - JSON-RPC Methods: [`eth_chainId`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_chainid)\n   *\n   * @returns The current chain ID. {@link GetChainIdReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const chainId = await client.getChainId()\n   * // 1\n   */\n  getChainId: () => Promise<GetChainIdReturnType>\n  /**\n   * Returns a list of event logs emitted by a contract.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getContractEvents.html\n   * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link GetContractEventsParameters}\n   * @returns A list of event logs. {@link GetContractEventsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { wagmiAbi } from './abi'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const logs = await client.getContractEvents(client, {\n   *  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *  abi: wagmiAbi,\n   *  eventName: 'Transfer'\n   * })\n   */\n  getContractEvents: <\n    const TAbi extends Abi | readonly unknown[],\n    TEventName extends string | undefined = undefined,\n    TStrict extends boolean | undefined = undefined,\n    TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args: GetContractEventsParameters<\n      TAbi,\n      TEventName,\n      TStrict,\n      TFromBlock,\n      TToBlock\n    >,\n  ) => Promise<\n    GetContractEventsReturnType<TAbi, TEventName, TStrict, TFromBlock, TToBlock>\n  >\n  /**\n   * Gets address for ENS name.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsAddress.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n   *\n   * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n   *\n   * @param args - {@link GetEnsAddressParameters}\n   * @returns Address for ENS name or `null` if not found. {@link GetEnsAddressReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { normalize } from 'viem/ens'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const ensAddress = await client.getEnsAddress({\n   *   name: normalize('wevm.eth'),\n   * })\n   * // '0xd2135CfB216b74109775236E36d4b433F1DF507B'\n   */\n  getEnsAddress: (\n    args: GetEnsAddressParameters,\n  ) => Promise<GetEnsAddressReturnType>\n  /**\n   * Gets the avatar of an ENS name.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsAvatar.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls [`getEnsText`](https://viem.sh/docs/ens/actions/getEnsText.html) with `key` set to `'avatar'`.\n   *\n   * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n   *\n   * @param args - {@link GetEnsAvatarParameters}\n   * @returns Avatar URI or `null` if not found. {@link GetEnsAvatarReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { normalize } from 'viem/ens'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const ensAvatar = await client.getEnsAvatar({\n   *   name: normalize('wevm.eth'),\n   * })\n   * // 'https://ipfs.io/ipfs/Qma8mnp6xV3J2cRNf3mTth5C8nV11CAnceVinc3y8jSbio'\n   */\n  getEnsAvatar: (\n    args: GetEnsAvatarParameters,\n  ) => Promise<GetEnsAvatarReturnType>\n  /**\n   * Gets primary name for specified address.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsName.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls `reverse(bytes)` on ENS Universal Resolver Contract to \"reverse resolve\" the address to the primary ENS name.\n   *\n   * @param args - {@link GetEnsNameParameters}\n   * @returns Name or `null` if not found. {@link GetEnsNameReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const ensName = await client.getEnsName({\n   *   address: '0xd2135CfB216b74109775236E36d4b433F1DF507B',\n   * })\n   * // 'wevm.eth'\n   */\n  getEnsName: (args: GetEnsNameParameters) => Promise<GetEnsNameReturnType>\n  /**\n   * Gets resolver for ENS name.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls `findResolver(bytes)` on ENS Universal Resolver Contract to retrieve the resolver of an ENS name.\n   *\n   * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n   *\n   * @param args - {@link GetEnsResolverParameters}\n   * @returns Address for ENS resolver. {@link GetEnsResolverReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { normalize } from 'viem/ens'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const resolverAddress = await client.getEnsResolver({\n   *   name: normalize('wevm.eth'),\n   * })\n   * // '0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41'\n   */\n  getEnsResolver: (\n    args: GetEnsResolverParameters,\n  ) => Promise<GetEnsResolverReturnType>\n  /**\n   * Gets a text record for specified ENS name.\n   *\n   * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n   *\n   * @remarks\n   * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n   *\n   * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize.html) function for this.\n   *\n   * @param args - {@link GetEnsTextParameters}\n   * @returns Address for ENS resolver. {@link GetEnsTextReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { normalize } from 'viem/ens'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const twitterRecord = await client.getEnsText({\n   *   name: normalize('wevm.eth'),\n   *   key: 'com.twitter',\n   * })\n   * // 'wagmi_sh'\n   */\n  getEnsText: (args: GetEnsTextParameters) => Promise<GetEnsTextReturnType>\n  /**\n   * Returns a collection of historical gas information.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getFeeHistory.html\n   * - JSON-RPC Methods: [`eth_feeHistory`](https://docs.alchemy.com/reference/eth-feehistory)\n   *\n   * @param args - {@link GetFeeHistoryParameters}\n   * @returns The gas estimate (in wei). {@link GetFeeHistoryReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const feeHistory = await client.getFeeHistory({\n   *   blockCount: 4,\n   *   rewardPercentiles: [25, 75],\n   * })\n   */\n  getFeeHistory: (\n    args: GetFeeHistoryParameters,\n  ) => Promise<GetFeeHistoryReturnType>\n  /**\n   * Returns an estimate for the fees per gas for a transaction to be included\n   * in the next block.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/estimateFeesPerGas.html\n   *\n   * @param client - Client to use\n   * @param parameters - {@link EstimateFeesPerGasParameters}\n   * @returns An estimate (in wei) for the fees per gas. {@link EstimateFeesPerGasReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const maxPriorityFeePerGas = await client.estimateFeesPerGas()\n   * // { maxFeePerGas: ..., maxPriorityFeePerGas: ... }\n   */\n  estimateFeesPerGas: <\n    TChainOverride extends Chain | undefined = undefined,\n    TType extends FeeValuesType = 'eip1559',\n  >(\n    args?: EstimateFeesPerGasParameters<TChain, TChainOverride, TType>,\n  ) => Promise<EstimateFeesPerGasReturnType>\n  /**\n   * Returns a list of logs or hashes based on a [Filter](/docs/glossary/terms#filter) since the last time it was called.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getFilterChanges.html\n   * - JSON-RPC Methods: [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges)\n   *\n   * @remarks\n   * A Filter can be created from the following actions:\n   *\n   * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter.html)\n   * - [`createContractEventFilter`](https://viem.sh/docs/contract/createContractEventFilter.html)\n   * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter.html)\n   * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter.html)\n   *\n   * Depending on the type of filter, the return value will be different:\n   *\n   * - If the filter was created with `createContractEventFilter` or `createEventFilter`, it returns a list of logs.\n   * - If the filter was created with `createPendingTransactionFilter`, it returns a list of transaction hashes.\n   * - If the filter was created with `createBlockFilter`, it returns a list of block hashes.\n   *\n   * @param args - {@link GetFilterChangesParameters}\n   * @returns Logs or hashes. {@link GetFilterChangesReturnType}\n   *\n   * @example\n   * // Blocks\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createBlockFilter()\n   * const hashes = await client.getFilterChanges({ filter })\n   *\n   * @example\n   * // Contract Events\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createContractEventFilter({\n   *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n   *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n   *   eventName: 'Transfer',\n   * })\n   * const logs = await client.getFilterChanges({ filter })\n   *\n   * @example\n   * // Raw Events\n   * import { createPublicClient, http, parseAbiItem } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createEventFilter({\n   *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n   *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n   * })\n   * const logs = await client.getFilterChanges({ filter })\n   *\n   * @example\n   * // Transactions\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createPendingTransactionFilter()\n   * const hashes = await client.getFilterChanges({ filter })\n   */\n  getFilterChanges: <\n    TFilterType extends FilterType,\n    const TAbi extends Abi | readonly unknown[] | undefined,\n    TEventName extends string | undefined,\n    TStrict extends boolean | undefined = undefined,\n    TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args: GetFilterChangesParameters<\n      TFilterType,\n      TAbi,\n      TEventName,\n      TStrict,\n      TFromBlock,\n      TToBlock\n    >,\n  ) => Promise<\n    GetFilterChangesReturnType<\n      TFilterType,\n      TAbi,\n      TEventName,\n      TStrict,\n      TFromBlock,\n      TToBlock\n    >\n  >\n  /**\n   * Returns a list of event logs since the filter was created.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getFilterLogs.html\n   * - JSON-RPC Methods: [`eth_getFilterLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterlogs)\n   *\n   * @remarks\n   * `getFilterLogs` is only compatible with **event filters**.\n   *\n   * @param args - {@link GetFilterLogsParameters}\n   * @returns A list of event logs. {@link GetFilterLogsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbiItem } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const filter = await client.createEventFilter({\n   *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n   *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n   * })\n   * const logs = await client.getFilterLogs({ filter })\n   */\n  getFilterLogs: <\n    const TAbi extends Abi | readonly unknown[] | undefined,\n    TEventName extends string | undefined,\n    TStrict extends boolean | undefined = undefined,\n    TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args: GetFilterLogsParameters<\n      TAbi,\n      TEventName,\n      TStrict,\n      TFromBlock,\n      TToBlock\n    >,\n  ) => Promise<\n    GetFilterLogsReturnType<TAbi, TEventName, TStrict, TFromBlock, TToBlock>\n  >\n  /**\n   * Returns the current price of gas (in wei).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getGasPrice.html\n   * - JSON-RPC Methods: [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice)\n   *\n   * @returns The gas price (in wei). {@link GetGasPriceReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const gasPrice = await client.getGasPrice()\n   */\n  getGasPrice: () => Promise<GetGasPriceReturnType>\n  /**\n   * Returns a list of event logs matching the provided parameters.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getLogs.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/filters-and-logs/event-logs\n   * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\n   *\n   * @param args - {@link GetLogsParameters}\n   * @returns A list of event logs. {@link GetLogsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbiItem } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const logs = await client.getLogs()\n   */\n  getLogs: <\n    const TAbiEvent extends AbiEvent | undefined = undefined,\n    const TAbiEvents extends\n      | readonly AbiEvent[]\n      | readonly unknown[]\n      | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n    TStrict extends boolean | undefined = undefined,\n    TFromBlock extends BlockNumber | BlockTag | undefined = undefined,\n    TToBlock extends BlockNumber | BlockTag | undefined = undefined,\n  >(\n    args?: GetLogsParameters<\n      TAbiEvent,\n      TAbiEvents,\n      TStrict,\n      TFromBlock,\n      TToBlock\n    >,\n  ) => Promise<\n    GetLogsReturnType<TAbiEvent, TAbiEvents, TStrict, TFromBlock, TToBlock>\n  >\n  /**\n   * Returns the account and storage values of the specified account including the Merkle-proof.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getProof.html\n   * - JSON-RPC Methods:\n   *   - Calls [`eth_getProof`](https://eips.ethereum.org/EIPS/eip-1186)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link GetProofParameters}\n   * @returns Proof data. {@link GetProofReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const block = await client.getProof({\n   *  address: '0x...',\n   *  storageKeys: ['0x...'],\n   * })\n   */\n  getProof: (args: GetProofParameters) => Promise<GetProofReturnType>\n  /**\n   * Returns an estimate for the max priority fee per gas (in wei) for a transaction\n   * to be included in the next block.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/estimateMaxPriorityFeePerGas.html\n   *\n   * @param client - Client to use\n   * @returns An estimate (in wei) for the max priority fee per gas. {@link EstimateMaxPriorityFeePerGasReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const maxPriorityFeePerGas = await client.estimateMaxPriorityFeePerGas()\n   * // 10000000n\n   */\n  estimateMaxPriorityFeePerGas: <\n    TChainOverride extends Chain | undefined = undefined,\n  >(\n    args?: EstimateMaxPriorityFeePerGasParameters<TChain, TChainOverride>,\n  ) => Promise<EstimateMaxPriorityFeePerGasReturnType>\n  /**\n   * Returns the value from a storage slot at a given address.\n   *\n   * - Docs: https://viem.sh/docs/contract/getStorageAt.html\n   * - JSON-RPC Methods: [`eth_getStorageAt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getstorageat)\n   *\n   * @param args - {@link GetStorageAtParameters}\n   * @returns The value of the storage slot. {@link GetStorageAtReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { getStorageAt } from 'viem/contract'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const code = await client.getStorageAt({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   slot: toHex(0),\n   * })\n   */\n  getStorageAt: (\n    args: GetStorageAtParameters,\n  ) => Promise<GetStorageAtReturnType>\n  /**\n   * Returns information about a [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) given a hash or block identifier.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getTransaction.html\n   * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/fetching-transactions\n   * - JSON-RPC Methods: [`eth_getTransactionByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionByHash)\n   *\n   * @param args - {@link GetTransactionParameters}\n   * @returns The transaction information. {@link GetTransactionReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const transaction = await client.getTransaction({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  getTransaction: <TBlockTag extends BlockTag = 'latest'>(\n    args: GetTransactionParameters<TBlockTag>,\n  ) => Promise<GetTransactionReturnType<TChain, TBlockTag>>\n  /**\n   * Returns the number of blocks passed (confirmations) since the transaction was processed on a block.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getTransactionConfirmations.html\n   * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/fetching-transactions\n   * - JSON-RPC Methods: [`eth_getTransactionConfirmations`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionConfirmations)\n   *\n   * @param args - {@link GetTransactionConfirmationsParameters}\n   * @returns The number of blocks passed since the transaction was processed. If confirmations is 0, then the Transaction has not been confirmed & processed yet. {@link GetTransactionConfirmationsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const confirmations = await client.getTransactionConfirmations({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  getTransactionConfirmations: (\n    args: GetTransactionConfirmationsParameters<TChain>,\n  ) => Promise<GetTransactionConfirmationsReturnType>\n  /**\n   * Returns the number of [Transactions](https://viem.sh/docs/glossary/terms.html#transaction) an Account has broadcast / sent.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getTransactionCount.html\n   * - JSON-RPC Methods: [`eth_getTransactionCount`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactioncount)\n   *\n   * @param args - {@link GetTransactionCountParameters}\n   * @returns The number of transactions an account has sent. {@link GetTransactionCountReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const transactionCount = await client.getTransactionCount({\n   *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   */\n  getTransactionCount: (\n    args: GetTransactionCountParameters,\n  ) => Promise<GetTransactionCountReturnType>\n  /**\n   * Returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms.html#transaction-receipt) given a [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) hash.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getTransactionReceipt.html\n   * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/fetching-transactions\n   * - JSON-RPC Methods: [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt)\n   *\n   * @param args - {@link GetTransactionReceiptParameters}\n   * @returns The transaction receipt. {@link GetTransactionReceiptReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const transactionReceipt = await client.getTransactionReceipt({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  getTransactionReceipt: (\n    args: GetTransactionReceiptParameters,\n  ) => Promise<GetTransactionReceiptReturnType<TChain>>\n  /**\n   * Similar to [`readContract`](https://viem.sh/docs/contract/readContract.html), but batches up multiple functions on a contract in a single RPC call via the [`multicall3` contract](https://github.com/mds1/multicall).\n   *\n   * - Docs: https://viem.sh/docs/contract/multicall.html\n   *\n   * @param args - {@link MulticallParameters}\n   * @returns An array of results with accompanying status. {@link MulticallReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const abi = parseAbi([\n   *   'function balanceOf(address) view returns (uint256)',\n   *   'function totalSupply() view returns (uint256)',\n   * ])\n   * const result = await client.multicall({\n   *   contracts: [\n   *     {\n   *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *       abi,\n   *       functionName: 'balanceOf',\n   *       args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n   *     },\n   *     {\n   *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *       abi,\n   *       functionName: 'totalSupply',\n   *     },\n   *   ],\n   * })\n   * // [{ result: 424122n, status: 'success' }, { result: 1000000n, status: 'success' }]\n   */\n  multicall: <\n    TContracts extends ContractFunctionConfig[],\n    TAllowFailure extends boolean = true,\n  >(\n    args: MulticallParameters<TContracts, TAllowFailure>,\n  ) => Promise<MulticallReturnType<TContracts, TAllowFailure>>\n  /**\n   * Prepares a transaction request for signing.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/prepareTransactionRequest.html\n   *\n   * @param args - {@link PrepareTransactionRequestParameters}\n   * @returns The transaction request. {@link PrepareTransactionRequestReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   */\n  prepareTransactionRequest: <\n    TChainOverride extends Chain | undefined = undefined,\n  >(\n    args: PrepareTransactionRequestParameters<TChain, TAccount, TChainOverride>,\n  ) => Promise<PrepareTransactionRequestReturnType>\n  /**\n   * Calls a read-only function on a contract, and returns the response.\n   *\n   * - Docs: https://viem.sh/docs/contract/readContract.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts/reading-contracts\n   *\n   * @remarks\n   * A \"read-only\" function (constant function) on a Solidity contract is denoted by a `view` or `pure` keyword. They can only read the state of the contract, and cannot make any changes to it. Since read-only methods do not change the state of the contract, they do not require any gas to be executed, and can be called by any user without the need to pay for gas.\n   *\n   * Internally, uses a [Public Client](https://viem.sh/docs/clients/public.html) to call the [`call` action](https://viem.sh/docs/actions/public/call.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n   *\n   * @param args - {@link ReadContractParameters}\n   * @returns The response from the contract. Type is inferred. {@link ReadContractReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { readContract } from 'viem/contract'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const result = await client.readContract({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function balanceOf(address) view returns (uint256)']),\n   *   functionName: 'balanceOf',\n   *   args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n   * })\n   * // 424122n\n   */\n  readContract: <\n    const TAbi extends Abi | readonly unknown[],\n    TFunctionName extends string,\n  >(\n    args: ReadContractParameters<TAbi, TFunctionName>,\n  ) => Promise<ReadContractReturnType<TAbi, TFunctionName>>\n  /**\n   * Sends a **signed** transaction to the network\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/sendRawTransaction.html\n   * - JSON-RPC Method: [`eth_sendRawTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link SendRawTransactionParameters}\n   * @returns The transaction hash. {@link SendRawTransactionReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { sendRawTransaction } from 'viem/wallet'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   *\n   * const hash = await client.sendRawTransaction({\n   *   serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33'\n   * })\n   */\n  sendRawTransaction: (\n    args: SendRawTransactionParameters,\n  ) => Promise<SendRawTransactionReturnType>\n  /**\n   * Simulates/validates a contract interaction. This is useful for retrieving **return data** and **revert reasons** of contract write functions.\n   *\n   * - Docs: https://viem.sh/docs/contract/simulateContract.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts/writing-to-contracts\n   *\n   * @remarks\n   * This function does not require gas to execute and _**does not**_ change the state of the blockchain. It is almost identical to [`readContract`](https://viem.sh/docs/contract/readContract.html), but also supports contract write functions.\n   *\n   * Internally, uses a [Public Client](https://viem.sh/docs/clients/public.html) to call the [`call` action](https://viem.sh/docs/actions/public/call.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n   *\n   * @param args - {@link SimulateContractParameters}\n   * @returns The simulation result and write request. {@link SimulateContractReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const result = await client.simulateContract({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function mint(uint32) view returns (uint32)']),\n   *   functionName: 'mint',\n   *   args: ['69420'],\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   * })\n   */\n  simulateContract: <\n    const TAbi extends Abi | readonly unknown[],\n    TFunctionName extends string,\n    TChainOverride extends Chain | undefined = undefined,\n  >(\n    args: SimulateContractParameters<\n      TAbi,\n      TFunctionName,\n      TChain,\n      TChainOverride\n    >,\n  ) => Promise<\n    SimulateContractReturnType<TAbi, TFunctionName, TChain, TChainOverride>\n  >\n  verifyMessage: (\n    args: VerifyMessageParameters,\n  ) => Promise<VerifyMessageReturnType>\n  verifyTypedData: (\n    args: VerifyTypedDataParameters,\n  ) => Promise<VerifyTypedDataReturnType>\n  /**\n   * Destroys a Filter that was created from one of the following Actions:\n   *\n   * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter.html)\n   * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter.html)\n   * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter.html)\n   *\n   * - Docs: https://viem.sh/docs/actions/public/uninstallFilter.html\n   * - JSON-RPC Methods: [`eth_uninstallFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_uninstallFilter)\n   *\n   * @param args - {@link UninstallFilterParameters}\n   * @returns A boolean indicating if the Filter was successfully uninstalled. {@link UninstallFilterReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { createPendingTransactionFilter, uninstallFilter } from 'viem/public'\n   *\n   * const filter = await client.createPendingTransactionFilter()\n   * const uninstalled = await client.uninstallFilter({ filter })\n   * // true\n   */\n  uninstallFilter: (\n    args: UninstallFilterParameters,\n  ) => Promise<UninstallFilterReturnType>\n  /**\n   * Waits for the [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) to be included on a [Block](https://viem.sh/docs/glossary/terms.html#block) (one confirmation), and then returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms.html#transaction-receipt). If the Transaction reverts, then the action will throw an error.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/waitForTransactionReceipt.html\n   * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/sending-transactions\n   * - JSON-RPC Methods:\n   *   - Polls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt) on each block until it has been processed.\n   *   - If a Transaction has been replaced:\n   *     - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) and extracts the transactions\n   *     - Checks if one of the Transactions is a replacement\n   *     - If so, calls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt).\n   *\n   * @remarks\n   * The `waitForTransactionReceipt` action additionally supports Replacement detection (e.g. sped up Transactions).\n   *\n   * Transactions can be replaced when a user modifies their transaction in their wallet (to speed up or cancel). Transactions are replaced when they are sent from the same nonce.\n   *\n   * There are 3 types of Transaction Replacement reasons:\n   *\n   * - `repriced`: The gas price has been modified (e.g. different `maxFeePerGas`)\n   * - `cancelled`: The Transaction has been cancelled (e.g. `value === 0n`)\n   * - `replaced`: The Transaction has been replaced (e.g. different `value` or `data`)\n   *\n   * @param args - {@link WaitForTransactionReceiptParameters}\n   * @returns The transaction receipt. {@link WaitForTransactionReceiptReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const transactionReceipt = await client.waitForTransactionReceipt({\n   *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n   * })\n   */\n  waitForTransactionReceipt: (\n    args: WaitForTransactionReceiptParameters<TChain>,\n  ) => Promise<WaitForTransactionReceiptReturnType<TChain>>\n  /**\n   * Watches and returns incoming block numbers.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/watchBlockNumber.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks/watching-blocks\n   * - JSON-RPC Methods:\n   *   - When `poll: true`, calls [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber) on a polling interval.\n   *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n   *\n   * @param args - {@link WatchBlockNumberParameters}\n   * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlockNumberReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = await client.watchBlockNumber({\n   *   onBlockNumber: (blockNumber) => console.log(blockNumber),\n   * })\n   */\n  watchBlockNumber: (\n    args: WatchBlockNumberParameters,\n  ) => WatchBlockNumberReturnType\n  /**\n   * Watches and returns information for incoming blocks.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/watchBlocks.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks/watching-blocks\n   * - JSON-RPC Methods:\n   *   - When `poll: true`, calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getBlockByNumber) on a polling interval.\n   *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n   *\n   * @param args - {@link WatchBlocksParameters}\n   * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlocksReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = await client.watchBlocks({\n   *   onBlock: (block) => console.log(block),\n   * })\n   */\n  watchBlocks: <\n    TIncludeTransactions extends boolean = false,\n    TBlockTag extends BlockTag = 'latest',\n  >(\n    args: WatchBlocksParameters<\n      TTransport,\n      TChain,\n      TIncludeTransactions,\n      TBlockTag\n    >,\n  ) => WatchBlocksReturnType\n  /**\n   * Watches and returns emitted contract event logs.\n   *\n   * - Docs: https://viem.sh/docs/contract/watchContractEvent.html\n   *\n   * @remarks\n   * This Action will batch up all the event logs found within the [`pollingInterval`](https://viem.sh/docs/contract/watchContractEvent.html#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/contract/watchContractEvent.html#onLogs).\n   *\n   * `watchContractEvent` will attempt to create an [Event Filter](https://viem.sh/docs/contract/createContractEventFilter.html) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchContractEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs.html) instead.\n   *\n   * @param args - {@link WatchContractEventParameters}\n   * @returns A function that can be invoked to stop watching for new event logs. {@link WatchContractEventReturnType}\n   *\n   * @example\n   * import { createPublicClient, http, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = client.watchContractEvent({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['event Transfer(address indexed from, address indexed to, uint256 value)']),\n   *   eventName: 'Transfer',\n   *   args: { from: '0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b' },\n   *   onLogs: (logs) => console.log(logs),\n   * })\n   */\n  watchContractEvent: <\n    const TAbi extends Abi | readonly unknown[],\n    TEventName extends string,\n    TStrict extends boolean | undefined = undefined,\n  >(\n    args: WatchContractEventParameters<TAbi, TEventName, TStrict>,\n  ) => WatchContractEventReturnType\n  /**\n   * Watches and returns emitted [Event Logs](https://viem.sh/docs/glossary/terms.html#event-log).\n   *\n   * - Docs: https://viem.sh/docs/actions/public/watchEvent.html\n   * - JSON-RPC Methods:\n   *   - **RPC Provider supports `eth_newFilter`:**\n   *     - Calls [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter) to create a filter (called on initialize).\n   *     - On a polling interval, it will call [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges).\n   *   - **RPC Provider does not support `eth_newFilter`:**\n   *     - Calls [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs) for each block between the polling interval.\n   *\n   * @remarks\n   * This Action will batch up all the Event Logs found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchEvent.html#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/actions/public/watchEvent.html#onLogs).\n   *\n   * `watchEvent` will attempt to create an [Event Filter](https://viem.sh/docs/actions/public/createEventFilter.html) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs.html) instead.\n   *\n   * @param args - {@link WatchEventParameters}\n   * @returns A function that can be invoked to stop watching for new Event Logs. {@link WatchEventReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = client.watchEvent({\n   *   onLogs: (logs) => console.log(logs),\n   * })\n   */\n  watchEvent: <\n    const TAbiEvent extends AbiEvent | undefined = undefined,\n    const TAbiEvents extends\n      | readonly AbiEvent[]\n      | readonly unknown[]\n      | undefined = TAbiEvent extends AbiEvent ? [TAbiEvent] : undefined,\n    TStrict extends boolean | undefined = undefined,\n  >(\n    args: WatchEventParameters<TAbiEvent, TAbiEvents, TStrict>,\n  ) => WatchEventReturnType\n  /**\n   * Watches and returns pending transaction hashes.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/watchPendingTransactions.html\n   * - JSON-RPC Methods:\n   *   - When `poll: true`\n   *     - Calls [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter) to initialize the filter.\n   *     - Calls [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getFilterChanges) on a polling interval.\n   *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newPendingTransactions\"` event.\n   *\n   * @remarks\n   * This Action will batch up all the pending transactions found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchPendingTransactions.html#pollinginterval-optional), and invoke them via [`onTransactions`](https://viem.sh/docs/actions/public/watchPendingTransactions.html#ontransactions).\n   *\n   * @param args - {@link WatchPendingTransactionsParameters}\n   * @returns A function that can be invoked to stop watching for new pending transaction hashes. {@link WatchPendingTransactionsReturnType}\n   *\n   * @example\n   * import { createPublicClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createPublicClient({\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const unwatch = await client.watchPendingTransactions({\n   *   onTransactions: (hashes) => console.log(hashes),\n   * })\n   */\n  watchPendingTransactions: (\n    args: WatchPendingTransactionsParameters<TTransport>,\n  ) => WatchPendingTransactionsReturnType\n}\n\nexport function publicActions<\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n>(\n  client: Client<TTransport, TChain, TAccount>,\n): PublicActions<TTransport, TChain, TAccount> {\n  return {\n    call: (args) => call(client, args),\n    createBlockFilter: () => createBlockFilter(client),\n    createContractEventFilter: (args) =>\n      createContractEventFilter(client, args),\n    createEventFilter: (args) => createEventFilter(client, args),\n    createPendingTransactionFilter: () =>\n      createPendingTransactionFilter(client),\n    estimateContractGas: (args) => estimateContractGas(client, args as any),\n    estimateGas: (args) => estimateGas(client, args),\n    getBalance: (args) => getBalance(client, args),\n    getBlock: (args) => getBlock(client, args),\n    getBlockNumber: (args) => getBlockNumber(client, args),\n    getBlockTransactionCount: (args) => getBlockTransactionCount(client, args),\n    getBytecode: (args) => getBytecode(client, args),\n    getChainId: () => getChainId(client),\n    getContractEvents: (args) => getContractEvents(client, args),\n    getEnsAddress: (args) => getEnsAddress(client, args),\n    getEnsAvatar: (args) => getEnsAvatar(client, args),\n    getEnsName: (args) => getEnsName(client, args),\n    getEnsResolver: (args) => getEnsResolver(client, args),\n    getEnsText: (args) => getEnsText(client, args),\n    getFeeHistory: (args) => getFeeHistory(client, args),\n    estimateFeesPerGas: (args) => estimateFeesPerGas(client, args),\n    getFilterChanges: (args) => getFilterChanges(client, args),\n    getFilterLogs: (args) => getFilterLogs(client, args),\n    getGasPrice: () => getGasPrice(client),\n    getLogs: (args) => getLogs(client, args as any),\n    getProof: (args) => getProof(client, args),\n    estimateMaxPriorityFeePerGas: (args) =>\n      estimateMaxPriorityFeePerGas(client, args),\n    getStorageAt: (args) => getStorageAt(client, args),\n    getTransaction: (args) => getTransaction(client, args),\n    getTransactionConfirmations: (args) =>\n      getTransactionConfirmations(client, args),\n    getTransactionCount: (args) => getTransactionCount(client, args),\n    getTransactionReceipt: (args) => getTransactionReceipt(client, args),\n    multicall: (args) => multicall(client, args as any) as any,\n    prepareTransactionRequest: (args) =>\n      prepareTransactionRequest(client as any, args as any),\n    readContract: (args) => readContract(client, args),\n    sendRawTransaction: (args) => sendRawTransaction(client, args),\n    simulateContract: (args) => simulateContract(client, args),\n    verifyMessage: (args) => verifyMessage(client, args),\n    verifyTypedData: (args) => verifyTypedData(client, args),\n    uninstallFilter: (args) => uninstallFilter(client, args),\n    waitForTransactionReceipt: (args) =>\n      waitForTransactionReceipt(client, args),\n    watchBlocks: (args) => watchBlocks(client, args),\n    watchBlockNumber: (args) => watchBlockNumber(client, args),\n    watchContractEvent: (args) => watchContractEvent(client, args),\n    watchEvent: (args) => watchEvent(client, args),\n    watchPendingTransactions: (args) => watchPendingTransactions(client, args),\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9430, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9436, "column": 0}, "map": {"version":3,"file":"createPublicClient.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/clients/createPublicClient.ts"],"sourcesContent":["import type { ErrorType } from '../errors/utils.js'\nimport type { Chain } from '../types/chain.js'\nimport type { PublicRpcSchema } from '../types/eip1193.js'\nimport type { Prettify } from '../types/utils.js'\nimport {\n  type Client,\n  type ClientConfig,\n  type CreateClientErrorType,\n  createClient,\n} from './createClient.js'\nimport { type PublicActions, publicActions } from './decorators/public.js'\nimport type { Transport } from './transports/createTransport.js'\n\nexport type PublicClientConfig<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n> = Prettify<\n  Pick<\n    ClientConfig<transport, chain>,\n    | 'batch'\n    | 'cacheTime'\n    | 'chain'\n    | 'key'\n    | 'name'\n    | 'pollingInterval'\n    | 'transport'\n  >\n>\n\nexport type PublicClient<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n> = Prettify<\n  Client<\n    transport,\n    chain,\n    undefined,\n    PublicRpcSchema,\n    PublicActions<transport, chain>\n  >\n>\n\nexport type CreatePublicClientErrorType = CreateClientErrorType | ErrorType\n\n/**\n * Creates a Public Client with a given [Transport](https://viem.sh/docs/clients/intro.html) configured for a [Chain](https://viem.sh/docs/clients/chains.html).\n *\n * - Docs: https://viem.sh/docs/clients/public.html\n *\n * A Public Client is an interface to \"public\" [JSON-RPC API](https://ethereum.org/en/developers/docs/apis/json-rpc/) methods such as retrieving block numbers, transactions, reading from smart contracts, etc through [Public Actions](/docs/actions/public/introduction).\n *\n * @param config - {@link PublicClientConfig}\n * @returns A Public Client. {@link PublicClient}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n */\nexport function createPublicClient<\n  transport extends Transport,\n  chain extends Chain | undefined = undefined,\n>(\n  parameters: PublicClientConfig<transport, chain>,\n): PublicClient<transport, chain>\n\nexport function createPublicClient(\n  parameters: PublicClientConfig,\n): PublicClient {\n  const { key = 'public', name = 'Public Client' } = parameters\n  const client = createClient({\n    ...parameters,\n    key,\n    name,\n    type: 'publicClient',\n  })\n  return client.extend(publicActions)\n}\n"],"names":[],"mappings":";;;AAIA,OAAO,EAIL,YAAY,GACb,MAAM,mBAAmB,CAAA;AAC1B,OAAO,EAAsB,aAAa,EAAE,MAAM,wBAAwB,CAAA;;;AA4DpE,SAAU,kBAAkB,CAChC,UAA8B;IAE9B,MAAM,EAAE,GAAG,GAAG,QAAQ,EAAE,IAAI,GAAG,eAAe,EAAE,GAAG,UAAU,CAAA;IAC7D,MAAM,MAAM,2OAAG,eAAA,AAAY,EAAC;QAC1B,GAAG,UAAU;QACb,GAAG;QACH,IAAI;QACJ,IAAI,EAAE,cAAc;KACrB,CAAC,CAAA;IACF,OAAO,MAAM,CAAC,MAAM,6OAAC,gBAAa,CAAC,CAAA;AACrC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 9453, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9459, "column": 0}, "map": {"version":3,"file":"buildRequest.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/buildRequest.ts"],"sourcesContent":["import { BaseError } from '../errors/base.js'\nimport {\n  HttpRequestError,\n  type HttpRequestErrorType,\n  type RpcRequestErrorType,\n  type TimeoutErrorType,\n  type WebSocketRequestErrorType,\n} from '../errors/request.js'\nimport {\n  ChainDisconnectedError,\n  type ChainDisconnectedErrorType,\n  InternalRpcError,\n  type InternalRpcErrorType,\n  InvalidInputRpcError,\n  type InvalidInputRpcErrorType,\n  InvalidParamsRpcError,\n  type InvalidParamsRpcErrorType,\n  InvalidRequestRpcError,\n  type InvalidRequestRpcErrorType,\n  JsonRpcVersionUnsupportedError,\n  type JsonRpcVersionUnsupportedErrorType,\n  LimitExceededRpcError,\n  type LimitExceededRpcErrorType,\n  MethodNotFoundRpcError,\n  type MethodNotFoundRpcErrorType,\n  MethodNotSupportedRpcError,\n  type MethodNotSupportedRpcErrorType,\n  ParseRpcError,\n  type ParseRpcErrorType,\n  ProviderDisconnectedError,\n  type ProviderDisconnectedErrorType,\n  type ProviderRpcErrorCode,\n  ResourceNotFoundRpcError,\n  type ResourceNotFoundRpcErrorType,\n  ResourceUnavailableRpcError,\n  type ResourceUnavailableRpcErrorType,\n  type RpcError,\n  type RpcErrorCode,\n  type RpcErrorType,\n  SwitchChainError,\n  type SwitchChainErrorType,\n  TransactionRejectedRpcError,\n  type TransactionRejectedRpcErrorType,\n  UnauthorizedProviderError,\n  type UnauthorizedProviderErrorType,\n  UnknownRpcError,\n  type UnknownRpcErrorType,\n  UnsupportedProviderMethodError,\n  type UnsupportedProviderMethodErrorType,\n  UserRejectedRequestError,\n  type UserRejectedRequestErrorType,\n} from '../errors/rpc.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { CreateBatchSchedulerErrorType } from './promise/createBatchScheduler.js'\nimport { type WithRetryErrorType, withRetry } from './promise/withRetry.js'\nimport type { GetSocketErrorType } from './rpc.js'\n\nexport type IsDeterministicErrorType = ErrorType\n\nexport const isDeterministicError = (error: Error) => {\n  if ('code' in error)\n    return (\n      error.code !== -1 &&\n      error.code !== -32004 &&\n      error.code !== -32005 &&\n      error.code !== -32042 &&\n      error.code !== -32603\n    )\n  if (error instanceof HttpRequestError && error.status)\n    return (\n      error.status !== 403 &&\n      error.status !== 408 &&\n      error.status !== 413 &&\n      error.status !== 429 &&\n      error.status !== 500 &&\n      error.status !== 502 &&\n      error.status !== 503 &&\n      error.status !== 504\n    )\n  return false\n}\n\nexport type RequestErrorType =\n  | ChainDisconnectedErrorType\n  | CreateBatchSchedulerErrorType\n  | HttpRequestErrorType\n  | InternalRpcErrorType\n  | InvalidInputRpcErrorType\n  | InvalidParamsRpcErrorType\n  | InvalidRequestRpcErrorType\n  | GetSocketErrorType\n  | JsonRpcVersionUnsupportedErrorType\n  | LimitExceededRpcErrorType\n  | MethodNotFoundRpcErrorType\n  | MethodNotSupportedRpcErrorType\n  | ParseRpcErrorType\n  | ProviderDisconnectedErrorType\n  | ResourceNotFoundRpcErrorType\n  | ResourceUnavailableRpcErrorType\n  | RpcErrorType\n  | RpcRequestErrorType\n  | SwitchChainErrorType\n  | TimeoutErrorType\n  | TransactionRejectedRpcErrorType\n  | UnauthorizedProviderErrorType\n  | UnknownRpcErrorType\n  | UnsupportedProviderMethodErrorType\n  | UserRejectedRequestErrorType\n  | WebSocketRequestErrorType\n  | WithRetryErrorType\n  | ErrorType\n\nexport function buildRequest<TRequest extends (args: any) => Promise<any>>(\n  request: TRequest,\n  {\n    retryDelay = 150,\n    retryCount = 3,\n  }: {\n    // The base delay (in ms) between retries.\n    retryDelay?: number\n    // The max number of times to retry.\n    retryCount?: number\n  } = {},\n) {\n  return (async (args: any) =>\n    withRetry(\n      async () => {\n        try {\n          return await request(args)\n        } catch (err_) {\n          const err = err_ as unknown as RpcError<\n            RpcErrorCode | ProviderRpcErrorCode\n          >\n          switch (err.code) {\n            // -32700\n            case ParseRpcError.code:\n              throw new ParseRpcError(err)\n            // -32600\n            case InvalidRequestRpcError.code:\n              throw new InvalidRequestRpcError(err)\n            // -32601\n            case MethodNotFoundRpcError.code:\n              throw new MethodNotFoundRpcError(err)\n            // -32602\n            case InvalidParamsRpcError.code:\n              throw new InvalidParamsRpcError(err)\n            // -32603\n            case InternalRpcError.code:\n              throw new InternalRpcError(err)\n            // -32000\n            case InvalidInputRpcError.code:\n              throw new InvalidInputRpcError(err)\n            // -32001\n            case ResourceNotFoundRpcError.code:\n              throw new ResourceNotFoundRpcError(err)\n            // -32002\n            case ResourceUnavailableRpcError.code:\n              throw new ResourceUnavailableRpcError(err)\n            // -32003\n            case TransactionRejectedRpcError.code:\n              throw new TransactionRejectedRpcError(err)\n            // -32004\n            case MethodNotSupportedRpcError.code:\n              throw new MethodNotSupportedRpcError(err)\n            // -32005\n            case LimitExceededRpcError.code:\n              throw new LimitExceededRpcError(err)\n            // -32006\n            case JsonRpcVersionUnsupportedError.code:\n              throw new JsonRpcVersionUnsupportedError(err)\n            // 4001\n            case UserRejectedRequestError.code:\n              throw new UserRejectedRequestError(err)\n            // 4100\n            case UnauthorizedProviderError.code:\n              throw new UnauthorizedProviderError(err)\n            // 4200\n            case UnsupportedProviderMethodError.code:\n              throw new UnsupportedProviderMethodError(err)\n            // 4900\n            case ProviderDisconnectedError.code:\n              throw new ProviderDisconnectedError(err)\n            // 4901\n            case ChainDisconnectedError.code:\n              throw new ChainDisconnectedError(err)\n            // 4902\n            case SwitchChainError.code:\n              throw new SwitchChainError(err)\n            // CAIP-25: User Rejected Error\n            // https://docs.walletconnect.com/2.0/specs/clients/sign/error-codes#rejected-caip-25\n            case 5000:\n              throw new UserRejectedRequestError(err)\n            default:\n              if (err_ instanceof BaseError) throw err_\n              throw new UnknownRpcError(err as Error)\n          }\n        }\n      },\n      {\n        delay: ({ count, error }) => {\n          // If we find a Retry-After header, let's retry after the given time.\n          if (error && error instanceof HttpRequestError) {\n            const retryAfter = error?.headers?.get('Retry-After')\n            if (retryAfter?.match(/\\d/)) return parseInt(retryAfter) * 1000\n          }\n\n          // Otherwise, let's retry with an exponential backoff.\n          return ~~(1 << count) * retryDelay\n        },\n        retryCount,\n        shouldRetry: ({ error }) => !isDeterministicError(error),\n      },\n    )) as TRequest\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9560, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9566, "column": 0}, "map": {"version":3,"file":"createTransport.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/clients/transports/createTransport.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { EIP1193RequestFn } from '../../types/eip1193.js'\nimport { buildRequest } from '../../utils/buildRequest.js'\nimport type { ClientConfig } from '../createClient.js'\n\nexport type TransportConfig<\n  TType extends string = string,\n  TEIP1193RequestFn extends EIP1193RequestFn = EIP1193RequestFn,\n> = {\n  /** The name of the transport. */\n  name: string\n  /** The key of the transport. */\n  key: string\n  /** The JSON-RPC request function that matches the EIP-1193 request spec. */\n  request: TEIP1193RequestFn\n  /** The base delay (in ms) between retries. */\n  retryDelay?: number\n  /** The max number of times to retry. */\n  retryCount?: number\n  /** The timeout (in ms) for requests. */\n  timeout?: number\n  /** The type of the transport. */\n  type: TType\n}\n\nexport type Transport<\n  TType extends string = string,\n  TRpcAttributes = Record<string, any>,\n  TEIP1193RequestFn extends EIP1193RequestFn = EIP1193RequestFn,\n> = <TChain extends Chain | undefined = Chain>({\n  chain,\n}: {\n  chain?: TChain\n  pollingInterval?: ClientConfig['pollingInterval']\n  retryCount?: TransportConfig['retryCount']\n  timeout?: TransportConfig['timeout']\n}) => {\n  config: TransportConfig<TType>\n  request: TEIP1193RequestFn\n  value?: TRpcAttributes\n}\n\nexport type CreateTransportErrorType = ErrorType\n\n/**\n * @description Creates an transport intended to be used with a client.\n */\nexport function createTransport<\n  TType extends string,\n  TRpcAttributes extends Record<string, any>,\n>(\n  {\n    key,\n    name,\n    request,\n    retryCount = 3,\n    retryDelay = 150,\n    timeout,\n    type,\n  }: TransportConfig<TType>,\n  value?: TRpcAttributes,\n): ReturnType<Transport<TType, TRpcAttributes>> {\n  return {\n    config: { key, name, request, retryCount, retryDelay, timeout, type },\n    request: buildRequest(request, { retryCount, retryDelay }),\n    value,\n  }\n}\n"],"names":[],"mappings":";;;AAGA,OAAO,EAAE,YAAY,EAAE,MAAM,6BAA6B,CAAA;;AA6CpD,SAAU,eAAe,CAI7B,EACE,GAAG,EACH,IAAI,EACJ,OAAO,EACP,UAAU,GAAG,CAAC,EACd,UAAU,GAAG,GAAG,EAChB,OAAO,EACP,IAAI,EACmB,EACzB,KAAsB;IAEtB,OAAO;QACL,MAAM,EAAE;YAAE,GAAG;YAAE,IAAI;YAAE,OAAO;YAAE,UAAU;YAAE,UAAU;YAAE,OAAO;YAAE,IAAI;QAAA,CAAE;QACrE,OAAO,wOAAE,eAAA,AAAY,EAAC,OAAO,EAAE;YAAE,UAAU;YAAE,UAAU;QAAA,CAAE,CAAC;QAC1D,KAAK;KACN,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 9589, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9595, "column": 0}, "map": {"version":3,"file":"fallback.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/clients/transports/fallback.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport { isDeterministicError } from '../../utils/buildRequest.js'\nimport { wait } from '../../utils/wait.js'\n\nimport {\n  type CreateTransportErrorType,\n  type Transport,\n  type TransportConfig,\n  createTransport,\n} from './createTransport.js'\n// TODO: Narrow `method` & `params` types.\nexport type OnResponseFn = (\n  args: {\n    method: string\n    params: unknown[]\n    transport: ReturnType<Transport>\n  } & (\n    | {\n        error?: never\n        response: unknown\n        status: 'success'\n      }\n    | {\n        error: Error\n        response?: never\n        status: 'error'\n      }\n  ),\n) => void\n\ntype RankOptions = {\n  /**\n   * The polling interval (in ms) at which the ranker should ping the RPC URL.\n   * @default client.pollingInterval\n   */\n  interval?: number\n  /**\n   * The number of previous samples to perform ranking on.\n   * @default 10\n   */\n  sampleCount?: number\n  /**\n   * Timeout when sampling transports.\n   * @default 1_000\n   */\n  timeout?: number\n  /**\n   * Weights to apply to the scores. Weight values are proportional.\n   */\n  weights?: {\n    /**\n     * The weight to apply to the latency score.\n     * @default 0.3\n     */\n    latency?: number\n    /**\n     * The weight to apply to the stability score.\n     * @default 0.7\n     */\n    stability?: number\n  }\n}\n\nexport type FallbackTransportConfig = {\n  /** The key of the Fallback transport. */\n  key?: TransportConfig['key']\n  /** The name of the Fallback transport. */\n  name?: TransportConfig['name']\n  /** Toggle to enable ranking, or rank options. */\n  rank?: boolean | RankOptions\n  /** The max number of times to retry. */\n  retryCount?: TransportConfig['retryCount']\n  /** The base delay (in ms) between retries. */\n  retryDelay?: TransportConfig['retryDelay']\n}\n\nexport type FallbackTransport = Transport<\n  'fallback',\n  {\n    onResponse: (fn: OnResponseFn) => void\n    transports: ReturnType<Transport>[]\n  }\n>\n\nexport type FallbackTransportErrorType = CreateTransportErrorType | ErrorType\n\nexport function fallback(\n  transports_: Transport[],\n  config: FallbackTransportConfig = {},\n): FallbackTransport {\n  const {\n    key = 'fallback',\n    name = 'Fallback',\n    rank = false,\n    retryCount,\n    retryDelay,\n  } = config\n  return ({ chain, pollingInterval = 4_000, timeout }) => {\n    let transports = transports_\n\n    let onResponse: OnResponseFn = () => {}\n\n    const transport = createTransport(\n      {\n        key,\n        name,\n        async request({ method, params }) {\n          const fetch = async (i = 0): Promise<any> => {\n            const transport = transports[i]({ chain, retryCount: 0, timeout })\n            try {\n              const response = await transport.request({\n                method,\n                params,\n              } as any)\n\n              onResponse({\n                method,\n                params: params as unknown[],\n                response,\n                transport,\n                status: 'success',\n              })\n\n              return response\n            } catch (err) {\n              onResponse({\n                error: err as Error,\n                method,\n                params: params as unknown[],\n                transport,\n                status: 'error',\n              })\n\n              // If the error is deterministic, we don't need to fall back.\n              // So throw the error.\n              if (isDeterministicError(err as Error)) throw err\n\n              // If we've reached the end of the fallbacks, throw the error.\n              if (i === transports.length - 1) throw err\n\n              // Otherwise, try the next fallback.\n              return fetch(i + 1)\n            }\n          }\n          return fetch()\n        },\n        retryCount,\n        retryDelay,\n        type: 'fallback',\n      },\n      {\n        onResponse: (fn: OnResponseFn) => (onResponse = fn),\n        transports: transports.map((fn) => fn({ chain, retryCount: 0 })),\n      },\n    )\n\n    if (rank) {\n      const rankOptions = (typeof rank === 'object' ? rank : {}) as RankOptions\n      rankTransports({\n        chain,\n        interval: rankOptions.interval ?? pollingInterval,\n        onTransports: (transports_) => (transports = transports_),\n        sampleCount: rankOptions.sampleCount,\n        timeout: rankOptions.timeout,\n        transports,\n        weights: rankOptions.weights,\n      })\n    }\n    return transport\n  }\n}\n\nexport function rankTransports({\n  chain,\n  interval = 4_000,\n  onTransports,\n  sampleCount = 10,\n  timeout = 1_000,\n  transports,\n  weights = {},\n}: {\n  chain?: Chain\n  interval: RankOptions['interval']\n  onTransports: (transports: Transport[]) => void\n  sampleCount?: RankOptions['sampleCount']\n  timeout?: RankOptions['timeout']\n  transports: Transport[]\n  weights?: RankOptions['weights']\n}) {\n  const { stability: stabilityWeight = 0.7, latency: latencyWeight = 0.3 } =\n    weights\n\n  type SampleData = { latency: number; success: number }\n  type Sample = SampleData[]\n  const samples: Sample[] = []\n\n  const rankTransports_ = async () => {\n    // 1. Take a sample from each Transport.\n    const sample: Sample = await Promise.all(\n      transports.map(async (transport) => {\n        const transport_ = transport({ chain, retryCount: 0, timeout })\n\n        const start = Date.now()\n        let end\n        let success\n        try {\n          await transport_.request({ method: 'net_listening' })\n          success = 1\n        } catch {\n          success = 0\n        } finally {\n          end = Date.now()\n        }\n        const latency = end - start\n        return { latency, success }\n      }),\n    )\n\n    // 2. Store the sample. If we have more than `sampleCount` samples, remove\n    // the oldest sample.\n    samples.push(sample)\n    if (samples.length > sampleCount) samples.shift()\n\n    // 3. Calculate the max latency from samples.\n    const maxLatency = Math.max(\n      ...samples.map((sample) =>\n        Math.max(...sample.map(({ latency }) => latency)),\n      ),\n    )\n\n    // 4. Calculate the score for each Transport.\n    const scores = transports\n      .map((_, i) => {\n        const latencies = samples.map((sample) => sample[i].latency)\n        const meanLatency =\n          latencies.reduce((acc, latency) => acc + latency, 0) /\n          latencies.length\n        const latencyScore = 1 - meanLatency / maxLatency\n\n        const successes = samples.map((sample) => sample[i].success)\n        const stabilityScore =\n          successes.reduce((acc, success) => acc + success, 0) /\n          successes.length\n\n        if (stabilityScore === 0) return [0, i]\n        return [\n          latencyWeight * latencyScore + stabilityWeight * stabilityScore,\n          i,\n        ]\n      })\n      .sort((a, b) => b[0] - a[0])\n\n    // 5. Sort the Transports by score.\n    onTransports(scores.map(([, i]) => transports[i]))\n\n    // 6. Wait, and then rank again.\n    await wait(interval)\n    rankTransports_()\n  }\n  rankTransports_()\n}\n"],"names":[],"mappings":";;;;AAKA,OAAO,EAIL,eAAe,GAChB,MAAM,sBAAsB,CAAA;AAR7B,OAAO,EAAE,oBAAoB,EAAE,MAAM,6BAA6B,CAAA;AAClE,OAAO,EAAE,IAAI,EAAE,MAAM,qBAAqB,CAAA;;;;AAoFpC,SAAU,QAAQ,CACtB,WAAwB,EACxB,SAAkC,CAAA,CAAE;IAEpC,MAAM,EACJ,GAAG,GAAG,UAAU,EAChB,IAAI,GAAG,UAAU,EACjB,IAAI,GAAG,KAAK,EACZ,UAAU,EACV,UAAU,EACX,GAAG,MAAM,CAAA;IACV,OAAO,CAAC,EAAE,KAAK,EAAE,eAAe,GAAG,IAAK,EAAE,OAAO,EAAE,EAAE,EAAE;QACrD,IAAI,UAAU,GAAG,WAAW,CAAA;QAE5B,IAAI,UAAU,GAAiB,GAAG,EAAE,AAAE,CAAC,CAAA;QAEvC,MAAM,SAAS,OAAG,uQAAe,AAAf,EAChB;YACE,GAAG;YACH,IAAI;YACJ,KAAK,CAAC,OAAO,EAAC,EAAE,MAAM,EAAE,MAAM,EAAE;gBAC9B,MAAM,KAAK,GAAG,KAAK,EAAE,CAAC,GAAG,CAAC,EAAgB,EAAE;oBAC1C,MAAM,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;wBAAE,KAAK;wBAAE,UAAU,EAAE,CAAC;wBAAE,OAAO;oBAAA,CAAE,CAAC,CAAA;oBAClE,IAAI;wBACF,MAAM,QAAQ,GAAG,MAAM,SAAS,CAAC,OAAO,CAAC;4BACvC,MAAM;4BACN,MAAM;yBACA,CAAC,CAAA;wBAET,UAAU,CAAC;4BACT,MAAM;4BACN,MAAM,EAAE,MAAmB;4BAC3B,QAAQ;4BACR,SAAS;4BACT,MAAM,EAAE,SAAS;yBAClB,CAAC,CAAA;wBAEF,OAAO,QAAQ,CAAA;qBAChB,CAAC,OAAO,GAAG,EAAE;wBACZ,UAAU,CAAC;4BACT,KAAK,EAAE,GAAY;4BACnB,MAAM;4BACN,MAAM,EAAE,MAAmB;4BAC3B,SAAS;4BACT,MAAM,EAAE,OAAO;yBAChB,CAAC,CAAA;wBAEF,6DAA6D;wBAC7D,sBAAsB;wBACtB,0OAAI,uBAAoB,AAApB,EAAqB,GAAY,CAAC,EAAE,MAAM,GAAG,CAAA;wBAEjD,8DAA8D;wBAC9D,IAAI,CAAC,KAAK,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,CAAA;wBAE1C,oCAAoC;wBACpC,OAAO,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;qBACpB;gBACH,CAAC,CAAA;gBACD,OAAO,KAAK,EAAE,CAAA;YAChB,CAAC;YACD,UAAU;YACV,UAAU;YACV,IAAI,EAAE,UAAU;SACjB,EACD;YACE,UAAU,EAAE,CAAC,EAAgB,EAAE,CAAI,CAAF,CAAC,QAAW,GAAG,EAAE,CAAC;YACnD,UAAU,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAG,CAAD,CAAG,CAAC;oBAAE,KAAK;oBAAE,UAAU,EAAE,CAAC;gBAAA,CAAE,CAAC,CAAC;SACjE,CACF,CAAA;QAED,IAAI,IAAI,EAAE;YACR,MAAM,WAAW,GAAG,AAAC,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA,CAAE,CAAgB,CAAA;YACzE,cAAc,CAAC;gBACb,KAAK;gBACL,QAAQ,EAAE,WAAW,CAAC,QAAQ,IAAI,eAAe;gBACjD,YAAY,EAAE,CAAC,WAAW,EAAE,CAAI,CAAF,CAAC,QAAW,GAAG,WAAW,CAAC;gBACzD,WAAW,EAAE,WAAW,CAAC,WAAW;gBACpC,OAAO,EAAE,WAAW,CAAC,OAAO;gBAC5B,UAAU;gBACV,OAAO,EAAE,WAAW,CAAC,OAAO;aAC7B,CAAC,CAAA;SACH;QACD,OAAO,SAAS,CAAA;IAClB,CAAC,CAAA;AACH,CAAC;AAEK,SAAU,cAAc,CAAC,EAC7B,KAAK,EACL,QAAQ,GAAG,IAAK,EAChB,YAAY,EACZ,WAAW,GAAG,EAAE,EAChB,OAAO,GAAG,IAAK,EACf,UAAU,EACV,OAAO,GAAG,CAAA,CAAE,EASb;IACC,MAAM,EAAE,SAAS,EAAE,eAAe,GAAG,GAAG,EAAE,OAAO,EAAE,aAAa,GAAG,GAAG,EAAE,GACtE,OAAO,CAAA;IAIT,MAAM,OAAO,GAAa,EAAE,CAAA;IAE5B,MAAM,eAAe,GAAG,KAAK,IAAI,EAAE;QACjC,wCAAwC;QACxC,MAAM,MAAM,GAAW,MAAM,OAAO,CAAC,GAAG,CACtC,UAAU,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,EAAE,EAAE;YACjC,MAAM,UAAU,GAAG,SAAS,CAAC;gBAAE,KAAK;gBAAE,UAAU,EAAE,CAAC;gBAAE,OAAO;YAAA,CAAE,CAAC,CAAA;YAE/D,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;YACxB,IAAI,GAAG,CAAA;YACP,IAAI,OAAO,CAAA;YACX,IAAI;gBACF,MAAM,UAAU,CAAC,OAAO,CAAC;oBAAE,MAAM,EAAE,eAAe;gBAAA,CAAE,CAAC,CAAA;gBACrD,OAAO,GAAG,CAAC,CAAA;aACZ,CAAC,OAAM;gBACN,OAAO,GAAG,CAAC,CAAA;aACZ,QAAS;gBACR,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;aACjB;YACD,MAAM,OAAO,GAAG,GAAG,GAAG,KAAK,CAAA;YAC3B,OAAO;gBAAE,OAAO;gBAAE,OAAO;YAAA,CAAE,CAAA;QAC7B,CAAC,CAAC,CACH,CAAA;QAED,0EAA0E;QAC1E,qBAAqB;QACrB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QACpB,IAAI,OAAO,CAAC,MAAM,GAAG,WAAW,EAAE,OAAO,CAAC,KAAK,EAAE,CAAA;QAEjD,6CAA6C;QAC7C,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CACzB,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CACtB,CADwB,GACpB,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,CAAG,CAAD,MAAQ,CAAC,CAAC,CAClD,CACF,CAAA;QAED,6CAA6C;QAC7C,MAAM,MAAM,GAAG,UAAU,CACtB,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YACZ,MAAM,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAG,CAAD,KAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAA;YAC5D,MAAM,WAAW,GACf,SAAS,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,OAAO,EAAE,CAAG,CAAD,EAAI,GAAG,OAAO,EAAE,CAAC,CAAC,GACpD,SAAS,CAAC,MAAM,CAAA;YAClB,MAAM,YAAY,GAAG,CAAC,GAAG,WAAW,GAAG,UAAU,CAAA;YAEjD,MAAM,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAG,CAAD,KAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAA;YAC5D,MAAM,cAAc,GAClB,SAAS,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,OAAO,EAAE,CAAG,CAAD,EAAI,GAAG,OAAO,EAAE,CAAC,CAAC,GACpD,SAAS,CAAC,MAAM,CAAA;YAElB,IAAI,cAAc,KAAK,CAAC,EAAE,OAAO;gBAAC,CAAC;gBAAE,CAAC;aAAC,CAAA;YACvC,OAAO;gBACL,aAAa,GAAG,YAAY,GAAG,eAAe,GAAG,cAAc;gBAC/D,CAAC;aACF,CAAA;QACH,CAAC,CAAC,CACD,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAG,CAAD,AAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QAE9B,mCAAmC;QACnC,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAG,CAAD,SAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QAElD,gCAAgC;QAChC,oOAAM,OAAA,AAAI,EAAC,QAAQ,CAAC,CAAA;QACpB,eAAe,EAAE,CAAA;IACnB,CAAC,CAAA;IACD,eAAe,EAAE,CAAA;AACnB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 9737, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9743, "column": 0}, "map": {"version":3,"file":"transport.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/errors/transport.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type UrlRequiredErrorType = UrlRequiredError & {\n  name: 'UrlRequiredError'\n}\nexport class UrlRequiredError extends BaseError {\n  constructor() {\n    super(\n      'No URL was provided to the Transport. Please provide a valid RPC URL to the Transport.',\n      {\n        docsPath: '/docs/clients/intro',\n      },\n    )\n  }\n}\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;;AAK/B,MAAO,gBAAiB,oOAAQ,YAAS;IAC7C,aAAA;QACE,KAAK,CACH,wFAAwF,EACxF;YACE,QAAQ,EAAE,qBAAqB;SAChC,CACF,CAAA;IACH,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 9755, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9761, "column": 0}, "map": {"version":3,"file":"withTimeout.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/promise/withTimeout.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\n\nexport type WithTimeoutErrorType = ErrorType\n\nexport function withTimeout<TData>(\n  fn: ({ signal }: { signal?: AbortController['signal'] }) => Promise<TData>,\n  {\n    errorInstance = new Error('timed out'),\n    timeout,\n    signal,\n  }: {\n    // The error instance to throw when the timeout is reached.\n    errorInstance?: Error\n    // The timeout (in ms).\n    timeout: number\n    // Whether or not the timeout should use an abort signal.\n    signal?: boolean\n  },\n): Promise<TData> {\n  return new Promise((resolve, reject) => {\n    ;(async () => {\n      let timeoutId!: NodeJS.Timeout\n      try {\n        const controller = new AbortController()\n        if (timeout > 0) {\n          timeoutId = setTimeout(() => {\n            if (signal) {\n              controller.abort()\n            } else {\n              reject(errorInstance)\n            }\n          }, timeout)\n        }\n        resolve(await fn({ signal: controller?.signal }))\n      } catch (err) {\n        if ((err as Error).name === 'AbortError') reject(errorInstance)\n        reject(err)\n      } finally {\n        clearTimeout(timeoutId)\n      }\n    })()\n  })\n}\n"],"names":[],"mappings":";;;AAIM,SAAU,WAAW,CACzB,EAA0E,EAC1E,EACE,aAAa,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,EACtC,OAAO,EACP,MAAM,EAQP;IAED,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;;QACpC,CAAC,KAAK,IAAI,EAAE;YACX,IAAI,SAA0B,CAAA;YAC9B,IAAI;gBACF,MAAM,UAAU,GAAG,IAAI,eAAe,EAAE,CAAA;gBACxC,IAAI,OAAO,GAAG,CAAC,EAAE;oBACf,SAAS,GAAG,UAAU,CAAC,GAAG,EAAE;wBAC1B,IAAI,MAAM,EAAE;4BACV,UAAU,CAAC,KAAK,EAAE,CAAA;yBACnB,MAAM;4BACL,MAAM,CAAC,aAAa,CAAC,CAAA;yBACtB;oBACH,CAAC,EAAE,OAAO,CAAC,CAAA;iBACZ;gBACD,OAAO,CAAC,MAAM,EAAE,CAAC;oBAAE,MAAM,EAAE,UAAU,EAAE,MAAM;gBAAA,CAAE,CAAC,CAAC,CAAA;aAClD,CAAC,OAAO,GAAG,EAAE;gBACZ,IAAK,GAAa,CAAC,IAAI,KAAK,YAAY,EAAE,MAAM,CAAC,aAAa,CAAC,CAAA;gBAC/D,MAAM,CAAC,GAAG,CAAC,CAAA;aACZ,QAAS;gBACR,YAAY,CAAC,SAAS,CAAC,CAAA;aACxB;QACH,CAAC,CAAC,EAAE,CAAA;IACN,CAAC,CAAC,CAAA;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 9792, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9798, "column": 0}, "map": {"version":3,"file":"rpc.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/rpc.ts"],"sourcesContent":["import { WebSocket } from 'isows'\nimport type { MessageEvent } from 'isows'\n\nimport {\n  HttpRequestError,\n  type HttpRequestErrorType,\n  TimeoutError,\n  type TimeoutErrorType,\n  WebSocketRequestError,\n} from '../errors/request.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport {\n  type CreateBatchSchedulerErrorType,\n  createBatchScheduler,\n} from './promise/createBatchScheduler.js'\nimport {\n  type WithTimeoutErrorType,\n  withTimeout,\n} from './promise/withTimeout.js'\nimport { stringify } from './stringify.js'\n\nlet id = 0\n\ntype SuccessResult<T> = {\n  method?: never\n  result: T\n  error?: never\n}\ntype ErrorResult<T> = {\n  method?: never\n  result?: never\n  error: T\n}\ntype Subscription<TResult, TError> = {\n  method: 'eth_subscription'\n  error?: never\n  result?: never\n  params: {\n    subscription: string\n  } & (\n    | {\n        result: TResult\n        error?: never\n      }\n    | {\n        result?: never\n        error: TError\n      }\n  )\n}\n\nexport type RpcRequest = { method: string; params?: any; id?: number }\n\nexport type RpcResponse<TResult = any, TError = any> = {\n  jsonrpc: `${number}`\n  id: number\n} & (\n  | SuccessResult<TResult>\n  | ErrorResult<TError>\n  | Subscription<TResult, TError>\n)\n\n///////////////////////////////////////////////////\n// HTTP\n\nexport type HttpOptions<TBody extends RpcRequest | RpcRequest[] = RpcRequest> =\n  {\n    // The RPC request body.\n    body: TBody\n    // Request configuration to pass to `fetch`.\n    fetchOptions?: Omit<RequestInit, 'body'>\n    // The timeout (in ms) for the request.\n    timeout?: number\n  }\n\nexport type HttpReturnType<\n  TBody extends RpcRequest | RpcRequest[] = RpcRequest,\n> = TBody extends RpcRequest[] ? RpcResponse[] : RpcResponse\n\nexport type HttpErrorType =\n  | HttpRequestErrorType\n  | TimeoutErrorType\n  | WithTimeoutErrorType\n  | ErrorType\n\nasync function http<TBody extends RpcRequest | RpcRequest[]>(\n  url: string,\n  { body, fetchOptions = {}, timeout = 10_000 }: HttpOptions<TBody>,\n): Promise<HttpReturnType<TBody>> {\n  const { headers, method, signal: signal_ } = fetchOptions\n  try {\n    const response = await withTimeout(\n      async ({ signal }) => {\n        const response = await fetch(url, {\n          ...fetchOptions,\n          body: Array.isArray(body)\n            ? stringify(\n                body.map((body) => ({\n                  jsonrpc: '2.0',\n                  id: body.id ?? id++,\n                  ...body,\n                })),\n              )\n            : stringify({ jsonrpc: '2.0', id: body.id ?? id++, ...body }),\n          headers: {\n            ...headers,\n            'Content-Type': 'application/json',\n          },\n          method: method || 'POST',\n          signal: signal_ || (timeout > 0 ? signal : undefined),\n        })\n        return response\n      },\n      {\n        errorInstance: new TimeoutError({ body, url }),\n        timeout,\n        signal: true,\n      },\n    )\n\n    let data\n    if (response.headers.get('Content-Type')?.startsWith('application/json')) {\n      data = await response.json()\n    } else {\n      data = await response.text()\n    }\n\n    if (!response.ok) {\n      throw new HttpRequestError({\n        body,\n        details: stringify(data.error) || response.statusText,\n        headers: response.headers,\n        status: response.status,\n        url,\n      })\n    }\n\n    return data\n  } catch (err) {\n    if (err instanceof HttpRequestError) throw err\n    if (err instanceof TimeoutError) throw err\n    throw new HttpRequestError({\n      body,\n      details: (err as Error).message,\n      url,\n    })\n  }\n}\n\n///////////////////////////////////////////////////\n// WebSocket\n\ntype Id = string | number\ntype CallbackFn = (message: any) => void\ntype CallbackMap = Map<Id, CallbackFn>\n\nexport type Socket = WebSocket & {\n  requests: CallbackMap\n  subscriptions: CallbackMap\n}\n\nexport type GetSocketErrorType = CreateBatchSchedulerErrorType | ErrorType\n\nexport const socketsCache = /*#__PURE__*/ new Map<string, Socket>()\n\nexport async function getSocket(url: string) {\n  let socket = socketsCache.get(url)\n\n  // If the socket already exists, return it.\n  if (socket) return socket\n\n  const { schedule } = createBatchScheduler<undefined, [Socket]>({\n    id: url,\n    fn: async () => {\n      const webSocket = new WebSocket(url)\n\n      // Set up a cache for incoming \"synchronous\" requests.\n      const requests = new Map<Id, CallbackFn>()\n\n      // Set up a cache for subscriptions (eth_subscribe).\n      const subscriptions = new Map<Id, CallbackFn>()\n\n      const onMessage: (event: MessageEvent) => void = ({ data }) => {\n        const message: RpcResponse = JSON.parse(data as string)\n        const isSubscription = message.method === 'eth_subscription'\n        const id = isSubscription ? message.params.subscription : message.id\n        const cache = isSubscription ? subscriptions : requests\n        const callback = cache.get(id)\n        if (callback) callback({ data })\n        if (!isSubscription) cache.delete(id)\n      }\n      const onClose = () => {\n        socketsCache.delete(url)\n        webSocket.removeEventListener('close', onClose)\n        webSocket.removeEventListener('message', onMessage)\n      }\n\n      // Setup event listeners for RPC & subscription responses.\n      webSocket.addEventListener('close', onClose)\n      webSocket.addEventListener('message', onMessage)\n\n      // Wait for the socket to open.\n      if (webSocket.readyState === WebSocket.CONNECTING) {\n        await new Promise((resolve, reject) => {\n          if (!webSocket) return\n          webSocket.onopen = resolve\n          webSocket.onerror = reject\n        })\n      }\n\n      // Create a new socket instance.\n      socket = Object.assign(webSocket, {\n        requests,\n        subscriptions,\n      })\n      socketsCache.set(url, socket)\n\n      return [socket]\n    },\n  })\n\n  const [_, [socket_]] = await schedule()\n  return socket_\n}\n\nexport type WebSocketOptions = {\n  /** The RPC request body. */\n  body: RpcRequest\n  /** The callback to invoke on response. */\n  onResponse?: (message: RpcResponse) => void\n}\n\nexport type WebSocketReturnType = Socket\n\nexport type WebSocketErrorType = WebSocketRequestError | ErrorType\n\nfunction webSocket(\n  socket: Socket,\n  { body, onResponse }: WebSocketOptions,\n): WebSocketReturnType {\n  if (\n    socket.readyState === socket.CLOSED ||\n    socket.readyState === socket.CLOSING\n  )\n    throw new WebSocketRequestError({\n      body,\n      url: socket.url,\n      details: 'Socket is closed.',\n    })\n\n  const id_ = id++\n\n  const callback = ({ data }: { data: any }) => {\n    const message: RpcResponse = JSON.parse(data)\n\n    if (typeof message.id === 'number' && id_ !== message.id) return\n\n    onResponse?.(message)\n\n    // If we are subscribing to a topic, we want to set up a listener for incoming\n    // messages.\n    if (body.method === 'eth_subscribe' && typeof message.result === 'string') {\n      socket.subscriptions.set(message.result, callback)\n    }\n\n    // If we are unsubscribing from a topic, we want to remove the listener.\n    if (body.method === 'eth_unsubscribe') {\n      socket.subscriptions.delete(body.params?.[0])\n    }\n  }\n  socket.requests.set(id_, callback)\n\n  socket.send(JSON.stringify({ jsonrpc: '2.0', ...body, id: id_ }))\n\n  return socket\n}\n\nexport type WebSocketAsyncOptions = {\n  /** The RPC request body. */\n  body: RpcRequest\n  /** The timeout (in ms) for the request. */\n  timeout?: number\n}\n\nexport type WebSocketAsyncReturnType = RpcResponse\n\nexport type WebSocketAsyncErrorType =\n  | WebSocketErrorType\n  | TimeoutErrorType\n  | WithTimeoutErrorType\n  | ErrorType\n\nasync function webSocketAsync(\n  socket: Socket,\n  { body, timeout = 10_000 }: WebSocketAsyncOptions,\n): Promise<WebSocketAsyncReturnType> {\n  return withTimeout(\n    () =>\n      new Promise<RpcResponse>((onResponse) =>\n        rpc.webSocket(socket, {\n          body,\n          onResponse,\n        }),\n      ),\n    {\n      errorInstance: new TimeoutError({ body, url: socket.url }),\n      timeout,\n    },\n  )\n}\n\n///////////////////////////////////////////////////\n\nexport const rpc = {\n  http,\n  webSocket,\n  webSocketAsync,\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9971, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9977, "column": 0}, "map": {"version":3,"file":"http.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/clients/transports/http.ts"],"sourcesContent":["import { RpcRequestError } from '../../errors/request.js'\nimport {\n  UrlRequiredError,\n  type UrlRequiredErrorType,\n} from '../../errors/transport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport { createBatchScheduler } from '../../utils/promise/createBatchScheduler.js'\nimport { type HttpOptions, type RpcRequest, rpc } from '../../utils/rpc.js'\n\nimport {\n  type CreateTransportErrorType,\n  type Transport,\n  type TransportConfig,\n  createTransport,\n} from './createTransport.js'\n\nexport type BatchOptions = {\n  /** The maximum number of JSON-RPC requests to send in a batch. @default 1_000 */\n  batchSize?: number\n  /** The maximum number of milliseconds to wait before sending a batch. @default 0 */\n  wait?: number\n}\n\nexport type HttpTransportConfig = {\n  /**\n   * Whether to enable Batch JSON-RPC.\n   * @link https://www.jsonrpc.org/specification#batch\n   */\n  batch?: boolean | BatchOptions\n  /**\n   * Request configuration to pass to `fetch`.\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/fetch\n   */\n  fetchOptions?: HttpOptions['fetchOptions']\n  /** The key of the HTTP transport. */\n  key?: TransportConfig['key']\n  /** The name of the HTTP transport. */\n  name?: TransportConfig['name']\n  /** The max number of times to retry. */\n  retryCount?: TransportConfig['retryCount']\n  /** The base delay (in ms) between retries. */\n  retryDelay?: TransportConfig['retryDelay']\n  /** The timeout (in ms) for the HTTP request. Default: 10_000 */\n  timeout?: TransportConfig['timeout']\n}\n\nexport type HttpTransport = Transport<\n  'http',\n  {\n    fetchOptions?: HttpTransportConfig['fetchOptions']\n    url?: string\n  }\n>\n\nexport type HttpTransportErrorType =\n  | CreateTransportErrorType\n  | UrlRequiredErrorType\n  | ErrorType\n\n/**\n * @description Creates a HTTP transport that connects to a JSON-RPC API.\n */\nexport function http(\n  /** URL of the JSON-RPC API. Defaults to the chain's public RPC URL. */\n  url?: string,\n  config: HttpTransportConfig = {},\n): HttpTransport {\n  const {\n    batch,\n    fetchOptions,\n    key = 'http',\n    name = 'HTTP JSON-RPC',\n    retryDelay,\n  } = config\n  return ({ chain, retryCount: retryCount_, timeout: timeout_ }) => {\n    const { batchSize = 1000, wait = 0 } =\n      typeof batch === 'object' ? batch : {}\n    const retryCount = config.retryCount ?? retryCount_\n    const timeout = timeout_ ?? config.timeout ?? 10_000\n    const url_ = url || chain?.rpcUrls.default.http[0]\n    if (!url_) throw new UrlRequiredError()\n    return createTransport(\n      {\n        key,\n        name,\n        async request({ method, params }) {\n          const body = { method, params }\n\n          const { schedule } = createBatchScheduler({\n            id: `${url}`,\n            wait,\n            shouldSplitBatch(requests) {\n              return requests.length > batchSize\n            },\n            fn: (body: RpcRequest[]) =>\n              rpc.http(url_, {\n                body,\n                fetchOptions,\n                timeout,\n              }),\n            sort: (a, b) => a.id - b.id,\n          })\n\n          const fn = async (body: RpcRequest) =>\n            batch\n              ? schedule(body)\n              : [await rpc.http(url_, { body, fetchOptions, timeout })]\n\n          const [{ error, result }] = await fn(body)\n          if (error)\n            throw new RpcRequestError({\n              body,\n              error,\n              url: url_,\n            })\n          return result\n        },\n        retryCount,\n        retryDelay,\n        timeout,\n        type: 'http',\n      },\n      {\n        fetchOptions,\n        url,\n      },\n    )\n  }\n}\n"],"names":[],"mappings":";;;AACA,OAAO,EACL,gBAAgB,GAEjB,MAAM,2BAA2B,CAAA;AAKlC,OAAO,EAIL,eAAe,GAChB,MAAM,sBAAsB,CAAA;AAR7B,OAAO,EAAE,oBAAoB,EAAE,MAAM,6CAA6C,CAAA;AAClF,OAAO,EAAqC,GAAG,EAAE,MAAM,oBAAoB,CAAA;AAP3E,OAAO,EAAE,eAAe,EAAE,MAAM,yBAAyB,CAAA;;;;;;AA8DnD,SAAU,IAAI,CAClB,qEAAA,EAAuE,CACvE,GAAY,EACZ,SAA8B,CAAA,CAAE;IAEhC,MAAM,EACJ,KAAK,EACL,YAAY,EACZ,GAAG,GAAG,MAAM,EACZ,IAAI,GAAG,eAAe,EACtB,UAAU,EACX,GAAG,MAAM,CAAA;IACV,OAAO,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,WAAW,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,EAAE;QAC/D,MAAM,EAAE,SAAS,GAAG,IAAI,EAAE,IAAI,GAAG,CAAC,EAAE,GAClC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA,CAAE,CAAA;QACxC,MAAM,UAAU,GAAG,MAAM,CAAC,UAAU,IAAI,WAAW,CAAA;QACnD,MAAM,OAAO,GAAG,QAAQ,IAAI,MAAM,CAAC,OAAO,IAAI,KAAM,CAAA;QACpD,MAAM,IAAI,GAAG,GAAG,IAAI,KAAK,EAAE,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;QAClD,IAAI,CAAC,IAAI,EAAE,MAAM,oOAAI,mBAAgB,EAAE,CAAA;QACvC,gQAAO,kBAAA,AAAe,EACpB;YACE,GAAG;YACH,IAAI;YACJ,KAAK,CAAC,OAAO,EAAC,EAAE,MAAM,EAAE,MAAM,EAAE;gBAC9B,MAAM,IAAI,GAAG;oBAAE,MAAM;oBAAE,MAAM;gBAAA,CAAE,CAAA;gBAE/B,MAAM,EAAE,QAAQ,EAAE,4PAAG,uBAAoB,AAApB,EAAqB;oBACxC,EAAE,EAAE,GAAG,GAAG,EAAE;oBACZ,IAAI;oBACJ,gBAAgB,EAAC,QAAQ;wBACvB,OAAO,QAAQ,CAAC,MAAM,GAAG,SAAS,CAAA;oBACpC,CAAC;oBACD,EAAE,EAAE,CAAC,IAAkB,EAAE,EAAE,wNACzB,MAAG,CAAC,IAAI,CAAC,IAAI,EAAE;4BACb,IAAI;4BACJ,YAAY;4BACZ,OAAO;yBACR,CAAC;oBACJ,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAG,CAAD,AAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;iBAC5B,CAAC,CAAA;gBAEF,MAAM,EAAE,GAAG,KAAK,EAAE,IAAgB,EAAE,CAClC,CADoC,IAC/B,GACD,QAAQ,CAAC,IAAI,CAAC,GACd;wBAAC,+NAAM,MAAG,CAAC,IAAI,CAAC,IAAI,EAAE;4BAAE,IAAI;4BAAE,YAAY;4BAAE,OAAO;wBAAA,CAAE,CAAC;qBAAC,CAAA;gBAE7D,MAAM,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,CAAA;gBAC1C,IAAI,KAAK,EACP,MAAM,kOAAI,kBAAe,CAAC;oBACxB,IAAI;oBACJ,KAAK;oBACL,GAAG,EAAE,IAAI;iBACV,CAAC,CAAA;gBACJ,OAAO,MAAM,CAAA;YACf,CAAC;YACD,UAAU;YACV,UAAU;YACV,OAAO;YACP,IAAI,EAAE,MAAM;SACb,EACD;YACE,YAAY;YACZ,GAAG;SACJ,CACF,CAAA;IACH,CAAC,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10044, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10050, "column": 0}, "map": {"version":3,"file":"webSocket.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/clients/transports/webSocket.ts"],"sourcesContent":["import { RpcRequestError } from '../../errors/request.js'\nimport {\n  UrlRequiredError,\n  type UrlRequiredErrorType,\n} from '../../errors/transport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hash } from '../../types/misc.js'\nimport { type RpcResponse, getSocket, rpc } from '../../utils/rpc.js'\nimport {\n  type CreateTransportErrorType,\n  type Transport,\n  type TransportConfig,\n  createTransport,\n} from './createTransport.js'\n\ntype WebSocketTransportSubscribeParameters = {\n  onData: (data: RpcResponse) => void\n  onError?: (error: any) => void\n}\n\ntype WebSocketTransportSubscribeReturnType = {\n  subscriptionId: Hash\n  unsubscribe: () => Promise<RpcResponse<boolean>>\n}\n\ntype WebSocketTransportSubscribe = {\n  subscribe(\n    args: WebSocketTransportSubscribeParameters & {\n      /**\n       * @description Add information about compiled contracts\n       * @link https://hardhat.org/hardhat-network/docs/reference#hardhat_addcompilationresult\n       */\n      params: ['newHeads']\n    },\n  ): Promise<WebSocketTransportSubscribeReturnType>\n}\n\nexport type WebSocketTransportConfig = {\n  /** The key of the WebSocket transport. */\n  key?: TransportConfig['key']\n  /** The name of the WebSocket transport. */\n  name?: TransportConfig['name']\n  /** The max number of times to retry. */\n  retryCount?: TransportConfig['retryCount']\n  /** The base delay (in ms) between retries. */\n  retryDelay?: TransportConfig['retryDelay']\n  /** The timeout (in ms) for async WebSocket requests. Default: 10_000 */\n  timeout?: TransportConfig['timeout']\n}\n\nexport type WebSocketTransport = Transport<\n  'webSocket',\n  {\n    getSocket(): Promise<WebSocket>\n    subscribe: WebSocketTransportSubscribe['subscribe']\n  }\n>\n\nexport type WebSocketTransportErrorType =\n  | CreateTransportErrorType\n  | UrlRequiredErrorType\n  | ErrorType\n\n/**\n * @description Creates a WebSocket transport that connects to a JSON-RPC API.\n */\nexport function webSocket(\n  /** URL of the JSON-RPC API. Defaults to the chain's public RPC URL. */\n  url?: string,\n  config: WebSocketTransportConfig = {},\n): WebSocketTransport {\n  const { key = 'webSocket', name = 'WebSocket JSON-RPC', retryDelay } = config\n  return ({ chain, retryCount: retryCount_, timeout: timeout_ }) => {\n    const retryCount = config.retryCount ?? retryCount_\n    const timeout = timeout_ ?? config.timeout ?? 10_000\n    const url_ = url || chain?.rpcUrls.default.webSocket?.[0]\n    if (!url_) throw new UrlRequiredError()\n    return createTransport(\n      {\n        key,\n        name,\n        async request({ method, params }) {\n          const body = { method, params }\n          const socket = await getSocket(url_)\n          const { error, result } = await rpc.webSocketAsync(socket, {\n            body,\n            timeout,\n          })\n          if (error)\n            throw new RpcRequestError({\n              body,\n              error,\n              url: url_,\n            })\n          return result\n        },\n        retryCount,\n        retryDelay,\n        timeout,\n        type: 'webSocket',\n      },\n      {\n        getSocket() {\n          return getSocket(url_)\n        },\n        async subscribe({ params, onData, onError }: any) {\n          const socket = await getSocket(url_)\n          const { result: subscriptionId } = await new Promise<any>(\n            (resolve, reject) =>\n              rpc.webSocket(socket, {\n                body: {\n                  method: 'eth_subscribe',\n                  params,\n                },\n                onResponse(response) {\n                  if (response.error) {\n                    reject(response.error)\n                    onError?.(response.error)\n                    return\n                  }\n\n                  if (typeof response.id === 'number') {\n                    resolve(response)\n                    return\n                  }\n                  if (response.method !== 'eth_subscription') return\n                  onData(response.params)\n                },\n              }),\n          )\n          return {\n            subscriptionId,\n            async unsubscribe() {\n              return new Promise<any>((resolve) =>\n                rpc.webSocket(socket, {\n                  body: {\n                    method: 'eth_unsubscribe',\n                    params: [subscriptionId],\n                  },\n                  onResponse: resolve,\n                }),\n              )\n            },\n          }\n        },\n      },\n    )\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 10135, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10141, "column": 0}, "map": {"version":3,"file":"defineChain.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/chain/defineChain.ts"],"sourcesContent":["import type { Chain, ChainConfig, ChainFormatters } from '../../types/chain.js'\nimport type { Assign } from '../../types/utils.js'\n\nexport function defineChain<\n  const chain extends Chain,\n  formatters extends ChainFormatters | undefined = undefined,\n>(\n  chain: chain,\n  config: ChainConfig<formatters> = {},\n): Assign<chain, ChainConfig<formatters>> {\n  const {\n    fees = chain.fees,\n    formatters = chain.formatters,\n    serializers = chain.serializers,\n  } = config\n  return {\n    ...chain,\n    fees,\n    formatters,\n    serializers,\n  } as unknown as Assign<chain, ChainConfig<formatters>>\n}\n"],"names":[],"mappings":";;;AAGM,SAAU,WAAW,CAIzB,KAAY,EACZ,SAAkC,CAAA,CAAE;IAEpC,MAAM,EACJ,IAAI,GAAG,KAAK,CAAC,IAAI,EACjB,UAAU,GAAG,KAAK,CAAC,UAAU,EAC7B,WAAW,GAAG,KAAK,CAAC,WAAW,EAChC,GAAG,MAAM,CAAA;IACV,OAAO;QACL,GAAG,KAAK;QACR,IAAI;QACJ,UAAU;QACV,WAAW;KACyC,CAAA;AACxD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10153, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10159, "column": 0}, "map": {"version":3,"file":"mainnet.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/chains/definitions/mainnet.ts"],"sourcesContent":["import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const mainnet = /*#__PURE__*/ defineChain({\n  id: 1,\n  network: 'homestead',\n  name: 'Ethereum',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    alchemy: {\n      http: ['https://eth-mainnet.g.alchemy.com/v2'],\n      webSocket: ['wss://eth-mainnet.g.alchemy.com/v2'],\n    },\n    infura: {\n      http: ['https://mainnet.infura.io/v3'],\n      webSocket: ['wss://mainnet.infura.io/ws/v3'],\n    },\n    default: {\n      http: ['https://cloudflare-eth.com'],\n    },\n    public: {\n      http: ['https://cloudflare-eth.com'],\n    },\n  },\n  blockExplorers: {\n    etherscan: {\n      name: 'Etherscan',\n      url: 'https://etherscan.io',\n    },\n    default: {\n      name: 'Etherscan',\n      url: 'https://etherscan.io',\n    },\n  },\n  contracts: {\n    ensRegistry: {\n      address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n    },\n    ensUniversalResolver: {\n      address: '0xc0497E381f536Be9ce14B0dD3817cBcAe57d2F62',\n      blockCreated: 16966585,\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 14353601,\n    },\n  },\n})\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,kCAAkC,CAAA;;AAEvD,MAAM,OAAO,GAAG,WAAA,EAAa,+OAAC,cAAA,AAAW,EAAC;IAC/C,EAAE,EAAE,CAAC;IACL,OAAO,EAAE,WAAW;IACpB,IAAI,EAAE,UAAU;IAChB,cAAc,EAAE;QAAE,IAAI,EAAE,OAAO;QAAE,MAAM,EAAE,KAAK;QAAE,QAAQ,EAAE,EAAE;IAAA,CAAE;IAC9D,OAAO,EAAE;QACP,OAAO,EAAE;YACP,IAAI,EAAE;gBAAC,sCAAsC;aAAC;YAC9C,SAAS,EAAE;gBAAC,oCAAoC;aAAC;SAClD;QACD,MAAM,EAAE;YACN,IAAI,EAAE;gBAAC,8BAA8B;aAAC;YACtC,SAAS,EAAE;gBAAC,+BAA+B;aAAC;SAC7C;QACD,OAAO,EAAE;YACP,IAAI,EAAE;gBAAC,4BAA4B;aAAC;SACrC;QACD,MAAM,EAAE;YACN,IAAI,EAAE;gBAAC,4BAA4B;aAAC;SACrC;KACF;IACD,cAAc,EAAE;QACd,SAAS,EAAE;YACT,IAAI,EAAE,WAAW;YACjB,GAAG,EAAE,sBAAsB;SAC5B;QACD,OAAO,EAAE;YACP,IAAI,EAAE,WAAW;YACjB,GAAG,EAAE,sBAAsB;SAC5B;KACF;IACD,SAAS,EAAE;QACT,WAAW,EAAE;YACX,OAAO,EAAE,4CAA4C;SACtD;QACD,oBAAoB,EAAE;YACpB,OAAO,EAAE,4CAA4C;YACrD,YAAY,EAAE,QAAQ;SACvB;QACD,UAAU,EAAE;YACV,OAAO,EAAE,4CAA4C;YACrD,YAAY,EAAE,QAAQ;SACvB;KACF;CACF,CAAC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 10225, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10231, "column": 0}, "map": {"version":3,"file":"goerli.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/chains/definitions/goerli.ts"],"sourcesContent":["import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const goerli = /*#__PURE__*/ defineChain({\n  id: 5,\n  network: 'goerli',\n  name: 'Goerli',\n  nativeCurrency: { name: 'Goerli Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    alchemy: {\n      http: ['https://eth-goerli.g.alchemy.com/v2'],\n      webSocket: ['wss://eth-goerli.g.alchemy.com/v2'],\n    },\n    infura: {\n      http: ['https://goerli.infura.io/v3'],\n      webSocket: ['wss://goerli.infura.io/ws/v3'],\n    },\n    default: {\n      http: ['https://rpc.ankr.com/eth_goerli'],\n    },\n    public: {\n      http: ['https://rpc.ankr.com/eth_goerli'],\n    },\n  },\n  blockExplorers: {\n    etherscan: {\n      name: 'Etherscan',\n      url: 'https://goerli.etherscan.io',\n    },\n    default: {\n      name: 'Etherscan',\n      url: 'https://goerli.etherscan.io',\n    },\n  },\n  contracts: {\n    ensRegistry: {\n      address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n    },\n    ensUniversalResolver: {\n      address: '0x56522D00C410a43BFfDF00a9A569489297385790',\n      blockCreated: 8765204,\n    },\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 6507670,\n    },\n  },\n  testnet: true,\n})\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,kCAAkC,CAAA;;AAEvD,MAAM,MAAM,GAAG,WAAA,EAAa,+OAAC,cAAA,AAAW,EAAC;IAC9C,EAAE,EAAE,CAAC;IACL,OAAO,EAAE,QAAQ;IACjB,IAAI,EAAE,QAAQ;IACd,cAAc,EAAE;QAAE,IAAI,EAAE,cAAc;QAAE,MAAM,EAAE,KAAK;QAAE,QAAQ,EAAE,EAAE;IAAA,CAAE;IACrE,OAAO,EAAE;QACP,OAAO,EAAE;YACP,IAAI,EAAE;gBAAC,qCAAqC;aAAC;YAC7C,SAAS,EAAE;gBAAC,mCAAmC;aAAC;SACjD;QACD,MAAM,EAAE;YACN,IAAI,EAAE;gBAAC,6BAA6B;aAAC;YACrC,SAAS,EAAE;gBAAC,8BAA8B;aAAC;SAC5C;QACD,OAAO,EAAE;YACP,IAAI,EAAE;gBAAC,iCAAiC;aAAC;SAC1C;QACD,MAAM,EAAE;YACN,IAAI,EAAE;gBAAC,iCAAiC;aAAC;SAC1C;KACF;IACD,cAAc,EAAE;QACd,SAAS,EAAE;YACT,IAAI,EAAE,WAAW;YACjB,GAAG,EAAE,6BAA6B;SACnC;QACD,OAAO,EAAE;YACP,IAAI,EAAE,WAAW;YACjB,GAAG,EAAE,6BAA6B;SACnC;KACF;IACD,SAAS,EAAE;QACT,WAAW,EAAE;YACX,OAAO,EAAE,4CAA4C;SACtD;QACD,oBAAoB,EAAE;YACpB,OAAO,EAAE,4CAA4C;YACrD,YAAY,EAAE,OAAO;SACtB;QACD,UAAU,EAAE;YACV,OAAO,EAAE,4CAA4C;YACrD,YAAY,EAAE,OAAO;SACtB;KACF;IACD,OAAO,EAAE,IAAI;CACd,CAAC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 10298, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10304, "column": 0}, "map": {"version":3,"file":"addChain.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/wallet/addChain.ts"],"sourcesContent":["import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type AddChainParameters = {\n  /** The chain to add to the wallet. */\n  chain: Chain\n}\n\nexport type AddChainErrorType =\n  | RequestErrorType\n  | NumberToHexErrorType\n  | ErrorType\n\n/**\n * Adds an EVM chain to the wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/addChain.html\n * - JSON-RPC Methods: [`eth_addEthereumChain`](https://eips.ethereum.org/EIPS/eip-3085)\n *\n * @param client - Client to use\n * @param parameters - {@link AddChainParameters}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { optimism } from 'viem/chains'\n * import { addChain } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   transport: custom(window.ethereum),\n * })\n * await addChain(client, { chain: optimism })\n */\nexport async function addChain<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(client: Client<Transport, TChain, TAccount>, { chain }: AddChainParameters) {\n  const { id, name, nativeCurrency, rpcUrls, blockExplorers } = chain\n  await client.request({\n    method: 'wallet_addEthereumChain',\n    params: [\n      {\n        chainId: numberToHex(id),\n        chainName: name,\n        nativeCurrency,\n        rpcUrls: rpcUrls.default.http,\n        blockExplorerUrls: blockExplorers\n          ? Object.values(blockExplorers).map(({ url }) => url)\n          : undefined,\n      },\n    ],\n  })\n}\n"],"names":[],"mappings":";;;AAMA,OAAO,EAEL,WAAW,GACZ,MAAM,+BAA+B,CAAA;;AA+B/B,KAAK,UAAU,QAAQ,CAG5B,MAA2C,EAAE,EAAE,KAAK,EAAsB;IAC1E,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,cAAc,EAAE,OAAO,EAAE,cAAc,EAAE,GAAG,KAAK,CAAA;IACnE,MAAM,MAAM,CAAC,OAAO,CAAC;QACnB,MAAM,EAAE,yBAAyB;QACjC,MAAM,EAAE;YACN;gBACE,OAAO,6OAAE,cAAW,AAAX,EAAY,EAAE,CAAC;gBACxB,SAAS,EAAE,IAAI;gBACf,cAAc;gBACd,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,IAAI;gBAC7B,iBAAiB,EAAE,cAAc,GAC7B,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAG,CAAD,EAAI,CAAC,GACnD,SAAS;aACd;SACF;KACF,CAAC,CAAA;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10324, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10330, "column": 0}, "map": {"version":3,"file":"assertCurrentChain.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/chain/assertCurrentChain.ts"],"sourcesContent":["import {\n  ChainMismatchError,\n  type ChainMismatchErrorType,\n  ChainNotFoundError,\n  type ChainNotFoundErrorType,\n} from '../../errors/chain.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\n\nexport type AssertCurrentChainParameters = {\n  chain?: Chain\n  currentChainId: number\n}\n\nexport type AssertCurrentChainErrorType =\n  | ChainNotFoundErrorType\n  | ChainMismatchErrorType\n  | ErrorType\n\nexport function assertCurrentChain({\n  chain,\n  currentChainId,\n}: AssertCurrentChainParameters): void {\n  if (!chain) throw new ChainNotFoundError()\n  if (currentChainId !== chain.id)\n    throw new ChainMismatchError({ chain, currentChainId })\n}\n"],"names":[],"mappings":";;;AAAA,OAAO,EACL,kBAAkB,EAElB,kBAAkB,GAEnB,MAAM,uBAAuB,CAAA;;AAcxB,SAAU,kBAAkB,CAAC,EACjC,KAAK,EACL,cAAc,EACe;IAC7B,IAAI,CAAC,KAAK,EAAE,MAAM,gOAAI,qBAAkB,EAAE,CAAA;IAC1C,IAAI,cAAc,KAAK,KAAK,CAAC,EAAE,EAC7B,MAAM,gOAAI,qBAAkB,CAAC;QAAE,KAAK;QAAE,cAAc;IAAA,CAAE,CAAC,CAAA;AAC3D,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10342, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10348, "column": 0}, "map": {"version":3,"file":"getTransactionError.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/errors/getTransactionError.ts"],"sourcesContent":["import type { Account } from '../../accounts/types.js'\nimport type { SendTransactionParameters } from '../../actions/wallet/sendTransaction.js'\nimport type { BaseError } from '../../errors/base.js'\nimport { UnknownNodeError } from '../../errors/node.js'\nimport {\n  TransactionExecutionError,\n  type TransactionExecutionErrorType,\n} from '../../errors/transaction.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\n\nimport {\n  type GetNodeErrorParameters,\n  type GetNodeErrorReturnType,\n  getNodeError,\n} from './getNodeError.js'\n\nexport type GetTransactionErrorParameters = Omit<\n  SendTransactionParameters,\n  'account' | 'chain'\n> & {\n  account: Account\n  chain?: Chain\n  docsPath?: string\n}\n\nexport type GetTransactionErrorReturnType<cause = ErrorType> = Omit<\n  TransactionExecutionErrorType,\n  'cause'\n> & { cause: cause | GetNodeErrorReturnType }\n\nexport function getTransactionError<err extends ErrorType<string>>(\n  err: err,\n  { docsPath, ...args }: GetTransactionErrorParameters,\n): GetTransactionErrorReturnType<err> {\n  const cause = (() => {\n    const cause = getNodeError(\n      err as {} as BaseError,\n      args as GetNodeErrorParameters,\n    )\n    if (cause instanceof UnknownNodeError) return err as {} as BaseError\n    return cause\n  })()\n  return new TransactionExecutionError(cause, {\n    docsPath,\n    ...args,\n  }) as GetTransactionErrorReturnType<err>\n}\n"],"names":[],"mappings":";;;AAWA,OAAO,EAGL,YAAY,GACb,MAAM,mBAAmB,CAAA;AAZ1B,OAAO,EAAE,gBAAgB,EAAE,MAAM,sBAAsB,CAAA;AACvD,OAAO,EACL,yBAAyB,GAE1B,MAAM,6BAA6B,CAAA;;;;AAwB9B,SAAU,mBAAmB,CACjC,GAAQ,EACR,EAAE,QAAQ,EAAE,GAAG,IAAI,EAAiC;IAEpD,MAAM,KAAK,GAAG,CAAC,GAAG,EAAE;QAClB,MAAM,KAAK,mPAAG,eAAY,AAAZ,EACZ,GAAsB,EACtB,IAA8B,CAC/B,CAAA;QACD,IAAI,KAAK,uOAAY,mBAAgB,EAAE,OAAO,GAAsB,CAAA;QACpE,OAAO,KAAK,CAAA;IACd,CAAC,CAAC,EAAE,CAAA;IACJ,OAAO,sOAAI,4BAAyB,CAAC,KAAK,EAAE;QAC1C,QAAQ;QACR,GAAG,IAAI;KACR,CAAuC,CAAA;AAC1C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10368, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10374, "column": 0}, "map": {"version":3,"file":"sendTransaction.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/wallet/sendTransaction.ts"],"sourcesContent":["import type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { SignTransactionErrorType } from '../../accounts/utils/signTransaction.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { AccountNotFoundError } from '../../errors/account.js'\nimport type { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { GetChain } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport type {\n  TransactionRequest,\n  TransactionSerializable,\n} from '../../types/transaction.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type AssertCurrentChainErrorType,\n  assertCurrentChain,\n} from '../../utils/chain/assertCurrentChain.js'\nimport {\n  type GetTransactionErrorReturnType,\n  getTransactionError,\n} from '../../utils/errors/getTransactionError.js'\nimport { extract } from '../../utils/formatters/extract.js'\nimport {\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type AssertRequestErrorType,\n  type AssertRequestParameters,\n  assertRequest,\n} from '../../utils/transaction/assertRequest.js'\nimport { type GetChainIdErrorType, getChainId } from '../public/getChainId.js'\nimport {\n  type PrepareTransactionRequestErrorType,\n  prepareTransactionRequest,\n} from './prepareTransactionRequest.js'\nimport {\n  type SendRawTransactionReturnType,\n  sendRawTransaction,\n} from './sendRawTransaction.js'\n\nexport type SendTransactionParameters<\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n  TChainOverride extends Chain | undefined = Chain | undefined,\n> = UnionOmit<\n  FormattedTransactionRequest<\n    TChainOverride extends Chain ? TChainOverride : TChain\n  >,\n  'from'\n> &\n  GetAccountParameter<TAccount> &\n  GetChain<TChain, TChainOverride>\n\nexport type SendTransactionReturnType = Hash\n\nexport type SendTransactionErrorType =\n  | ParseAccountErrorType\n  | GetTransactionErrorReturnType<\n      | AssertCurrentChainErrorType\n      | AssertRequestErrorType\n      | GetChainIdErrorType\n      | PrepareTransactionRequestErrorType\n      | SendRawTransactionReturnType\n      | SignTransactionErrorType\n      | RequestErrorType\n    >\n  | ErrorType\n\n/**\n * Creates, signs, and sends a new transaction to the network.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/sendTransaction.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/sending-transactions\n * - JSON-RPC Methods:\n *   - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\n *   - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\n *\n * @param client - Client to use\n * @param parameters - {@link SendTransactionParameters}\n * @returns The [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) hash. {@link SendTransactionReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { sendTransaction } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const hash = await sendTransaction(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: 1000000000000000000n,\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { sendTransaction } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const hash = await sendTransaction(client, {\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: 1000000000000000000n,\n * })\n */\nexport async function sendTransaction<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n  TChainOverride extends Chain | undefined = undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  args: SendTransactionParameters<TChain, TAccount, TChainOverride>,\n): Promise<SendTransactionReturnType> {\n  const {\n    account: account_ = client.account,\n    chain = client.chain,\n    accessList,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    to,\n    value,\n    ...rest\n  } = args\n\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/wallet/sendTransaction',\n    })\n  const account = parseAccount(account_)\n\n  try {\n    assertRequest(args as AssertRequestParameters)\n\n    let chainId\n    if (chain !== null) {\n      chainId = await getAction(client, getChainId, 'getChainId')({})\n      assertCurrentChain({\n        currentChainId: chainId,\n        chain,\n      })\n    }\n\n    if (account.type === 'local') {\n      // Prepare the request for signing (assign appropriate fees, etc.)\n      const request = await getAction(\n        client,\n        prepareTransactionRequest,\n        'prepareTransactionRequest',\n      )({\n        account,\n        accessList,\n        chain,\n        data,\n        gas,\n        gasPrice,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        nonce,\n        to,\n        value,\n        ...rest,\n      } as any)\n\n      if (!chainId)\n        chainId = await getAction(client, getChainId, 'getChainId')({})\n\n      const serializer = chain?.serializers?.transaction\n      const serializedTransaction = (await account.signTransaction(\n        {\n          ...request,\n          chainId,\n        } as TransactionSerializable,\n        { serializer },\n      )) as Hash\n      return await getAction(\n        client,\n        sendRawTransaction,\n        'sendRawTransaction',\n      )({\n        serializedTransaction,\n      })\n    }\n\n    const chainFormat = client.chain?.formatters?.transactionRequest?.format\n    const format = chainFormat || formatTransactionRequest\n\n    const request = format({\n      // Pick out extra data that might exist on the chain's transaction request type.\n      ...extract(rest, { format: chainFormat }),\n      accessList,\n      data,\n      from: account.address,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n    } as TransactionRequest)\n    return await client.request({\n      method: 'eth_sendTransaction',\n      params: [request],\n    })\n  } catch (err) {\n    throw getTransactionError(err as BaseError, {\n      ...args,\n      account,\n      chain: args.chain || undefined,\n    })\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 10475, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10481, "column": 0}, "map": {"version":3,"file":"deployContract.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/wallet/deployContract.ts"],"sourcesContent":["import type { Abi } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { GetChain } from '../../types/chain.js'\nimport type { GetConstructorArgs } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport { encodeDeployData } from '../../utils/abi/encodeDeployData.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type SendTransactionErrorType,\n  type SendTransactionParameters,\n  type SendTransactionReturnType,\n  sendTransaction,\n} from './sendTransaction.js'\n\nexport type DeployContractParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n  TChainOverride extends Chain | undefined = Chain | undefined,\n> = UnionOmit<\n  SendTransactionParameters<TChain, TAccount, TChainOverride>,\n  'accessList' | 'chain' | 'to' | 'data'\n> & {\n  abi: TAbi\n  bytecode: Hex\n} & GetChain<TChain, TChainOverride> &\n  GetConstructorArgs<TAbi>\n\nexport type DeployContractReturnType = SendTransactionReturnType\n\nexport type DeployContractErrorType = SendTransactionErrorType | ErrorType\n\n/**\n * Deploys a contract to the network, given bytecode and constructor arguments.\n *\n * - Docs: https://viem.sh/docs/contract/deployContract.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts/deploying-contracts\n *\n * @param client - Client to use\n * @param parameters - {@link DeployContractParameters}\n * @returns The [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) hash. {@link DeployContractReturnType}\n *\n * @example\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { deployContract } from 'viem/contract'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const hash = await deployContract(client, {\n *   abi: [],\n *   account: '0x…,\n *   bytecode: '0x608060405260405161083e38038061083e833981016040819052610...',\n * })\n */\nexport function deployContract<\n  const TAbi extends Abi | readonly unknown[],\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n  TChainOverride extends Chain | undefined = undefined,\n>(\n  walletClient: Client<Transport, TChain, TAccount>,\n  {\n    abi,\n    args,\n    bytecode,\n    ...request\n  }: DeployContractParameters<TAbi, TChain, TAccount, TChainOverride>,\n): Promise<DeployContractReturnType> {\n  const calldata = encodeDeployData({\n    abi,\n    args,\n    bytecode,\n  } as unknown as DeployContractParameters<\n    TAbi,\n    TChain,\n    TAccount,\n    TChainOverride\n  >)\n  return sendTransaction(walletClient, {\n    ...request,\n    data: calldata,\n  } as unknown as SendTransactionParameters<TChain, TAccount, TChainOverride>)\n}\n"],"names":[],"mappings":";;;AAUA,OAAO,EAAE,gBAAgB,EAAE,MAAM,qCAAqC,CAAA;AAGtE,OAAO,EAIL,eAAe,GAChB,MAAM,sBAAsB,CAAA;;;AA+CvB,SAAU,cAAc,CAM5B,YAAiD,EACjD,EACE,GAAG,EACH,IAAI,EACJ,QAAQ,EACR,GAAG,OAAO,EACuD;IAEnE,MAAM,QAAQ,oPAAG,mBAAA,AAAgB,EAAC;QAChC,GAAG;QACH,IAAI;QACJ,QAAQ;KAMT,CAAC,CAAA;IACF,4PAAO,kBAAA,AAAe,EAAC,YAAY,EAAE;QACnC,GAAG,OAAO;QACV,IAAI,EAAE,QAAQ;KAC2D,CAAC,CAAA;AAC9E,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10499, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10505, "column": 0}, "map": {"version":3,"file":"getAddresses.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/wallet/getAddresses.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport {\n  type ChecksumAddressErrorType,\n  checksumAddress,\n} from '../../utils/address/getAddress.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type GetAddressesReturnType = Address[]\n\nexport type GetAddressesErrorType =\n  | RequestErrorType\n  | ChecksumAddressErrorType\n  | ErrorType\n\n/**\n * Returns a list of account addresses owned by the wallet or client.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/getAddresses.html\n * - JSON-RPC Methods: [`eth_accounts`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_accounts)\n *\n * @param client - Client to use\n * @returns List of account addresses owned by the wallet or client. {@link GetAddressesReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getAddresses } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const accounts = await getAddresses(client)\n */\nexport async function getAddresses<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n): Promise<GetAddressesReturnType> {\n  if (client.account?.type === 'local') return [client.account.address]\n  const addresses = await client.request({ method: 'eth_accounts' })\n  return addresses.map((address) => checksumAddress(address))\n}\n"],"names":[],"mappings":";;;AAOA,OAAO,EAEL,eAAe,GAChB,MAAM,mCAAmC,CAAA;;AA8BnC,KAAK,UAAU,YAAY,CAIhC,MAA2C;IAE3C,IAAI,MAAM,CAAC,OAAO,EAAE,IAAI,KAAK,OAAO,EAAE,OAAO;QAAC,MAAM,CAAC,OAAO,CAAC,OAAO;KAAC,CAAA;IACrE,MAAM,SAAS,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;QAAE,MAAM,EAAE,cAAc;IAAA,CAAE,CAAC,CAAA;IAClE,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,8OAAC,kBAAA,AAAe,EAAC,OAAO,CAAC,CAAC,CAAA;AAC7D,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10519, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10525, "column": 0}, "map": {"version":3,"file":"getPermissions.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/wallet/getPermissions.ts"],"sourcesContent":["import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { WalletPermission } from '../../types/eip1193.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type GetPermissionsReturnType = WalletPermission[]\n\nexport type GetPermissionsErrorType = RequestErrorType | ErrorType\n\n/**\n * Gets the wallets current permissions.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/getPermissions.html\n * - JSON-RPC Methods: [`wallet_getPermissions`](https://eips.ethereum.org/EIPS/eip-2255)\n *\n * @param client - Client to use\n * @returns The wallet permissions. {@link GetPermissionsReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getPermissions } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const permissions = await getPermissions(client)\n */\nexport async function getPermissions<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n>(client: Client<Transport, TChain, TAccount>) {\n  const permissions = await client.request({ method: 'wallet_getPermissions' })\n  return permissions\n}\n"],"names":[],"mappings":"AAYA;;;;;;;;;;;;;;;;;;;GAmBG;;;AACI,KAAK,UAAU,cAAc,CAGlC,MAA2C;IAC3C,MAAM,WAAW,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;QAAE,MAAM,EAAE,uBAAuB;IAAA,CAAE,CAAC,CAAA;IAC7E,OAAO,WAAW,CAAA;AACpB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10553, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10559, "column": 0}, "map": {"version":3,"file":"requestAddresses.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/wallet/requestAddresses.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport { getAddress } from '../../utils/address/getAddress.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type RequestAddressesReturnType = Address[]\n\nexport type RequestAddressesErrorType = RequestErrorType | ErrorType\n\n/**\n * Requests a list of accounts managed by a wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/requestAddresses.html\n * - JSON-RPC Methods: [`eth_requestAccounts`](https://eips.ethereum.org/EIPS/eip-1102)\n *\n * Sends a request to the wallet, asking for permission to access the user's accounts. After the user accepts the request, it will return a list of accounts (addresses).\n *\n * This API can be useful for dapps that need to access the user's accounts in order to execute transactions or interact with smart contracts.\n *\n * @param client - Client to use\n * @returns List of accounts managed by a wallet {@link RequestAddressesReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { requestAddresses } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const accounts = await requestAddresses(client)\n */\nexport async function requestAddresses<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n): Promise<RequestAddressesReturnType> {\n  const addresses = await client.request({ method: 'eth_requestAccounts' })\n  return addresses.map((address) => getAddress(address))\n}\n"],"names":[],"mappings":";;;AAOA,OAAO,EAAE,UAAU,EAAE,MAAM,mCAAmC,CAAA;;AA+BvD,KAAK,UAAU,gBAAgB,CAIpC,MAA2C;IAE3C,MAAM,SAAS,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;QAAE,MAAM,EAAE,qBAAqB;IAAA,CAAE,CAAC,CAAA;IACzE,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,EAAE,8OAAC,aAAA,AAAU,EAAC,OAAO,CAAC,CAAC,CAAA;AACxD,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10570, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10576, "column": 0}, "map": {"version":3,"file":"requestPermissions.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/wallet/requestPermissions.ts"],"sourcesContent":["import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { WalletPermission } from '../../types/eip1193.js'\nimport type { Prettify } from '../../types/utils.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type RequestPermissionsParameters = Prettify<\n  {\n    eth_accounts: Record<string, any>\n  } & {\n    [key: string]: Record<string, any>\n  }\n>\nexport type RequestPermissionsReturnType = WalletPermission[]\n\nexport type RequestPermissionsErrorType = RequestErrorType | ErrorType\n\n/**\n * Requests permissions for a wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/requestPermissions.html\n * - JSON-RPC Methods: [`wallet_requestPermissions`](https://eips.ethereum.org/EIPS/eip-2255)\n *\n * @param client - Client to use\n * @param parameters - {@link RequestPermissionsParameters}\n * @returns The wallet permissions. {@link RequestPermissionsReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { requestPermissions } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const permissions = await requestPermissions(client, {\n *   eth_accounts: {}\n * })\n */\nexport async function requestPermissions<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  permissions: RequestPermissionsParameters,\n) {\n  return client.request({\n    method: 'wallet_requestPermissions',\n    params: [permissions],\n  })\n}\n"],"names":[],"mappings":"AAoBA;;;;;;;;;;;;;;;;;;;;;;GAsBG;;;AACI,KAAK,UAAU,kBAAkB,CAItC,MAA2C,EAC3C,WAAyC;IAEzC,OAAO,MAAM,CAAC,OAAO,CAAC;QACpB,MAAM,EAAE,2BAA2B;QACnC,MAAM,EAAE;YAAC,WAAW;SAAC;KACtB,CAAC,CAAA;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10609, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10615, "column": 0}, "map": {"version":3,"file":"signMessage.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/wallet/signMessage.ts"],"sourcesContent":["import type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { SignMessageErrorType as SignMessageErrorType_account } from '../../accounts/utils/signMessage.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { AccountNotFoundError } from '../../errors/account.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex, SignableMessage } from '../../types/misc.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type ToHexErrorType,\n  stringToHex,\n  toHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type SignMessageParameters<\n  TAccount extends Account | undefined = Account | undefined,\n> = GetAccountParameter<TAccount> & {\n  message: SignableMessage\n}\n\nexport type SignMessageReturnType = Hex\n\nexport type SignMessageErrorType =\n  | ParseAccountErrorType\n  | RequestErrorType\n  | SignMessageErrorType_account\n  | ToHexErrorType\n  | ErrorType\n\n/**\n * Calculates an Ethereum-specific signature in [EIP-191 format](https://eips.ethereum.org/EIPS/eip-191): `keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message))`.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/signMessage.html\n * - JSON-RPC Methods:\n *   - JSON-RPC Accounts: [`personal_sign`](https://docs.metamask.io/guide/signing-data.html#personal-sign)\n *   - Local Accounts: Signs locally. No JSON-RPC request.\n *\n * With the calculated signature, you can:\n * - use [`verifyMessage`](https://viem.sh/docs/utilities/verifyMessage.html) to verify the signature,\n * - use [`recoverMessageAddress`](https://viem.sh/docs/utilities/recoverMessageAddress.html) to recover the signing address from a signature.\n *\n * @param client - Client to use\n * @param parameters - {@link SignMessageParameters}\n * @returns The signed message. {@link SignMessageReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { signMessage } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signMessage(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   message: 'hello world',\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, custom } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { signMessage } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signMessage(client, {\n *   message: 'hello world',\n * })\n */\nexport async function signMessage<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  {\n    account: account_ = client.account,\n    message,\n  }: SignMessageParameters<TAccount>,\n): Promise<SignMessageReturnType> {\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/wallet/signMessage',\n    })\n  const account = parseAccount(account_)\n  if (account.type === 'local') return account.signMessage({ message })\n\n  const message_ = (() => {\n    if (typeof message === 'string') return stringToHex(message)\n    if (message.raw instanceof Uint8Array) return toHex(message.raw)\n    return message.raw\n  })()\n\n  return client.request({\n    method: 'personal_sign',\n    params: [message_, account.address],\n  })\n}\n"],"names":[],"mappings":";;;AAQA,OAAO,EAAE,oBAAoB,EAAE,MAAM,yBAAyB,CAAA;AAP9D,OAAO,EAEL,YAAY,GACb,MAAM,sCAAsC,CAAA;AAU7C,OAAO,EAEL,WAAW,EACX,KAAK,GACN,MAAM,+BAA+B,CAAA;;;;AA+D/B,KAAK,UAAU,WAAW,CAI/B,MAA2C,EAC3C,EACE,OAAO,EAAE,QAAQ,GAAG,MAAM,CAAC,OAAO,EAClC,OAAO,EACyB;IAElC,IAAI,CAAC,QAAQ,EACX,MAAM,kOAAI,uBAAoB,CAAC;QAC7B,QAAQ,EAAE,kCAAkC;KAC7C,CAAC,CAAA;IACJ,MAAM,OAAO,qPAAG,eAAA,AAAY,EAAC,QAAQ,CAAC,CAAA;IACtC,IAAI,OAAO,CAAC,IAAI,KAAK,OAAO,EAAE,OAAO,OAAO,CAAC,WAAW,CAAC;QAAE,OAAO;IAAA,CAAE,CAAC,CAAA;IAErE,MAAM,QAAQ,GAAG,CAAC,GAAG,EAAE;QACrB,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE,kPAAO,cAAA,AAAW,EAAC,OAAO,CAAC,CAAA;QAC5D,IAAI,OAAO,CAAC,GAAG,YAAY,UAAU,EAAE,kPAAO,QAAA,AAAK,EAAC,OAAO,CAAC,GAAG,CAAC,CAAA;QAChE,OAAO,OAAO,CAAC,GAAG,CAAA;IACpB,CAAC,CAAC,EAAE,CAAA;IAEJ,OAAO,MAAM,CAAC,OAAO,CAAC;QACpB,MAAM,EAAE,eAAe;QACvB,MAAM,EAAE;YAAC,QAAQ;YAAE,OAAO,CAAC,OAAO;SAAC;KACpC,CAAC,CAAA;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10645, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10651, "column": 0}, "map": {"version":3,"file":"signTransaction.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/wallet/signTransaction.ts"],"sourcesContent":["import type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { SignTransactionErrorType as SignTransactionErrorType_account } from '../../accounts/utils/signTransaction.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport { AccountNotFoundError } from '../../errors/account.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type { Chain, GetChain } from '../../types/chain.js'\nimport { type RpcTransactionRequest } from '../../types/rpc.js'\nimport type {\n  TransactionRequest,\n  TransactionSerializable,\n  TransactionSerialized,\n} from '../../types/transaction.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type AssertCurrentChainErrorType,\n  assertCurrentChain,\n} from '../../utils/chain/assertCurrentChain.js'\nimport type { NumberToHexErrorType } from '../../utils/encoding/toHex.js'\nimport {\n  type FormattedTransactionRequest,\n  formatTransactionRequest,\n} from '../../utils/formatters/transactionRequest.js'\nimport { getAction } from '../../utils/getAction.js'\nimport { numberToHex } from '../../utils/index.js'\nimport {\n  type AssertRequestErrorType,\n  assertRequest,\n} from '../../utils/transaction/assertRequest.js'\nimport { type GetChainIdErrorType, getChainId } from '../public/getChainId.js'\n\nexport type SignTransactionParameters<\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n  TChainOverride extends Chain | undefined = Chain | undefined,\n> = UnionOmit<\n  FormattedTransactionRequest<\n    TChainOverride extends Chain ? TChainOverride : TChain\n  >,\n  'from'\n> &\n  GetAccountParameter<TAccount> &\n  GetChain<TChain, TChainOverride>\n\nexport type SignTransactionReturnType = TransactionSerialized\n\nexport type SignTransactionErrorType =\n  | ParseAccountErrorType\n  | AssertRequestErrorType\n  | GetChainIdErrorType\n  | AssertCurrentChainErrorType\n  | SignTransactionErrorType_account\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Signs a transaction.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/signTransaction.html\n * - JSON-RPC Methods:\n *   - JSON-RPC Accounts: [`eth_signTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n *   - Local Accounts: Signs locally. No JSON-RPC request.\n *\n * @param args - {@link SignTransactionParameters}\n * @returns The signed serialized tranasction. {@link SignTransactionReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { signTransaction } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signTransaction(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { signTransaction } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signTransaction(client, {\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n */\nexport async function signTransaction<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n  TChainOverride extends Chain | undefined = undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  args: SignTransactionParameters<TChain, TAccount, TChainOverride>,\n): Promise<SignTransactionReturnType> {\n  const {\n    account: account_ = client.account,\n    chain = client.chain,\n    ...transaction\n  } = args\n\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/wallet/signTransaction',\n    })\n  const account = parseAccount(account_)\n\n  assertRequest({\n    account,\n    ...args,\n  })\n\n  const chainId = await getAction(client, getChainId, 'getChainId')({})\n  if (chain !== null)\n    assertCurrentChain({\n      currentChainId: chainId,\n      chain,\n    })\n\n  const formatters = chain?.formatters || client.chain?.formatters\n  const format =\n    formatters?.transactionRequest?.format || formatTransactionRequest\n\n  if (account.type === 'local')\n    return account.signTransaction(\n      {\n        ...transaction,\n        chainId,\n      } as unknown as TransactionSerializable,\n      { serializer: client.chain?.serializers?.transaction },\n    ) as Promise<SignTransactionReturnType>\n\n  return await client.request({\n    method: 'eth_signTransaction',\n    params: [\n      {\n        ...format(transaction as unknown as TransactionRequest),\n        chainId: numberToHex(chainId),\n        from: account.address,\n      } as unknown as RpcTransactionRequest,\n    ],\n  })\n}\n"],"names":[],"mappings":";;;AAQA,OAAO,EAAE,oBAAoB,EAAE,MAAM,yBAAyB,CAAA;AAP9D,OAAO,EAEL,YAAY,GACb,MAAM,sCAAsC,CAAA;AA2B7C,OAAO,EAEL,aAAa,GACd,MAAM,0CAA0C,CAAA;AALjD,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAA;AAMpD,OAAO,EAA4B,UAAU,EAAE,MAAM,yBAAyB,CAAA;AAf9E,OAAO,EAEL,kBAAkB,GACnB,MAAM,yCAAyC,CAAA;AAEhD,OAAO,EAEL,wBAAwB,GACzB,MAAM,8CAA8C,CAAA;AAErD,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAA;;;;;;;;;;AA2E3C,KAAK,UAAU,eAAe,CAKnC,MAA2C,EAC3C,IAAiE;IAEjE,MAAM,EACJ,OAAO,EAAE,QAAQ,GAAG,MAAM,CAAC,OAAO,EAClC,KAAK,GAAG,MAAM,CAAC,KAAK,EACpB,GAAG,WAAW,EACf,GAAG,IAAI,CAAA;IAER,IAAI,CAAC,QAAQ,EACX,MAAM,kOAAI,uBAAoB,CAAC;QAC7B,QAAQ,EAAE,sCAAsC;KACjD,CAAC,CAAA;IACJ,MAAM,OAAO,qPAAG,eAAA,AAAY,EAAC,QAAQ,CAAC,CAAA;IAEtC,sQAAa,AAAb,EAAc;QACZ,OAAO;QACP,GAAG,IAAI;KACR,CAAC,CAAA;IAEF,MAAM,OAAO,GAAG,OAAM,8OAAA,AAAS,EAAC,MAAM,8OAAE,aAAU,EAAE,YAAY,CAAC,CAAC,CAAA,CAAE,CAAC,CAAA;IACrE,IAAI,KAAK,KAAK,IAAI,uPAChB,qBAAA,AAAkB,EAAC;QACjB,cAAc,EAAE,OAAO;QACvB,KAAK;KACN,CAAC,CAAA;IAEJ,MAAM,UAAU,GAAG,KAAK,EAAE,UAAU,IAAI,MAAM,CAAC,KAAK,EAAE,UAAU,CAAA;IAChE,MAAM,MAAM,GACV,UAAU,EAAE,kBAAkB,EAAE,MAAM,yPAAI,4BAAwB,CAAA;IAEpE,IAAI,OAAO,CAAC,IAAI,KAAK,OAAO,EAC1B,OAAO,OAAO,CAAC,eAAe,CAC5B;QACE,GAAG,WAAW;QACd,OAAO;KAC8B,EACvC;QAAE,UAAU,EAAE,MAAM,CAAC,KAAK,EAAE,WAAW,EAAE,WAAW;IAAA,CAAE,CACjB,CAAA;IAEzC,OAAO,MAAM,MAAM,CAAC,OAAO,CAAC;QAC1B,MAAM,EAAE,qBAAqB;QAC7B,MAAM,EAAE;YACN;gBACE,GAAG,MAAM,CAAC,WAA4C,CAAC;gBACvD,OAAO,6OAAE,cAAA,AAAW,EAAC,OAAO,CAAC;gBAC7B,IAAI,EAAE,OAAO,CAAC,OAAO;aACc;SACtC;KACF,CAAC,CAAA;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10705, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10711, "column": 0}, "map": {"version":3,"file":"signTypedData.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/wallet/signTypedData.ts"],"sourcesContent":["import type { TypedData } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type ParseAccountErrorType,\n  parseAccount,\n} from '../../accounts/utils/parseAccount.js'\nimport type { SignTypedDataErrorType as SignTypedDataErrorType_account } from '../../accounts/utils/signTypedData.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport {\n  AccountNotFoundError,\n  type AccountNotFoundErrorType,\n} from '../../errors/account.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport { type IsHexErrorType, isHex } from '../../utils/data/isHex.js'\nimport { type StringifyErrorType, stringify } from '../../utils/stringify.js'\nimport {\n  type GetTypesForEIP712DomainErrorType,\n  type ValidateTypedDataErrorType,\n  getTypesForEIP712Domain,\n  validateTypedData,\n} from '../../utils/typedData.js'\n\nexport type SignTypedDataParameters<\n  TTypedData extends TypedData | { [key: string]: unknown } = TypedData,\n  TPrimaryType extends string = string,\n  TAccount extends Account | undefined = undefined,\n> = GetAccountParameter<TAccount> &\n  TypedDataDefinition<TTypedData, TPrimaryType>\n\nexport type SignTypedDataReturnType = Hex\n\nexport type SignTypedDataErrorType =\n  | AccountNotFoundErrorType\n  | ParseAccountErrorType\n  | GetTypesForEIP712DomainErrorType\n  | ValidateTypedDataErrorType\n  | StringifyErrorType\n  | SignTypedDataErrorType_account\n  | IsHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Signs typed data and calculates an Ethereum-specific signature in [https://eips.ethereum.org/EIPS/eip-712](https://eips.ethereum.org/EIPS/eip-712): `sign(keccak256(\"\\x19\\x01\" ‖ domainSeparator ‖ hashStruct(message)))`\n *\n * - Docs: https://viem.sh/docs/actions/wallet/signTypedData.html\n * - JSON-RPC Methods:\n *   - JSON-RPC Accounts: [`eth_signTypedData_v4`](https://docs.metamask.io/guide/signing-data.html#signtypeddata-v4)\n *   - Local Accounts: Signs locally. No JSON-RPC request.\n *\n * @param client - Client to use\n * @param parameters - {@link SignTypedDataParameters}\n * @returns The signed data. {@link SignTypedDataReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { signTypedData } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const signature = await signTypedData(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   domain: {\n *     name: 'Ether Mail',\n *     version: '1',\n *     chainId: 1,\n *     verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n *   },\n *   types: {\n *     Person: [\n *       { name: 'name', type: 'string' },\n *       { name: 'wallet', type: 'address' },\n *     ],\n *     Mail: [\n *       { name: 'from', type: 'Person' },\n *       { name: 'to', type: 'Person' },\n *       { name: 'contents', type: 'string' },\n *     ],\n *   },\n *   primaryType: 'Mail',\n *   message: {\n *     from: {\n *       name: 'Cow',\n *       wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n *     },\n *     to: {\n *       name: 'Bob',\n *       wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n *     },\n *     contents: 'Hello, Bob!',\n *   },\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { signTypedData } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const signature = await signTypedData(client, {\n *   domain: {\n *     name: 'Ether Mail',\n *     version: '1',\n *     chainId: 1,\n *     verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n *   },\n *   types: {\n *     Person: [\n *       { name: 'name', type: 'string' },\n *       { name: 'wallet', type: 'address' },\n *     ],\n *     Mail: [\n *       { name: 'from', type: 'Person' },\n *       { name: 'to', type: 'Person' },\n *       { name: 'contents', type: 'string' },\n *     ],\n *   },\n *   primaryType: 'Mail',\n *   message: {\n *     from: {\n *       name: 'Cow',\n *       wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n *     },\n *     to: {\n *       name: 'Bob',\n *       wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n *     },\n *     contents: 'Hello, Bob!',\n *   },\n * })\n */\nexport async function signTypedData<\n  const TTypedData extends TypedData | { [key: string]: unknown },\n  TPrimaryType extends string,\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  {\n    account: account_ = client.account,\n    domain,\n    message,\n    primaryType,\n    types: types_,\n  }: SignTypedDataParameters<TTypedData, TPrimaryType, TAccount>,\n): Promise<SignTypedDataReturnType> {\n  if (!account_)\n    throw new AccountNotFoundError({\n      docsPath: '/docs/actions/wallet/signTypedData',\n    })\n  const account = parseAccount(account_)\n\n  const types = {\n    EIP712Domain: getTypesForEIP712Domain({ domain }),\n    ...(types_ as TTypedData),\n  }\n\n  // Need to do a runtime validation check on addresses, byte ranges, integer ranges, etc\n  // as we can't statically check this with TypeScript.\n  validateTypedData({\n    domain,\n    message,\n    primaryType,\n    types,\n  } as TypedDataDefinition)\n\n  if (account.type === 'local')\n    return account.signTypedData({\n      domain,\n      primaryType,\n      types,\n      message,\n    } as TypedDataDefinition)\n\n  const typedData = stringify(\n    { domain: domain ?? {}, primaryType, types, message },\n    (_, value) => (isHex(value) ? value.toLowerCase() : value),\n  )\n  return client.request({\n    method: 'eth_signTypedData_v4',\n    params: [account.address, typedData],\n  })\n}\n"],"names":[],"mappings":";;;AAUA,OAAO,EACL,oBAAoB,GAErB,MAAM,yBAAyB,CAAA;AAVhC,OAAO,EAEL,YAAY,GACb,MAAM,sCAAsC,CAAA;AAgB7C,OAAO,EAGL,uBAAuB,EACvB,iBAAiB,GAClB,MAAM,0BAA0B,CAAA;AANjC,OAAO,EAA2B,SAAS,EAAE,MAAM,0BAA0B,CAAA;AAD7E,OAAO,EAAuB,KAAK,EAAE,MAAM,2BAA2B,CAAA;;;;;;AA+H/D,KAAK,UAAU,aAAa,CAMjC,MAA2C,EAC3C,EACE,OAAO,EAAE,QAAQ,GAAG,MAAM,CAAC,OAAO,EAClC,MAAM,EACN,OAAO,EACP,WAAW,EACX,KAAK,EAAE,MAAM,EAC+C;IAE9D,IAAI,CAAC,QAAQ,EACX,MAAM,kOAAI,uBAAoB,CAAC;QAC7B,QAAQ,EAAE,oCAAoC;KAC/C,CAAC,CAAA;IACJ,MAAM,OAAO,qPAAG,eAAA,AAAY,EAAC,QAAQ,CAAC,CAAA;IAEtC,MAAM,KAAK,GAAG;QACZ,YAAY,qOAAE,0BAAA,AAAuB,EAAC;YAAE,MAAM;QAAA,CAAE,CAAC;QACjD,GAAI,MAAqB;KAC1B,CAAA;IAED,uFAAuF;IACvF,qDAAqD;uOACrD,oBAAA,AAAiB,EAAC;QAChB,MAAM;QACN,OAAO;QACP,WAAW;QACX,KAAK;KACiB,CAAC,CAAA;IAEzB,IAAI,OAAO,CAAC,IAAI,KAAK,OAAO,EAC1B,OAAO,OAAO,CAAC,aAAa,CAAC;QAC3B,MAAM;QACN,WAAW;QACX,KAAK;QACL,OAAO;KACe,CAAC,CAAA;IAE3B,MAAM,SAAS,sOAAG,YAAA,AAAS,EACzB;QAAE,MAAM,EAAE,MAAM,IAAI,CAAA,CAAE;QAAE,WAAW;QAAE,KAAK;QAAE,OAAO;IAAA,CAAE,EACrD,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,qOAAC,QAAA,AAAK,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAC3D,CAAA;IACD,OAAO,MAAM,CAAC,OAAO,CAAC;QACpB,MAAM,EAAE,sBAAsB;QAC9B,MAAM,EAAE;YAAC,OAAO,CAAC,OAAO;YAAE,SAAS;SAAC;KACrC,CAAC,CAAA;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10763, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10769, "column": 0}, "map": {"version":3,"file":"switchChain.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/wallet/switchChain.ts"],"sourcesContent":["import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\nimport {\n  type NumberToHexErrorType,\n  numberToHex,\n} from '../../utils/encoding/toHex.js'\n\nexport type SwitchChainParameters = {\n  /** ID of Chain to switch to */\n  id: Chain['id']\n}\n\nexport type SwitchChainErrorType =\n  | NumberToHexErrorType\n  | RequestErrorType\n  | ErrorType\n\n/**\n * Switch the target chain in a wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/switchChain.html\n * - JSON-RPC Methods: [`eth_switchEthereumChain`](https://eips.ethereum.org/EIPS/eip-3326)\n *\n * @param client - Client to use\n * @param parameters - {@link SwitchChainParameters}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet, optimism } from 'viem/chains'\n * import { switchChain } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * await switchChain(client, { id: optimism.id })\n */\nexport async function switchChain<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n>(client: Client<Transport, TChain, TAccount>, { id }: SwitchChainParameters) {\n  await client.request({\n    method: 'wallet_switchEthereumChain',\n    params: [\n      {\n        chainId: numberToHex(id),\n      },\n    ],\n  })\n}\n"],"names":[],"mappings":";;;AAMA,OAAO,EAEL,WAAW,GACZ,MAAM,+BAA+B,CAAA;;AAgC/B,KAAK,UAAU,WAAW,CAG/B,MAA2C,EAAE,EAAE,EAAE,EAAyB;IAC1E,MAAM,MAAM,CAAC,OAAO,CAAC;QACnB,MAAM,EAAE,4BAA4B;QACpC,MAAM,EAAE;YACN;gBACE,OAAO,6OAAE,cAAA,AAAW,EAAC,EAAE,CAAC;aACzB;SACF;KACF,CAAC,CAAA;AACJ,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10784, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10790, "column": 0}, "map": {"version":3,"file":"watchAsset.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/wallet/watchAsset.ts"],"sourcesContent":["import type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { WatchAssetParams } from '../../types/eip1193.js'\nimport type { RequestErrorType } from '../../utils/buildRequest.js'\n\nexport type WatchAssetParameters = WatchAssetParams\nexport type WatchAssetReturnType = boolean\nexport type WatchAssetErrorType = RequestErrorType | ErrorType\n\n/**\n * Adds an EVM chain to the wallet.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/watchAsset.html\n * - JSON-RPC Methods: [`eth_switchEthereumChain`](https://eips.ethereum.org/EIPS/eip-747)\n *\n * @param client - Client to use\n * @param parameters - {@link WatchAssetParameters}\n * @returns Boolean indicating if the token was successfully added. {@link WatchAssetReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchAsset } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const success = await watchAsset(client, {\n *   type: 'ERC20',\n *   options: {\n *     address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n *     decimals: 18,\n *     symbol: 'WETH',\n *   },\n * })\n */\nexport async function watchAsset<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  params: WatchAssetParameters,\n): Promise<WatchAssetReturnType> {\n  const added = await client.request({\n    method: 'wallet_watchAsset',\n    params,\n  })\n  return added\n}\n"],"names":[],"mappings":"AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;GA2BG;;;AACI,KAAK,UAAU,UAAU,CAI9B,MAA2C,EAC3C,MAA4B;IAE5B,MAAM,KAAK,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;QACjC,MAAM,EAAE,mBAAmB;QAC3B,MAAM;KACP,CAAC,CAAA;IACF,OAAO,KAAK,CAAA;AACd,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10827, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10833, "column": 0}, "map": {"version":3,"file":"writeContract.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/wallet/writeContract.ts"],"sourcesContent":["import type { Abi } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { GetAccountParameter } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { GetChain } from '../../types/chain.js'\nimport type { ContractFunctionConfig, GetValue } from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { UnionOmit } from '../../types/utils.js'\nimport {\n  type EncodeFunctionDataErrorType,\n  type EncodeFunctionDataParameters,\n  encodeFunctionData,\n} from '../../utils/abi/encodeFunctionData.js'\nimport type { FormattedTransactionRequest } from '../../utils/formatters/transactionRequest.js'\nimport { getAction } from '../../utils/getAction.js'\nimport {\n  type SendTransactionErrorType,\n  type SendTransactionParameters,\n  type SendTransactionReturnType,\n  sendTransaction,\n} from './sendTransaction.js'\n\nexport type WriteContractParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string = string,\n  TChain extends Chain | undefined = Chain,\n  TAccount extends Account | undefined = Account | undefined,\n  TChainOverride extends Chain | undefined = Chain | undefined,\n> = ContractFunctionConfig<TAbi, TFunctionName, 'payable' | 'nonpayable'> &\n  GetAccountParameter<TAccount> &\n  GetChain<TChain, TChainOverride> &\n  UnionOmit<\n    FormattedTransactionRequest<\n      TChainOverride extends Chain ? TChainOverride : TChain\n    >,\n    'from' | 'to' | 'data' | 'value'\n  > &\n  GetValue<\n    TAbi,\n    TFunctionName,\n    FormattedTransactionRequest<\n      TChainOverride extends Chain ? TChainOverride : TChain\n    >['value']\n  > & {\n    /** Data to append to the end of the calldata. Useful for adding a [\"domain\" tag](https://opensea.notion.site/opensea/Seaport-Order-Attributions-ec2d69bf455041a5baa490941aad307f). */\n    dataSuffix?: Hex\n  }\n\nexport type WriteContractReturnType = SendTransactionReturnType\n\nexport type WriteContractErrorType =\n  | EncodeFunctionDataErrorType\n  | SendTransactionErrorType\n  | ErrorType\n\n/**\n * Executes a write function on a contract.\n *\n * - Docs: https://viem.sh/docs/contract/writeContract.html\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts/writing-to-contracts\n *\n * A \"write\" function on a Solidity contract modifies the state of the blockchain. These types of functions require gas to be executed, and hence a [Transaction](https://viem.sh/docs/glossary/terms.html) is needed to be broadcast in order to change the state.\n *\n * Internally, uses a [Wallet Client](https://viem.sh/docs/clients/wallet.html) to call the [`sendTransaction` action](https://viem.sh/docs/actions/wallet/sendTransaction.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n *\n * __Warning: The `write` internally sends a transaction – it does not validate if the contract write will succeed (the contract may throw an error). It is highly recommended to [simulate the contract write with `contract.simulate`](https://viem.sh/docs/contract/writeContract.html#usage) before you execute it.__\n *\n * @param client - Client to use\n * @param parameters - {@link WriteContractParameters}\n * @returns A [Transaction Hash](https://viem.sh/docs/glossary/terms.html#hash). {@link WriteContractReturnType}\n *\n * @example\n * import { createWalletClient, custom, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { writeContract } from 'viem/contract'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const hash = await writeContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n *   functionName: 'mint',\n *   args: [69420],\n * })\n *\n * @example\n * // With Validation\n * import { createWalletClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { simulateContract, writeContract } from 'viem/contract'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const { request } = await simulateContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n *   functionName: 'mint',\n *   args: [69420],\n * }\n * const hash = await writeContract(client, request)\n */\nexport async function writeContract<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n  const TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string,\n  TChainOverride extends Chain | undefined = undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n  {\n    abi,\n    address,\n    args,\n    dataSuffix,\n    functionName,\n    ...request\n  }: WriteContractParameters<\n    TAbi,\n    TFunctionName,\n    TChain,\n    TAccount,\n    TChainOverride\n  >,\n): Promise<WriteContractReturnType> {\n  const data = encodeFunctionData({\n    abi,\n    args,\n    functionName,\n  } as unknown as EncodeFunctionDataParameters<TAbi, TFunctionName>)\n  const hash = await getAction(\n    client,\n    sendTransaction,\n    'sendTransaction',\n  )({\n    data: `${data}${dataSuffix ? dataSuffix.replace('0x', '') : ''}`,\n    to: address,\n    ...request,\n  } as unknown as SendTransactionParameters<TChain, TAccount, TChainOverride>)\n  return hash\n}\n"],"names":[],"mappings":";;;AAYA,OAAO,EAGL,kBAAkB,GACnB,MAAM,uCAAuC,CAAA;AAE9C,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAA;AACpD,OAAO,EAIL,eAAe,GAChB,MAAM,sBAAsB,CAAA;;;;AAqFtB,KAAK,UAAU,aAAa,CAOjC,MAA2C,EAC3C,EACE,GAAG,EACH,OAAO,EACP,IAAI,EACJ,UAAU,EACV,YAAY,EACZ,GAAG,OAAO,EAOX;IAED,MAAM,IAAI,sPAAG,qBAAA,AAAkB,EAAC;QAC9B,GAAG;QACH,IAAI;QACJ,YAAY;KACmD,CAAC,CAAA;IAClE,MAAM,IAAI,GAAG,OAAM,8OAAA,AAAS,EAC1B,MAAM,mPACN,kBAAe,EACf,iBAAiB,CAClB,CAAC;QACA,IAAI,EAAE,GAAG,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE;QAChE,EAAE,EAAE,OAAO;QACX,GAAG,OAAO;KAC+D,CAAC,CAAA;IAC5E,OAAO,IAAI,CAAA;AACb,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10855, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10861, "column": 0}, "map": {"version":3,"file":"wallet.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/clients/decorators/wallet.ts"],"sourcesContent":["import type { Abi, TypedData } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport {\n  type GetChainIdReturnType,\n  getChainId,\n} from '../../actions/public/getChainId.js'\nimport {\n  type AddChainParameters,\n  addChain,\n} from '../../actions/wallet/addChain.js'\nimport {\n  type DeployContractParameters,\n  type DeployContractReturnType,\n  deployContract,\n} from '../../actions/wallet/deployContract.js'\nimport {\n  type GetAddressesReturnType,\n  getAddresses,\n} from '../../actions/wallet/getAddresses.js'\nimport {\n  type GetPermissionsReturnType,\n  getPermissions,\n} from '../../actions/wallet/getPermissions.js'\nimport {\n  type PrepareTransactionRequestParameters,\n  type PrepareTransactionRequestReturnType,\n  prepareTransactionRequest,\n} from '../../actions/wallet/prepareTransactionRequest.js'\nimport {\n  type RequestAddressesReturnType,\n  requestAddresses,\n} from '../../actions/wallet/requestAddresses.js'\nimport {\n  type RequestPermissionsParameters,\n  type RequestPermissionsReturnType,\n  requestPermissions,\n} from '../../actions/wallet/requestPermissions.js'\nimport {\n  type SendRawTransactionParameters,\n  type SendRawTransactionReturnType,\n  sendRawTransaction,\n} from '../../actions/wallet/sendRawTransaction.js'\nimport {\n  type SendTransactionParameters,\n  type SendTransactionReturnType,\n  sendTransaction,\n} from '../../actions/wallet/sendTransaction.js'\nimport {\n  type SignMessageParameters,\n  type SignMessageReturnType,\n  signMessage,\n} from '../../actions/wallet/signMessage.js'\nimport {\n  type SignTransactionParameters,\n  type SignTransactionReturnType,\n  signTransaction,\n} from '../../actions/wallet/signTransaction.js'\nimport {\n  type SignTypedDataParameters,\n  type SignTypedDataReturnType,\n  signTypedData,\n} from '../../actions/wallet/signTypedData.js'\nimport {\n  type SwitchChainParameters,\n  switchChain,\n} from '../../actions/wallet/switchChain.js'\nimport {\n  type WatchAssetParameters,\n  type WatchAssetReturnType,\n  watchAsset,\n} from '../../actions/wallet/watchAsset.js'\nimport {\n  type WriteContractParameters,\n  type WriteContractReturnType,\n  writeContract,\n} from '../../actions/wallet/writeContract.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Client } from '../createClient.js'\nimport type { Transport } from '../transports/createTransport.js'\n\nexport type WalletActions<\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n> = {\n  /**\n   * Adds an EVM chain to the wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/addChain.html\n   * - JSON-RPC Methods: [`eth_addEthereumChain`](https://eips.ethereum.org/EIPS/eip-3085)\n   *\n   * @param args - {@link AddChainParameters}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { optimism } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   transport: custom(window.ethereum),\n   * })\n   * await client.addChain({ chain: optimism })\n   */\n  addChain: (args: AddChainParameters) => Promise<void>\n  /**\n   * Deploys a contract to the network, given bytecode and constructor arguments.\n   *\n   * - Docs: https://viem.sh/docs/contract/deployContract.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts/deploying-contracts\n   *\n   * @param args - {@link DeployContractParameters}\n   * @returns The [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) hash. {@link DeployContractReturnType}\n   *\n   * @example\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const hash = await client.deployContract({\n   *   abi: [],\n   *   account: '0x…,\n   *   bytecode: '0x608060405260405161083e38038061083e833981016040819052610...',\n   * })\n   */\n  deployContract: <\n    const TAbi extends Abi | readonly unknown[],\n    TChainOverride extends Chain | undefined = undefined,\n  >(\n    args: DeployContractParameters<TAbi, TChain, TAccount, TChainOverride>,\n  ) => Promise<DeployContractReturnType>\n  /**\n   * Returns a list of account addresses owned by the wallet or client.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/getAddresses.html\n   * - JSON-RPC Methods: [`eth_accounts`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_accounts)\n   *\n   * @returns List of account addresses owned by the wallet or client. {@link GetAddressesReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const accounts = await client.getAddresses()\n   */\n  getAddresses: () => Promise<GetAddressesReturnType>\n  /**\n   * Returns the chain ID associated with the current network.\n   *\n   * - Docs: https://viem.sh/docs/actions/public/getChainId.html\n   * - JSON-RPC Methods: [`eth_chainId`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_chainid)\n   *\n   * @returns The current chain ID. {@link GetChainIdReturnType}\n   *\n   * @example\n   * import { createWalletClient, http } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const chainId = await client.getChainId()\n   * // 1\n   */\n  getChainId: () => Promise<GetChainIdReturnType>\n  /**\n   * Gets the wallets current permissions.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/getPermissions.html\n   * - JSON-RPC Methods: [`wallet_getPermissions`](https://eips.ethereum.org/EIPS/eip-2255)\n   *\n   * @returns The wallet permissions. {@link GetPermissionsReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const permissions = await client.getPermissions()\n   */\n  getPermissions: () => Promise<GetPermissionsReturnType>\n  /**\n   * Prepares a transaction request for signing.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/prepareTransactionRequest.html\n   *\n   * @param args - {@link PrepareTransactionRequestParameters}\n   * @returns The transaction request. {@link PrepareTransactionRequestReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   */\n  prepareTransactionRequest: <\n    TChainOverride extends Chain | undefined = undefined,\n  >(\n    args: PrepareTransactionRequestParameters<TChain, TAccount, TChainOverride>,\n  ) => Promise<PrepareTransactionRequestReturnType>\n  /**\n   * Requests a list of accounts managed by a wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/requestAddresses.html\n   * - JSON-RPC Methods: [`eth_requestAccounts`](https://eips.ethereum.org/EIPS/eip-1102)\n   *\n   * Sends a request to the wallet, asking for permission to access the user's accounts. After the user accepts the request, it will return a list of accounts (addresses).\n   *\n   * This API can be useful for dapps that need to access the user's accounts in order to execute transactions or interact with smart contracts.\n   *\n   * @returns List of accounts managed by a wallet {@link RequestAddressesReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const accounts = await client.requestAddresses()\n   */\n  requestAddresses: () => Promise<RequestAddressesReturnType>\n  /**\n   * Requests permissions for a wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/requestPermissions.html\n   * - JSON-RPC Methods: [`wallet_requestPermissions`](https://eips.ethereum.org/EIPS/eip-2255)\n   *\n   * @param args - {@link RequestPermissionsParameters}\n   * @returns The wallet permissions. {@link RequestPermissionsReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const permissions = await client.requestPermissions({\n   *   eth_accounts: {}\n   * })\n   */\n  requestPermissions: (\n    args: RequestPermissionsParameters,\n  ) => Promise<RequestPermissionsReturnType>\n  /**\n   * Sends a **signed** transaction to the network\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/sendRawTransaction.html\n   * - JSON-RPC Method: [`eth_sendRawTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n   *\n   * @param client - Client to use\n   * @param parameters - {@link SendRawTransactionParameters}\n   * @returns The transaction hash. {@link SendRawTransactionReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   * import { sendRawTransaction } from 'viem/wallet'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   *\n   * const hash = await client.sendRawTransaction({\n   *   serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33'\n   * })\n   */\n  sendRawTransaction: (\n    args: SendRawTransactionParameters,\n  ) => Promise<SendRawTransactionReturnType>\n  /**\n   * Creates, signs, and sends a new transaction to the network.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/sendTransaction.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions/sending-transactions\n   * - JSON-RPC Methods:\n   *   - JSON-RPC Accounts: [`eth_sendTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendtransaction)\n   *   - Local Accounts: [`eth_sendRawTransaction`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sendrawtransaction)\n   *\n   * @param args - {@link SendTransactionParameters}\n   * @returns The [Transaction](https://viem.sh/docs/glossary/terms.html#transaction) hash. {@link SendTransactionReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const hash = await client.sendTransaction({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *   value: 1000000000000000000n,\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const hash = await client.sendTransaction({\n   *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n   *   value: 1000000000000000000n,\n   * })\n   */\n  sendTransaction: <TChainOverride extends Chain | undefined = undefined>(\n    args: SendTransactionParameters<TChain, TAccount, TChainOverride>,\n  ) => Promise<SendTransactionReturnType>\n  /**\n   * Calculates an Ethereum-specific signature in [EIP-191 format](https://eips.ethereum.org/EIPS/eip-191): `keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message))`.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/signMessage.html\n   * - JSON-RPC Methods:\n   *   - JSON-RPC Accounts: [`personal_sign`](https://docs.metamask.io/guide/signing-data.html#personal-sign)\n   *   - Local Accounts: Signs locally. No JSON-RPC request.\n   *\n   * With the calculated signature, you can:\n   * - use [`verifyMessage`](https://viem.sh/docs/utilities/verifyMessage.html) to verify the signature,\n   * - use [`recoverMessageAddress`](https://viem.sh/docs/utilities/recoverMessageAddress.html) to recover the signing address from a signature.\n   *\n   * @param args - {@link SignMessageParameters}\n   * @returns The signed message. {@link SignMessageReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const signature = await client.signMessage({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   message: 'hello world',\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const signature = await client.signMessage({\n   *   message: 'hello world',\n   * })\n   */\n  signMessage: (\n    args: SignMessageParameters<TAccount>,\n  ) => Promise<SignMessageReturnType>\n  /**\n   * Signs a transaction.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/signTransaction.html\n   * - JSON-RPC Methods:\n   *   - JSON-RPC Accounts: [`eth_signTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n   *   - Local Accounts: Signs locally. No JSON-RPC request.\n   *\n   * @param args - {@link SignTransactionParameters}\n   * @returns The signed message. {@link SignTransactionReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   * const signature = await client.signTransaction(request)\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const request = await client.prepareTransactionRequest({\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: 1n,\n   * })\n   * const signature = await client.signTransaction(request)\n   */\n  signTransaction: <TChainOverride extends Chain | undefined = undefined>(\n    args: SignTransactionParameters<TChain, TAccount, TChainOverride>,\n  ) => Promise<SignTransactionReturnType>\n  /**\n   * Signs typed data and calculates an Ethereum-specific signature in [EIP-191 format](https://eips.ethereum.org/EIPS/eip-191): `keccak256(\"\\x19Ethereum Signed Message:\\n\" + len(message) + message))`.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/signTypedData.html\n   * - JSON-RPC Methods:\n   *   - JSON-RPC Accounts: [`eth_signTypedData_v4`](https://docs.metamask.io/guide/signing-data.html#signtypeddata-v4)\n   *   - Local Accounts: Signs locally. No JSON-RPC request.\n   *\n   * @param client - Client to use\n   * @param args - {@link SignTypedDataParameters}\n   * @returns The signed data. {@link SignTypedDataReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const signature = await client.signTypedData({\n   *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n   *   domain: {\n   *     name: 'Ether Mail',\n   *     version: '1',\n   *     chainId: 1,\n   *     verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n   *   },\n   *   types: {\n   *     Person: [\n   *       { name: 'name', type: 'string' },\n   *       { name: 'wallet', type: 'address' },\n   *     ],\n   *     Mail: [\n   *       { name: 'from', type: 'Person' },\n   *       { name: 'to', type: 'Person' },\n   *       { name: 'contents', type: 'string' },\n   *     ],\n   *   },\n   *   primaryType: 'Mail',\n   *   message: {\n   *     from: {\n   *       name: 'Cow',\n   *       wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n   *     },\n   *     to: {\n   *       name: 'Bob',\n   *       wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n   *     },\n   *     contents: 'Hello, Bob!',\n   *   },\n   * })\n   *\n   * @example\n   * // Account Hoisting\n   * import { createWalletClient, http } from 'viem'\n   * import { privateKeyToAccount } from 'viem/accounts'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   account: privateKeyToAccount('0x…'),\n   *   chain: mainnet,\n   *   transport: http(),\n   * })\n   * const signature = await client.signTypedData({\n   *   domain: {\n   *     name: 'Ether Mail',\n   *     version: '1',\n   *     chainId: 1,\n   *     verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n   *   },\n   *   types: {\n   *     Person: [\n   *       { name: 'name', type: 'string' },\n   *       { name: 'wallet', type: 'address' },\n   *     ],\n   *     Mail: [\n   *       { name: 'from', type: 'Person' },\n   *       { name: 'to', type: 'Person' },\n   *       { name: 'contents', type: 'string' },\n   *     ],\n   *   },\n   *   primaryType: 'Mail',\n   *   message: {\n   *     from: {\n   *       name: 'Cow',\n   *       wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n   *     },\n   *     to: {\n   *       name: 'Bob',\n   *       wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n   *     },\n   *     contents: 'Hello, Bob!',\n   *   },\n   * })\n   */\n  signTypedData: <\n    const TTypedData extends TypedData | { [key: string]: unknown },\n    TPrimaryType extends string,\n  >(\n    args: SignTypedDataParameters<TTypedData, TPrimaryType, TAccount>,\n  ) => Promise<SignTypedDataReturnType>\n  /**\n   * Switch the target chain in a wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/switchChain.html\n   * - JSON-RPC Methods: [`eth_switchEthereumChain`](https://eips.ethereum.org/EIPS/eip-3326)\n   *\n   * @param args - {@link SwitchChainParameters}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet, optimism } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * await client.switchChain({ id: optimism.id })\n   */\n  switchChain: (args: SwitchChainParameters) => Promise<void>\n  /**\n   * Adds an EVM chain to the wallet.\n   *\n   * - Docs: https://viem.sh/docs/actions/wallet/watchAsset.html\n   * - JSON-RPC Methods: [`eth_switchEthereumChain`](https://eips.ethereum.org/EIPS/eip-747)\n   *\n   * @param args - {@link WatchAssetParameters}\n   * @returns Boolean indicating if the token was successfully added. {@link WatchAssetReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const success = await client.watchAsset({\n   *   type: 'ERC20',\n   *   options: {\n   *     address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n   *     decimals: 18,\n   *     symbol: 'WETH',\n   *   },\n   * })\n   */\n  watchAsset: (args: WatchAssetParameters) => Promise<WatchAssetReturnType>\n  /**\n   * Executes a write function on a contract.\n   *\n   * - Docs: https://viem.sh/docs/contract/writeContract.html\n   * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts/writing-to-contracts\n   *\n   * A \"write\" function on a Solidity contract modifies the state of the blockchain. These types of functions require gas to be executed, and hence a [Transaction](https://viem.sh/docs/glossary/terms.html) is needed to be broadcast in order to change the state.\n   *\n   * Internally, uses a [Wallet Client](https://viem.sh/docs/clients/wallet.html) to call the [`sendTransaction` action](https://viem.sh/docs/actions/wallet/sendTransaction.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n   *\n   * __Warning: The `write` internally sends a transaction – it does not validate if the contract write will succeed (the contract may throw an error). It is highly recommended to [simulate the contract write with `contract.simulate`](https://viem.sh/docs/contract/writeContract.html#usage) before you execute it.__\n   *\n   * @param args - {@link WriteContractParameters}\n   * @returns A [Transaction Hash](https://viem.sh/docs/glossary/terms.html#hash). {@link WriteContractReturnType}\n   *\n   * @example\n   * import { createWalletClient, custom, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const hash = await client.writeContract({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n   *   functionName: 'mint',\n   *   args: [69420],\n   * })\n   *\n   * @example\n   * // With Validation\n   * import { createWalletClient, custom, parseAbi } from 'viem'\n   * import { mainnet } from 'viem/chains'\n   *\n   * const client = createWalletClient({\n   *   chain: mainnet,\n   *   transport: custom(window.ethereum),\n   * })\n   * const { request } = await client.simulateContract({\n   *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n   *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n   *   functionName: 'mint',\n   *   args: [69420],\n   * }\n   * const hash = await client.writeContract(request)\n   */\n  writeContract: <\n    const TAbi extends Abi | readonly unknown[],\n    TFunctionName extends string,\n    TChainOverride extends Chain | undefined = undefined,\n  >(\n    args: WriteContractParameters<\n      TAbi,\n      TFunctionName,\n      TChain,\n      TAccount,\n      TChainOverride\n    >,\n  ) => Promise<WriteContractReturnType>\n}\n\nexport function walletActions<\n  TTransport extends Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n>(\n  client: Client<TTransport, TChain, TAccount>,\n): WalletActions<TChain, TAccount> {\n  return {\n    addChain: (args) => addChain(client, args),\n    deployContract: (args) => deployContract(client, args),\n    getAddresses: () => getAddresses(client),\n    getChainId: () => getChainId(client),\n    getPermissions: () => getPermissions(client),\n    prepareTransactionRequest: (args) =>\n      prepareTransactionRequest(client as any, args as any),\n    requestAddresses: () => requestAddresses(client),\n    requestPermissions: (args) => requestPermissions(client, args),\n    sendRawTransaction: (args) => sendRawTransaction(client, args),\n    sendTransaction: (args) => sendTransaction(client, args),\n    signMessage: (args) => signMessage(client, args),\n    signTransaction: (args) => signTransaction(client, args),\n    signTypedData: (args) => signTypedData(client, args),\n    switchChain: (args) => switchChain(client, args),\n    watchAsset: (args) => watchAsset(client, args),\n    writeContract: (args) => writeContract(client, args),\n  }\n}\n"],"names":[],"mappings":";;;AAOA,OAAO,EAEL,QAAQ,GACT,MAAM,kCAAkC,CAAA;AACzC,OAAO,EAGL,cAAc,GACf,MAAM,wCAAwC,CAAA;AAC/C,OAAO,EAEL,YAAY,GACb,MAAM,sCAAsC,CAAA;AAhB7C,OAAO,EAEL,UAAU,GACX,MAAM,oCAAoC,CAAA;AAc3C,OAAO,EAEL,cAAc,GACf,MAAM,wCAAwC,CAAA;AAC/C,OAAO,EAGL,yBAAyB,GAC1B,MAAM,mDAAmD,CAAA;AAC1D,OAAO,EAEL,gBAAgB,GACjB,MAAM,0CAA0C,CAAA;AACjD,OAAO,EAGL,kBAAkB,GACnB,MAAM,4CAA4C,CAAA;AACnD,OAAO,EAGL,kBAAkB,GACnB,MAAM,4CAA4C,CAAA;AACnD,OAAO,EAGL,eAAe,GAChB,MAAM,yCAAyC,CAAA;AAChD,OAAO,EAGL,WAAW,GACZ,MAAM,qCAAqC,CAAA;AAC5C,OAAO,EAGL,eAAe,GAChB,MAAM,yCAAyC,CAAA;AAChD,OAAO,EAGL,aAAa,GACd,MAAM,uCAAuC,CAAA;AAC9C,OAAO,EAEL,WAAW,GACZ,MAAM,qCAAqC,CAAA;AAC5C,OAAO,EAGL,UAAU,GACX,MAAM,oCAAoC,CAAA;AAC3C,OAAO,EAGL,aAAa,GACd,MAAM,uCAAuC,CAAA;;;;;;;;;;;;;;;;;AAokBxC,SAAU,aAAa,CAK3B,MAA4C;IAE5C,OAAO;QACL,QAAQ,EAAE,CAAC,IAAI,EAAE,EAAE,6OAAC,WAAA,AAAQ,EAAC,MAAM,EAAE,IAAI,CAAC;QAC1C,cAAc,EAAE,CAAC,IAAI,EAAE,EAAE,mPAAC,iBAAc,AAAd,EAAe,MAAM,EAAE,IAAI,CAAC;QACtD,YAAY,EAAE,GAAG,EAAE,iPAAC,eAAA,AAAY,EAAC,MAAM,CAAC;QACxC,UAAU,EAAE,GAAG,EAAE,AAAC,4PAAA,AAAU,EAAC,MAAM,CAAC;QACpC,cAAc,EAAE,GAAG,EAAE,mPAAC,iBAAA,AAAc,EAAC,MAAM,CAAC;QAC5C,yBAAyB,EAAE,CAAC,IAAI,EAAE,EAAE,8PAClC,4BAAA,AAAyB,EAAC,MAAa,EAAE,IAAW,CAAC;QACvD,gBAAgB,EAAE,GAAG,EAAE,qPAAC,mBAAA,AAAgB,EAAC,MAAM,CAAC;QAChD,kBAAkB,EAAE,CAAC,IAAI,EAAE,EAAE,uPAAC,qBAAA,AAAkB,EAAC,MAAM,EAAE,IAAI,CAAC;QAC9D,kBAAkB,EAAE,CAAC,IAAI,EAAE,EAAE,AAAC,4QAAA,AAAkB,EAAC,MAAM,EAAE,IAAI,CAAC;QAC9D,eAAe,EAAE,CAAC,IAAI,EAAE,EAAE,oPAAC,kBAAA,AAAe,EAAC,MAAM,EAAE,IAAI,CAAC;QACxD,WAAW,EAAE,CAAC,IAAI,EAAE,EAAE,AAAC,8PAAA,AAAW,EAAC,MAAM,EAAE,IAAI,CAAC;QAChD,eAAe,EAAE,CAAC,IAAI,EAAE,EAAE,oPAAC,kBAAA,AAAe,EAAC,MAAM,EAAE,IAAI,CAAC;QACxD,aAAa,EAAE,CAAC,IAAI,EAAE,EAAE,kPAAC,gBAAA,AAAa,EAAC,MAAM,EAAE,IAAI,CAAC;QACpD,WAAW,EAAE,CAAC,IAAI,EAAE,EAAE,gPAAC,cAAA,AAAW,EAAC,MAAM,EAAE,IAAI,CAAC;QAChD,UAAU,EAAE,CAAC,IAAI,EAAE,EAAE,+OAAC,aAAA,AAAU,EAAC,MAAM,EAAE,IAAI,CAAC;QAC9C,aAAa,EAAE,CAAC,IAAI,EAAE,EAAE,kPAAC,gBAAA,AAAa,EAAC,MAAM,EAAE,IAAI,CAAC;KACrD,CAAA;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10916, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10922, "column": 0}, "map": {"version":3,"file":"createWalletClient.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/clients/createWalletClient.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Account } from '../accounts/types.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { ParseAccount } from '../types/account.js'\nimport type { Chain } from '../types/chain.js'\nimport type { WalletRpcSchema } from '../types/eip1193.js'\nimport type { Prettify } from '../types/utils.js'\nimport {\n  type Client,\n  type ClientConfig,\n  type CreateClientErrorType,\n  createClient,\n} from './createClient.js'\nimport { type WalletActions, walletActions } from './decorators/wallet.js'\nimport type { Transport } from './transports/createTransport.js'\n\nexport type WalletClientConfig<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  accountOrAddress extends Account | Address | undefined =\n    | Account\n    | Address\n    | undefined,\n> = Prettify<\n  Pick<\n    ClientConfig<transport, chain, accountOrAddress>,\n    | 'account'\n    | 'cacheTime'\n    | 'chain'\n    | 'key'\n    | 'name'\n    | 'pollingInterval'\n    | 'transport'\n  >\n>\n\nexport type WalletClient<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n  account extends Account | undefined = Account | undefined,\n> = Prettify<\n  Client<\n    transport,\n    chain,\n    account,\n    WalletRpcSchema,\n    WalletActions<chain, account>\n  >\n>\n\nexport type CreateWalletClientErrorType = CreateClientErrorType | ErrorType\n\n/**\n * Creates a Wallet Client with a given [Transport](https://viem.sh/docs/clients/intro.html) configured for a [Chain](https://viem.sh/docs/clients/chains.html).\n *\n * - Docs: https://viem.sh/docs/clients/wallet.html\n *\n * A Wallet Client is an interface to interact with [Ethereum Account(s)](https://ethereum.org/en/glossary/#account) and provides the ability to retrieve accounts, execute transactions, sign messages, etc. through [Wallet Actions](https://viem.sh/docs/actions/wallet/introduction.html).\n *\n * The Wallet Client supports signing over:\n * - [JSON-RPC Accounts](https://viem.sh/docs/clients/wallet.html#json-rpc-accounts) (e.g. Browser Extension Wallets, WalletConnect, etc).\n * - [Local Accounts](https://viem.sh/docs/clients/wallet.html#local-accounts-private-key-mnemonic-etc) (e.g. private key/mnemonic wallets).\n *\n * @param config - {@link WalletClientConfig}\n * @returns A Wallet Client. {@link WalletClient}\n *\n * @example\n * // JSON-RPC Account\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n *\n * @example\n * // Local Account\n * import { createWalletClient, custom } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…')\n *   chain: mainnet,\n *   transport: http(),\n * })\n */\nexport function createWalletClient<\n  transport extends Transport,\n  chain extends Chain | undefined = undefined,\n  accountOrAddress extends Account | Address | undefined = undefined,\n>(\n  parameters: WalletClientConfig<transport, chain, accountOrAddress>,\n): WalletClient<transport, chain, ParseAccount<accountOrAddress>>\n\nexport function createWalletClient(\n  parameters: WalletClientConfig,\n): WalletClient {\n  const { key = 'wallet', name = 'Wallet Client', transport } = parameters\n  const client = createClient({\n    ...parameters,\n    key,\n    name,\n    transport: (opts) => transport({ ...opts, retryCount: 0 }),\n    type: 'walletClient',\n  })\n  return client.extend(walletActions)\n}\n"],"names":[],"mappings":";;;AAQA,OAAO,EAIL,YAAY,GACb,MAAM,mBAAmB,CAAA;AAC1B,OAAO,EAAsB,aAAa,EAAE,MAAM,wBAAwB,CAAA;;;AAmFpE,SAAU,kBAAkB,CAChC,UAA8B;IAE9B,MAAM,EAAE,GAAG,GAAG,QAAQ,EAAE,IAAI,GAAG,eAAe,EAAE,SAAS,EAAE,GAAG,UAAU,CAAA;IACxE,MAAM,MAAM,2OAAG,eAAA,AAAY,EAAC;QAC1B,GAAG,UAAU;QACb,GAAG;QACH,IAAI;QACJ,SAAS,EAAE,CAAC,IAAI,EAAE,CAAG,CAAD,QAAU,CAAC;gBAAE,GAAG,IAAI;gBAAE,UAAU,EAAE,CAAC;YAAA,CAAE,CAAC;QAC1D,IAAI,EAAE,cAAc;KACrB,CAAC,CAAA;IACF,OAAO,MAAM,CAAC,MAAM,6OAAC,gBAAa,CAAC,CAAA;AACrC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10943, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10949, "column": 0}, "map": {"version":3,"file":"custom.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/clients/transports/custom.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport {\n  type CreateTransportErrorType,\n  type Transport,\n  type TransportConfig,\n  createTransport,\n} from './createTransport.js'\n\ntype EthereumProvider = { request(...args: any): Promise<any> }\n\nexport type CustomTransportConfig = {\n  /** The key of the transport. */\n  key?: TransportConfig['key']\n  /** The name of the transport. */\n  name?: TransportConfig['name']\n  /** The max number of times to retry. */\n  retryCount?: TransportConfig['retryCount']\n  /** The base delay (in ms) between retries. */\n  retryDelay?: TransportConfig['retryDelay']\n}\n\nexport type CustomTransport = Transport<\n  'custom',\n  {},\n  EthereumProvider['request']\n>\n\nexport type CustomTransportErrorType = CreateTransportErrorType | ErrorType\n\n/**\n * @description Creates a custom transport given an EIP-1193 compliant `request` attribute.\n */\nexport function custom<TProvider extends EthereumProvider>(\n  provider: TProvider,\n  config: CustomTransportConfig = {},\n): CustomTransport {\n  const { key = 'custom', name = 'Custom Provider', retryDelay } = config\n  return ({ retryCount: defaultRetryCount }) =>\n    createTransport({\n      key,\n      name,\n      request: provider.request.bind(provider),\n      retryCount: config.retryCount ?? defaultRetryCount,\n      retryDelay,\n      type: 'custom',\n    })\n}\n"],"names":[],"mappings":";;;AACA,OAAO,EAIL,eAAe,GAChB,MAAM,sBAAsB,CAAA;;AA0BvB,SAAU,MAAM,CACpB,QAAmB,EACnB,SAAgC,CAAA,CAAE;IAElC,MAAM,EAAE,GAAG,GAAG,QAAQ,EAAE,IAAI,GAAG,iBAAiB,EAAE,UAAU,EAAE,GAAG,MAAM,CAAA;IACvE,OAAO,CAAC,EAAE,UAAU,EAAE,iBAAiB,EAAE,EAAE,EAAE,wPAC3C,kBAAA,AAAe,EAAC;YACd,GAAG;YACH,IAAI;YACJ,OAAO,EAAE,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;YACxC,UAAU,EAAE,MAAM,CAAC,UAAU,IAAI,iBAAiB;YAClD,UAAU;YACV,IAAI,EAAE,QAAQ;SACf,CAAC,CAAA;AACN,CAAC","ignoreList":[0]}},
    {"offset": {"line": 10965, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10971, "column": 0}, "map": {"version":3,"file":"getContract.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/actions/getContract.ts"],"sourcesContent":["import type {\n  Abi,\n  AbiEvent,\n  AbiFunction,\n  AbiParametersToPrimitiveTypes,\n  Address,\n  ExtractAbiEvent,\n  ExtractAbiEventNames,\n  ExtractAbiFunction,\n  ExtractAbiFunctionNames,\n} from 'abitype'\n\nimport type { Account } from '../accounts/types.js'\nimport type { Client } from '../clients/createClient.js'\nimport type { Transport } from '../clients/transports/createTransport.js'\nimport type { Chain } from '../types/chain.js'\nimport type {\n  AbiEventParametersToPrimitiveTypes,\n  MaybeExtractEventArgsFromAbi,\n} from '../types/contract.js'\nimport type {\n  IsNarrowable,\n  IsNever,\n  IsUndefined,\n  Or,\n  Prettify,\n  UnionOmit,\n} from '../types/utils.js'\n\nimport type { ErrorType } from '../errors/utils.js'\nimport { getAction } from '../utils/getAction.js'\nimport {\n  type CreateContractEventFilterParameters,\n  type CreateContractEventFilterReturnType,\n  createContractEventFilter,\n} from './public/createContractEventFilter.js'\nimport {\n  type EstimateContractGasParameters,\n  type EstimateContractGasReturnType,\n  estimateContractGas,\n} from './public/estimateContractGas.js'\nimport {\n  type GetContractEventsParameters,\n  type GetContractEventsReturnType,\n  getContractEvents,\n} from './public/getContractEvents.js'\nimport {\n  type ReadContractParameters,\n  type ReadContractReturnType,\n  readContract,\n} from './public/readContract.js'\nimport {\n  type SimulateContractParameters,\n  type SimulateContractReturnType,\n  simulateContract,\n} from './public/simulateContract.js'\nimport {\n  type WatchContractEventParameters,\n  type WatchContractEventReturnType,\n  watchContractEvent,\n} from './public/watchContractEvent.js'\nimport {\n  type WriteContractParameters,\n  type WriteContractReturnType,\n  writeContract,\n} from './wallet/writeContract.js'\n\nexport type GetContractParameters<\n  TTransport extends Transport = Transport,\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TPublicClient extends Client<TTransport, TChain> | unknown = unknown,\n  TWalletClient extends\n    | Client<TTransport, TChain, TAccount>\n    | unknown = unknown,\n  TAddress extends Address = Address,\n> = {\n  /** Contract ABI */\n  abi: TAbi\n  /** Contract address */\n  address: TAddress\n  /**\n   * Public client\n   *\n   * If you pass in a [`publicClient`](https://viem.sh/docs/clients/public.html), the following methods are available:\n   *\n   * - [`createEventFilter`](https://viem.sh/docs/contract/createContractEventFilter.html)\n   * - [`estimateGas`](https://viem.sh/docs/contract/estimateContractGas.html)\n   * - [`getEvents`](https://viem.sh/docs/contract/getContractEvents.html)\n   * - [`read`](https://viem.sh/docs/contract/readContract.html)\n   * - [`simulate`](https://viem.sh/docs/contract/simulateContract.html)\n   * - [`watchEvent`](https://viem.sh/docs/contract/watchContractEvent.html)\n   */\n  publicClient?: TPublicClient\n  /**\n   * Wallet client\n   *\n   * If you pass in a [`walletClient`](https://viem.sh/docs/clients/wallet.html), the following methods are available:\n   *\n   * - [`estimateGas`](https://viem.sh/docs/contract/estimateContractGas.html)\n   * - [`write`](https://viem.sh/docs/contract/writeContract.html)\n   */\n  walletClient?: TWalletClient\n}\n\nexport type GetContractReturnType<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TPublicClient extends Client | unknown = unknown,\n  TWalletClient extends Client | unknown = unknown,\n  TAddress extends Address = Address,\n  _EventNames extends string = TAbi extends Abi\n    ? Abi extends TAbi\n      ? string\n      : ExtractAbiEventNames<TAbi>\n    : string,\n  _ReadFunctionNames extends string = TAbi extends Abi\n    ? Abi extends TAbi\n      ? string\n      : ExtractAbiFunctionNames<TAbi, 'pure' | 'view'>\n    : string,\n  _WriteFunctionNames extends string = TAbi extends Abi\n    ? Abi extends TAbi\n      ? string\n      : ExtractAbiFunctionNames<TAbi, 'nonpayable' | 'payable'>\n    : string,\n  _Narrowable extends boolean = IsNarrowable<TAbi, Abi>,\n> = Prettify<\n  (TPublicClient extends Client\n    ? (IsNever<_ReadFunctionNames> extends true\n        ? unknown\n        : {\n            /**\n             * Calls a read-only function on a contract, and returns the response.\n             *\n             * A \"read-only\" function (constant function) on a Solidity contract is denoted by a `view` or `pure` keyword. They can only read the state of the contract, and cannot make any changes to it. Since read-only methods do not change the state of the contract, they do not require any gas to be executed, and can be called by any user without the need to pay for gas.\n             *\n             * Internally, `read` uses a [Public Client](https://viem.sh/docs/clients/public.html) to call the [`call` action](https://viem.sh/docs/actions/public/call.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n             *\n             * @example\n             * import { createPublicClient, getContract, http, parseAbi } from 'viem'\n             * import { mainnet } from 'viem/chains'\n             *\n             * const publicClient = createPublicClient({\n             *   chain: mainnet,\n             *   transport: http(),\n             * })\n             * const contract = getContract({\n             *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n             *   abi: parseAbi([\n             *     'function balanceOf(address owner) view returns (uint256)',\n             *   ]),\n             *   publicClient,\n             * })\n             * const result = await contract.read.balanceOf(['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'])\n             * // 424122n\n             */\n            read: {\n              [_FunctionName in _ReadFunctionNames]: GetReadFunction<\n                _Narrowable,\n                TAbi,\n                _FunctionName\n              >\n            }\n          }) &\n        (IsNever<_WriteFunctionNames> extends true\n          ? unknown\n          : {\n              /**\n               * Estimates the gas necessary to complete a transaction without submitting it to the network.\n               *\n               * @example\n               * import { createPublicClient, getContract, http, parseAbi } from 'viem'\n               * import { mainnet } from 'viem/chains'\n               *\n               * const publicClient = createPublicClient({\n               *   chain: mainnet,\n               *   transport: http(),\n               * })\n               * const contract = getContract({\n               *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n               *   abi: parseAbi(['function mint() public']),\n               *   publicClient,\n               * })\n               * const gas = await contract.estimateGas.mint({\n               *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n               * })\n               */\n              estimateGas: {\n                [_FunctionName in _WriteFunctionNames]: GetEstimateFunction<\n                  _Narrowable,\n                  TPublicClient['chain'],\n                  undefined,\n                  TAbi,\n                  _FunctionName\n                >\n              }\n              /**\n               * Simulates/validates a contract interaction. This is useful for retrieving return data and revert reasons of contract write functions.\n               *\n               * This function does not require gas to execute and does not change the state of the blockchain. It is almost identical to [`readContract`](https://viem.sh/docs/contract/readContract.html), but also supports contract write functions.\n               *\n               * Internally, `simulate` uses a [Public Client](https://viem.sh/docs/clients/public.html) to call the [`call` action](https://viem.sh/docs/actions/public/call.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n               *\n               * @example\n               * import { createPublicClient, getContract, http, parseAbi } from 'viem'\n               * import { mainnet } from 'viem/chains'\n               *\n               * const publicClient = createPublicClient({\n               *   chain: mainnet,\n               *   transport: http(),\n               * })\n               * const contract = getContract({\n               *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n               *   abi: parseAbi(['function mint() public']),\n               *   publicClient,\n               * })\n               * const result = await contract.simulate.mint({\n               *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n               * })\n               */\n              simulate: {\n                [_FunctionName in _WriteFunctionNames]: GetSimulateFunction<\n                  _Narrowable,\n                  TPublicClient['chain'],\n                  TAbi,\n                  _FunctionName\n                >\n              }\n            }) &\n        (IsNever<_EventNames> extends true\n          ? unknown\n          : {\n              /**\n               * Creates a Filter to retrieve event logs that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html) or [`getFilterLogs`](https://viem.sh/docs/actions/public/getFilterLogs.html).\n               *\n               * @example\n               * import { createPublicClient, getContract, http, parseAbi } from 'viem'\n               * import { mainnet } from 'viem/chains'\n               *\n               * const publicClient = createPublicClient({\n               *   chain: mainnet,\n               *   transport: http(),\n               * })\n               * const contract = getContract({\n               *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n               *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n               *   publicClient,\n               * })\n               * const filter = await contract.createEventFilter.Transfer()\n               */\n              createEventFilter: {\n                [_EventName in _EventNames]: GetEventFilter<\n                  _Narrowable,\n                  TAbi,\n                  _EventName\n                >\n              }\n              /**\n               * Creates a Filter to retrieve event logs that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges.html) or [`getFilterLogs`](https://viem.sh/docs/actions/public/getFilterLogs.html).\n               *\n               * @example\n               * import { createPublicClient, getContract, http, parseAbi } from 'viem'\n               * import { mainnet } from 'viem/chains'\n               *\n               * const publicClient = createPublicClient({\n               *   chain: mainnet,\n               *   transport: http(),\n               * })\n               * const contract = getContract({\n               *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n               *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n               *   publicClient,\n               * })\n               * const filter = await contract.createEventFilter.Transfer()\n               */\n              getEvents: {\n                [_EventName in _EventNames]: GetEventsFunction<\n                  _Narrowable,\n                  TAbi,\n                  _EventName\n                >\n              }\n              /**\n               * Watches and returns emitted contract event logs.\n               *\n               * This Action will batch up all the event logs found within the [`pollingInterval`](https://viem.sh/docs/contract/watchContractEvent.html#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/contract/watchContractEvent.html#onLogs).\n               *\n               * `watchEvent` will attempt to create an [Event Filter](https://viem.sh/docs/contract/createContractEventFilter.html) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchEvent` will fall back to using [`getEvents`](https://viem.sh/docs/actions/public/getEvents.html) instead.\n               *\n               * @example\n               * import { createPublicClient, getContract, http, parseAbi } from 'viem'\n               * import { mainnet } from 'viem/chains'\n               *\n               * const publicClient = createPublicClient({\n               *   chain: mainnet,\n               *   transport: http(),\n               * })\n               * const contract = getContract({\n               *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n               *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n               *   publicClient,\n               * })\n               * const filter = await contract.createEventFilter.Transfer()\n               * const unwatch = contract.watchEvent.Transfer(\n               *   { from: '0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b' },\n               *   { onLogs: (logs) => console.log(logs) },\n               * )\n               */\n              watchEvent: {\n                [_EventName in _EventNames]: GetWatchEvent<\n                  _Narrowable,\n                  TAbi,\n                  _EventName\n                >\n              }\n            })\n    : unknown) &\n    (TWalletClient extends Client\n      ? IsNever<_WriteFunctionNames> extends true\n        ? unknown\n        : {\n            /**\n             * Estimates the gas necessary to complete a transaction without submitting it to the network.\n             *\n             * @example\n             * import { createWalletClient, getContract, http, parseAbi } from 'viem'\n             * import { mainnet } from 'viem/chains'\n             *\n             * const walletClient = createWalletClient({\n             *   chain: mainnet,\n             *   transport: http(),\n             * })\n             * const contract = getContract({\n             *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n             *   abi: parseAbi(['function mint() public']),\n             *   walletClient,\n             * })\n             * const gas = await contract.estimateGas.mint({\n             *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n             * })\n             */\n            estimateGas: {\n              [_FunctionName in _WriteFunctionNames]: GetEstimateFunction<\n                _Narrowable,\n                TWalletClient['chain'],\n                TWalletClient['account'],\n                TAbi,\n                _FunctionName\n              >\n            }\n            /**\n             * Executes a write function on a contract.\n             *\n             * A \"write\" function on a Solidity contract modifies the state of the blockchain. These types of functions require gas to be executed, and hence a [Transaction](https://viem.sh/docs/glossary/terms.html) is needed to be broadcast in order to change the state.\n             *\n             * Internally, `write` uses a [Wallet Client](https://viem.sh/docs/clients/wallet.html) to call the [`sendTransaction` action](https://viem.sh/docs/actions/wallet/sendTransaction.html) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData.html).\n             *\n             * __Warning: The `write` internally sends a transaction – it does not validate if the contract write will succeed (the contract may throw an error). It is highly recommended to [simulate the contract write with `contract.simulate`](https://viem.sh/docs/contract/writeContract.html#usage) before you execute it.__\n             *\n             * @example\n             * import { createWalletClient, getContract, http, parseAbi } from 'viem'\n             * import { mainnet } from 'viem/chains'\n             *\n             * const walletClient = createWalletClient({\n             *   chain: mainnet,\n             *   transport: http(),\n             * })\n             * const contract = getContract({\n             *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n             *   abi: parseAbi(['function mint(uint32 tokenId) nonpayable']),\n             *   walletClient,\n             * })\n             * const hash = await contract.write.min([69420], {\n             *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n             * })\n             */\n            write: {\n              [_FunctionName in _WriteFunctionNames]: GetWriteFunction<\n                _Narrowable,\n                TWalletClient['chain'],\n                TWalletClient['account'],\n                TAbi,\n                _FunctionName\n              >\n            }\n          }\n      : unknown)\n> & { address: TAddress; abi: TAbi }\n\nexport type GetContractErrorType = ErrorType\n\n/**\n * Gets type-safe interface for performing contract-related actions with a specific `abi` and `address`.\n *\n * - Docs https://viem.sh/docs/contract/getContract.html\n *\n * Using Contract Instances can make it easier to work with contracts if you don't want to pass the `abi` and `address` properites every time you perform contract actions, e.g. [`readContract`](https://viem.sh/docs/contract/readContract.html), [`writeContract`](https://viem.sh/docs/contract/writeContract.html), [`estimateContractGas`](https://viem.sh/docs/contract/estimateContractGas.html), etc.\n *\n * @example\n * import { createPublicClient, getContract, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const publicClient = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const contract = getContract({\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi([\n *     'function balanceOf(address owner) view returns (uint256)',\n *     'function ownerOf(uint256 tokenId) view returns (address)',\n *     'function totalSupply() view returns (uint256)',\n *   ]),\n *   publicClient,\n * })\n */\nexport function getContract<\n  TTransport extends Transport,\n  TAddress extends Address,\n  const TAbi extends Abi | readonly unknown[],\n  TChain extends Chain | undefined = Chain | undefined,\n  TAccount extends Account | undefined = Account | undefined,\n  TPublicClient extends Client<TTransport, TChain> | undefined =\n    | Client<TTransport, TChain>\n    | undefined,\n  TWalletClient extends Client<TTransport, TChain, TAccount> | undefined =\n    | Client<TTransport, TChain, TAccount>\n    | undefined,\n>({\n  abi,\n  address,\n  publicClient,\n  walletClient,\n}: GetContractParameters<\n  TTransport,\n  TChain,\n  TAccount,\n  TAbi,\n  TPublicClient,\n  TWalletClient,\n  TAddress\n>): GetContractReturnType<TAbi, TPublicClient, TWalletClient, TAddress> {\n  const hasPublicClient = publicClient !== undefined && publicClient !== null\n  const hasWalletClient = walletClient !== undefined && walletClient !== null\n\n  const contract: {\n    [_ in\n      | 'abi'\n      | 'address'\n      | 'createEventFilter'\n      | 'estimateGas'\n      | 'getEvents'\n      | 'read'\n      | 'simulate'\n      | 'watchEvent'\n      | 'write']?: unknown\n  } = {}\n\n  let hasReadFunction = false\n  let hasWriteFunction = false\n  let hasEvent = false\n  for (const item of abi as Abi) {\n    if (item.type === 'function')\n      if (item.stateMutability === 'view' || item.stateMutability === 'pure')\n        hasReadFunction = true\n      else hasWriteFunction = true\n    else if (item.type === 'event') hasEvent = true\n    // Exit early if all flags are `true`\n    if (hasReadFunction && hasWriteFunction && hasEvent) break\n  }\n\n  if (hasPublicClient) {\n    if (hasReadFunction)\n      contract.read = new Proxy(\n        {},\n        {\n          get(_, functionName: string) {\n            return (\n              ...parameters: [\n                args?: readonly unknown[],\n                options?: UnionOmit<\n                  ReadContractParameters,\n                  'abi' | 'address' | 'functionName' | 'args'\n                >,\n              ]\n            ) => {\n              const { args, options } = getFunctionParameters(parameters)\n              return getAction(\n                publicClient,\n                readContract,\n                'readContract',\n              )({\n                abi,\n                address,\n                functionName,\n                args,\n                ...options,\n              } as ReadContractParameters)\n            }\n          },\n        },\n      )\n\n    if (hasWriteFunction)\n      contract.simulate = new Proxy(\n        {},\n        {\n          get(_, functionName: string) {\n            return (\n              ...parameters: [\n                args?: readonly unknown[],\n                options?: UnionOmit<\n                  SimulateContractParameters,\n                  'abi' | 'address' | 'functionName' | 'args'\n                >,\n              ]\n            ) => {\n              const { args, options } = getFunctionParameters(parameters)\n              return getAction(\n                publicClient,\n                simulateContract,\n                'simulateContract',\n              )({\n                abi,\n                address,\n                functionName,\n                args,\n                ...options,\n              } as SimulateContractParameters)\n            }\n          },\n        },\n      )\n\n    if (hasEvent) {\n      contract.createEventFilter = new Proxy(\n        {},\n        {\n          get(_, eventName: string) {\n            return (\n              ...parameters: [\n                args?: readonly unknown[] | object,\n                options?: Omit<\n                  CreateContractEventFilterParameters,\n                  'abi' | 'address' | 'eventName' | 'args'\n                >,\n              ]\n            ) => {\n              const abiEvent = (abi as readonly AbiEvent[]).find(\n                (x: AbiEvent) => x.type === 'event' && x.name === eventName,\n              )\n              const { args, options } = getEventParameters(\n                parameters,\n                abiEvent!,\n              )\n              return getAction(\n                publicClient,\n                createContractEventFilter,\n                'createContractEventFilter',\n              )({\n                abi,\n                address,\n                eventName,\n                args,\n                ...options,\n              } as CreateContractEventFilterParameters)\n            }\n          },\n        },\n      )\n      contract.getEvents = new Proxy(\n        {},\n        {\n          get(_, eventName: string) {\n            return (\n              ...parameters: [\n                args?: readonly unknown[] | object,\n                options?: Omit<\n                  GetContractEventsParameters,\n                  'abi' | 'address' | 'eventName'\n                >,\n              ]\n            ) => {\n              const abiEvent = (abi as readonly AbiEvent[]).find(\n                (x: AbiEvent) => x.type === 'event' && x.name === eventName,\n              )\n              const { args, options } = getEventParameters(\n                parameters,\n                abiEvent!,\n              )\n              return getAction(\n                publicClient,\n                getContractEvents,\n                'getContractEvents',\n              )({\n                abi,\n                address,\n                eventName,\n                args,\n                ...options,\n              } as unknown as GetContractEventsParameters)\n            }\n          },\n        },\n      )\n      contract.watchEvent = new Proxy(\n        {},\n        {\n          get(_, eventName: string) {\n            return (\n              ...parameters: [\n                args?: readonly unknown[] | object,\n                options?: Omit<\n                  WatchContractEventParameters,\n                  'abi' | 'address' | 'eventName'\n                >,\n              ]\n            ) => {\n              const abiEvent = (abi as readonly AbiEvent[]).find(\n                (x: AbiEvent) => x.type === 'event' && x.name === eventName,\n              )\n              const { args, options } = getEventParameters(\n                parameters,\n                abiEvent!,\n              )\n              return getAction(\n                publicClient,\n                watchContractEvent,\n                'watchContractEvent',\n              )({\n                abi,\n                address,\n                eventName,\n                args,\n                ...options,\n              } as unknown as WatchContractEventParameters)\n            }\n          },\n        },\n      )\n    }\n  }\n\n  if (hasWalletClient) {\n    if (hasWriteFunction)\n      contract.write = new Proxy(\n        {},\n        {\n          get(_, functionName: string) {\n            return (\n              ...parameters: [\n                args?: readonly unknown[],\n                options?: UnionOmit<\n                  WriteContractParameters,\n                  'abi' | 'address' | 'functionName' | 'args'\n                >,\n              ]\n            ) => {\n              const { args, options } = getFunctionParameters(parameters)\n              return getAction(\n                walletClient,\n                writeContract,\n                'writeContract',\n              )({\n                abi,\n                address,\n                functionName,\n                args,\n                ...options,\n              } as unknown as WriteContractParameters<\n                TAbi,\n                typeof functionName,\n                TChain,\n                TAccount\n              >)\n            }\n          },\n        },\n      )\n  }\n\n  if (hasPublicClient || hasWalletClient)\n    if (hasWriteFunction)\n      contract.estimateGas = new Proxy(\n        {},\n        {\n          get(_, functionName: string) {\n            return (\n              ...parameters: [\n                args?: readonly unknown[],\n                options?: UnionOmit<\n                  EstimateContractGasParameters,\n                  'abi' | 'address' | 'functionName' | 'args'\n                >,\n              ]\n            ) => {\n              const { args, options } = getFunctionParameters(parameters)\n              const client = (publicClient ?? walletClient)!\n              return getAction(\n                client,\n                estimateContractGas,\n                'estimateContractGas',\n              )({\n                abi,\n                address,\n                functionName,\n                args,\n                ...options,\n                account:\n                  (options as EstimateContractGasParameters).account ??\n                  (walletClient as unknown as Client).account,\n              } as any)\n            }\n          },\n        },\n      )\n  contract.address = address\n  contract.abi = abi\n\n  return contract as unknown as GetContractReturnType<\n    TAbi,\n    TPublicClient,\n    TWalletClient,\n    TAddress\n  >\n}\n\n/**\n * @internal exporting for testing only\n */\nexport function getFunctionParameters(\n  values: [args?: readonly unknown[], options?: object],\n) {\n  const hasArgs = values.length && Array.isArray(values[0])\n  const args = hasArgs ? values[0]! : []\n  const options = (hasArgs ? values[1] : values[0]) ?? {}\n  return { args, options }\n}\n\n/**\n * @internal exporting for testing only\n */\nexport function getEventParameters(\n  values: [args?: object | unknown[], options?: object],\n  abiEvent: AbiEvent,\n) {\n  let hasArgs = false\n  // If first item is array, must be `args`\n  if (Array.isArray(values[0])) hasArgs = true\n  // Check if first item is `args` or `options`\n  else if (values.length === 1) {\n    // if event has indexed inputs, must have `args`\n    hasArgs = abiEvent.inputs.some((x) => x.indexed)\n    // If there are two items in array, must have `args`\n  } else if (values.length === 2) {\n    hasArgs = true\n  }\n\n  const args = hasArgs ? values[0]! : undefined\n  const options = (hasArgs ? values[1] : values[0]) ?? {}\n  return { args, options }\n}\n\ntype GetReadFunction<\n  Narrowable extends boolean,\n  TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string,\n  TAbiFunction extends AbiFunction = TAbi extends Abi\n    ? ExtractAbiFunction<TAbi, TFunctionName>\n    : AbiFunction,\n  Args = AbiParametersToPrimitiveTypes<TAbiFunction['inputs']>,\n  Options = Prettify<\n    UnionOmit<\n      ReadContractParameters<TAbi, TFunctionName>,\n      'abi' | 'address' | 'args' | 'functionName'\n    >\n  >,\n> = Narrowable extends true\n  ? (\n      ...parameters: Args extends readonly []\n        ? [options?: Options]\n        : [args: Args, options?: Options]\n    ) => Promise<ReadContractReturnType<TAbi, TFunctionName>>\n  : (\n      ...parameters:\n        | [options?: Options]\n        | [args: readonly unknown[], options?: Options]\n    ) => Promise<ReadContractReturnType>\n\ntype GetEstimateFunction<\n  Narrowable extends boolean,\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n  TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string,\n  TAbiFunction extends AbiFunction = TAbi extends Abi\n    ? ExtractAbiFunction<TAbi, TFunctionName>\n    : AbiFunction,\n  Args = AbiParametersToPrimitiveTypes<TAbiFunction['inputs']>,\n  Options = Prettify<\n    UnionOmit<\n      EstimateContractGasParameters<TAbi, TFunctionName, TChain, TAccount>,\n      'abi' | 'address' | 'args' | 'functionName'\n    >\n  >,\n  // For making `options` parameter required if `TAccount`\n  IsOptionsRequired = IsUndefined<TAccount>,\n> = Narrowable extends true\n  ? (\n      ...parameters: Args extends readonly []\n        ? IsOptionsRequired extends true\n          ? [options: Options]\n          : [options?: Options]\n        : [\n            args: Args,\n            ...parameters: IsOptionsRequired extends true\n              ? [options: Options]\n              : [options?: Options],\n          ]\n    ) => Promise<EstimateContractGasReturnType>\n  : (\n      ...parameters:\n        | (IsOptionsRequired extends true\n            ? [options: Options]\n            : [options?: Options])\n        | [\n            args: readonly unknown[],\n            ...parameters: IsOptionsRequired extends true\n              ? [options: Options]\n              : [options?: Options],\n          ]\n    ) => Promise<EstimateContractGasReturnType>\n\ntype GetSimulateFunction<\n  Narrowable extends boolean,\n  TChain extends Chain | undefined,\n  TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string,\n  TAbiFunction extends AbiFunction = TAbi extends Abi\n    ? ExtractAbiFunction<TAbi, TFunctionName>\n    : AbiFunction,\n  Args = AbiParametersToPrimitiveTypes<TAbiFunction['inputs']>,\n> = Narrowable extends true\n  ? <\n      TChainOverride extends Chain | undefined,\n      Options extends Prettify<\n        UnionOmit<\n          SimulateContractParameters<\n            TAbi,\n            TFunctionName,\n            TChain,\n            TChainOverride\n          >,\n          'abi' | 'address' | 'args' | 'functionName'\n        >\n      >,\n    >(\n      ...parameters: Args extends readonly []\n        ? [options?: Options]\n        : [args: Args, options?: Options]\n    ) => Promise<\n      SimulateContractReturnType<TAbi, TFunctionName, TChain, TChainOverride>\n    >\n  : <\n      TChainOverride extends Chain | undefined,\n      Options extends Prettify<\n        UnionOmit<\n          SimulateContractParameters<\n            TAbi,\n            TFunctionName,\n            TChain,\n            TChainOverride\n          >,\n          'abi' | 'address' | 'args' | 'functionName'\n        >\n      >,\n    >(\n      ...parameters:\n        | [options?: Options]\n        | [args: readonly unknown[], options?: Options]\n    ) => Promise<SimulateContractReturnType>\n\ntype GetWriteFunction<\n  Narrowable extends boolean,\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n  TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string,\n  TAbiFunction extends AbiFunction = TAbi extends Abi\n    ? ExtractAbiFunction<TAbi, TFunctionName>\n    : AbiFunction,\n  Args = AbiParametersToPrimitiveTypes<TAbiFunction['inputs']>,\n  // For making `options` parameter required if `TAccount` or `TChain` is undefined\n  IsOptionsRequired = Or<[IsUndefined<TAccount>, IsUndefined<TChain>]>,\n> = Narrowable extends true\n  ? <\n      TChainOverride extends Chain | undefined,\n      Options extends Prettify<\n        UnionOmit<\n          WriteContractParameters<\n            TAbi,\n            TFunctionName,\n            TChain,\n            TAccount,\n            TChainOverride\n          >,\n          'abi' | 'address' | 'args' | 'functionName'\n        >\n      >,\n    >(\n      ...parameters: Args extends readonly []\n        ? IsOptionsRequired extends true\n          ? [options: Options]\n          : [options?: Options]\n        : [\n            args: Args,\n            ...parameters: IsOptionsRequired extends true\n              ? [options: Options]\n              : [options?: Options],\n          ]\n    ) => Promise<WriteContractReturnType>\n  : <\n      TChainOverride extends Chain | undefined,\n      Options extends Prettify<\n        UnionOmit<\n          WriteContractParameters<\n            TAbi,\n            TFunctionName,\n            TChain,\n            TAccount,\n            TChainOverride\n          >,\n          'abi' | 'address' | 'args' | 'functionName'\n        >\n      >,\n      Rest extends unknown[] = IsOptionsRequired extends true\n        ? [options: Options]\n        : [options?: Options],\n    >(\n      ...parameters: Rest | [args: readonly unknown[], ...parameters: Rest]\n    ) => Promise<WriteContractReturnType>\n\ntype GetEventFilter<\n  Narrowable extends boolean,\n  TAbi extends Abi | readonly unknown[],\n  TEventName extends string,\n  TAbiEvent extends AbiEvent = TAbi extends Abi\n    ? ExtractAbiEvent<TAbi, TEventName>\n    : AbiEvent,\n  Args = AbiEventParametersToPrimitiveTypes<TAbiEvent['inputs']>,\n  Options = Prettify<\n    Omit<\n      CreateContractEventFilterParameters<TAbi, TEventName>,\n      'abi' | 'address' | 'args' | 'eventName' | 'strict'\n    >\n  >,\n  IndexedInputs = Extract<TAbiEvent['inputs'][number], { indexed: true }>,\n> = Narrowable extends true\n  ? <\n      const TArgs extends\n        | MaybeExtractEventArgsFromAbi<TAbi, TEventName>\n        | undefined,\n      TStrict extends boolean | undefined = undefined,\n    >(\n      ...parameters: IsNever<IndexedInputs> extends true\n        ? [options?: Options & { strict?: TStrict }]\n        : [\n            args: Args | (Args extends TArgs ? Readonly<TArgs> : never),\n            options?: Options & { strict?: TStrict },\n          ]\n    ) => Promise<\n      CreateContractEventFilterReturnType<TAbi, TEventName, TArgs, TStrict>\n    >\n  : <TStrict extends boolean | undefined = undefined>(\n      ...parameters:\n        | [options?: Options & { strict?: TStrict }]\n        | [\n            args: readonly unknown[] | CreateContractFilterOptions,\n            options?: Options & { strict?: TStrict },\n          ]\n    ) => Promise<CreateContractEventFilterReturnType>\n\ntype GetEventsFunction<\n  Narrowable extends boolean,\n  TAbi extends Abi | readonly unknown[],\n  TEventName extends string,\n  TAbiEvent extends AbiEvent = TAbi extends Abi\n    ? ExtractAbiEvent<TAbi, TEventName>\n    : AbiEvent,\n  Args = AbiEventParametersToPrimitiveTypes<TAbiEvent['inputs']>,\n  Options = Prettify<\n    Omit<\n      GetContractEventsParameters<TAbi, TEventName>,\n      'abi' | 'address' | 'args' | 'eventName'\n    >\n  >,\n  IndexedInputs = Extract<TAbiEvent['inputs'][number], { indexed: true }>,\n> = Narrowable extends true\n  ? (\n      ...parameters: IsNever<IndexedInputs> extends true\n        ? [options?: Options]\n        : [args?: Args, options?: Options]\n    ) => Promise<GetContractEventsReturnType<TAbi, TEventName>>\n  : (\n      ...parameters:\n        | [options?: Options]\n        | [\n            args?: readonly unknown[] | WatchContractEventOptions,\n            options?: Options,\n          ]\n    ) => Promise<GetContractEventsReturnType<TAbi, TEventName>>\n\ntype GetWatchEvent<\n  Narrowable extends boolean,\n  TAbi extends Abi | readonly unknown[],\n  TEventName extends string,\n  TAbiEvent extends AbiEvent = TAbi extends Abi\n    ? ExtractAbiEvent<TAbi, TEventName>\n    : AbiEvent,\n  Args = AbiEventParametersToPrimitiveTypes<TAbiEvent['inputs']>,\n  Options = Prettify<\n    Omit<\n      WatchContractEventParameters<TAbi, TEventName>,\n      'abi' | 'address' | 'args' | 'eventName'\n    >\n  >,\n  IndexedInputs = Extract<TAbiEvent['inputs'][number], { indexed: true }>,\n> = Narrowable extends true\n  ? (\n      ...parameters: IsNever<IndexedInputs> extends true\n        ? [options: Options]\n        : [args: Args, options: Options]\n    ) => WatchContractEventReturnType\n  : (\n      ...parameters:\n        | [options?: Options]\n        | [\n            args: readonly unknown[] | WatchContractEventOptions,\n            options?: Options,\n          ]\n    ) => WatchContractEventReturnType\n\ntype CreateContractFilterOptions =\n  RemoveProperties<CreateContractEventFilterParameters>\ntype WatchContractEventOptions = RemoveProperties<WatchContractEventParameters>\n\ntype RemoveProperties<T extends object> = Prettify<\n  {\n    [key: string]: unknown\n  } & {\n    [_ in keyof T]?: never\n  }\n>\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 11148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11154, "column": 0}, "map": {"version":3,"file":"parseUnits.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/unit/parseUnits.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\n\nexport type ParseUnitsErrorType = ErrorType\n\n/**\n * Multiplies a string representation of a number by a given exponent of base 10 (10exponent).\n *\n * - Docs: https://viem.sh/docs/utilities/parseUnits.html\n *\n * @example\n * import { parseUnits } from 'viem'\n *\n * parseUnits('420', 9)\n * // 420000000000n\n */\nexport function parseUnits(value: string, decimals: number) {\n  let [integer, fraction = '0'] = value.split('.')\n\n  const negative = integer.startsWith('-')\n  if (negative) integer = integer.slice(1)\n\n  // trim leading zeros.\n  fraction = fraction.replace(/(0+)$/, '')\n\n  // round off if the fraction is larger than the number of decimals.\n  if (decimals === 0) {\n    if (Math.round(Number(`.${fraction}`)) === 1)\n      integer = `${BigInt(integer) + 1n}`\n    fraction = ''\n  } else if (fraction.length > decimals) {\n    const [left, unit, right] = [\n      fraction.slice(0, decimals - 1),\n      fraction.slice(decimals - 1, decimals),\n      fraction.slice(decimals),\n    ]\n\n    const rounded = Math.round(Number(`${unit}.${right}`))\n    if (rounded > 9)\n      fraction = `${BigInt(left) + BigInt(1)}0`.padStart(left.length + 1, '0')\n    else fraction = `${left}${rounded}`\n\n    if (fraction.length > decimals) {\n      fraction = fraction.slice(1)\n      integer = `${BigInt(integer) + 1n}`\n    }\n\n    fraction = fraction.slice(0, decimals)\n  } else {\n    fraction = fraction.padEnd(decimals, '0')\n  }\n\n  return BigInt(`${negative ? '-' : ''}${integer}${fraction}`)\n}\n"],"names":[],"mappings":"AAIA;;;;;;;;;;GAUG;;;AACG,SAAU,UAAU,CAAC,KAAa,EAAE,QAAgB;IACxD,IAAI,CAAC,OAAO,EAAE,QAAQ,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;IAEhD,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAA;IACxC,IAAI,QAAQ,EAAE,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;IAExC,sBAAsB;IACtB,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAA;IAExC,mEAAmE;IACnE,IAAI,QAAQ,KAAK,CAAC,EAAE;QAClB,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA,CAAA,EAAI,QAAQ,EAAE,CAAC,CAAC,KAAK,CAAC,EAC1C,OAAO,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAA;QACrC,QAAQ,GAAG,EAAE,CAAA;KACd,MAAM,IAAI,QAAQ,CAAC,MAAM,GAAG,QAAQ,EAAE;QACrC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,GAAG;YAC1B,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC;YAC/B,QAAQ,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,EAAE,QAAQ,CAAC;YACtC,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC;SACzB,CAAA;QAED,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,CAAA,CAAA,EAAI,KAAK,EAAE,CAAC,CAAC,CAAA;QACtD,IAAI,OAAO,GAAG,CAAC,EACb,QAAQ,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAA,CAAA,CAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,GAAG,CAAC,CAAA;aACrE,QAAQ,GAAG,GAAG,IAAI,GAAG,OAAO,EAAE,CAAA;QAEnC,IAAI,QAAQ,CAAC,MAAM,GAAG,QAAQ,EAAE;YAC9B,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;YAC5B,OAAO,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAA;SACpC;QAED,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAA;KACvC,MAAM;QACL,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAA;KAC1C;IAED,OAAO,MAAM,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,OAAO,GAAG,QAAQ,EAAE,CAAC,CAAA;AAC9D,CAAC","ignoreList":[0]}},
    {"offset": {"line": 11196, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11202, "column": 0}, "map": {"version":3,"file":"parseGwei.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/unit/parseGwei.ts"],"sourcesContent":["import { gweiUnits } from '../../constants/unit.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\nimport { type ParseUnitsErrorType, parseUnits } from './parseUnits.js'\n\nexport type ParseGweiErrorType = ParseUnitsErrorType | ErrorType\n\n/**\n * Converts a string representation of gwei to numerical wei.\n *\n * - Docs: https://viem.sh/docs/utilities/parseGwei.html\n *\n * @example\n * import { parseGwei } from 'viem'\n *\n * parseGwei('420')\n * // 420000000000n\n */\nexport function parseGwei(ether: string, unit: 'wei' = 'wei') {\n  return parseUnits(ether, gweiUnits[unit])\n}\n"],"names":[],"mappings":";;;AAGA,OAAO,EAA4B,UAAU,EAAE,MAAM,iBAAiB,CAAA;AAHtE,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAA;;;AAkB7C,SAAU,SAAS,CAAC,KAAa,EAAE,OAAc,KAAK;IAC1D,mPAAO,aAAA,AAAU,EAAC,KAAK,gOAAE,YAAS,CAAC,IAAI,CAAC,CAAC,CAAA;AAC3C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 11212, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11218, "column": 0}, "map": {"version":3,"file":"polygon.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/chains/definitions/polygon.ts"],"sourcesContent":["import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const polygon = /*#__PURE__*/ defineChain({\n  id: 137,\n  name: 'Polygon',\n  network: 'matic',\n  nativeCurrency: { name: 'MATIC', symbol: 'MATIC', decimals: 18 },\n  rpcUrls: {\n    alchemy: {\n      http: ['https://polygon-mainnet.g.alchemy.com/v2'],\n      webSocket: ['wss://polygon-mainnet.g.alchemy.com/v2'],\n    },\n    infura: {\n      http: ['https://polygon-mainnet.infura.io/v3'],\n      webSocket: ['wss://polygon-mainnet.infura.io/ws/v3'],\n    },\n    default: {\n      http: ['https://polygon-rpc.com'],\n    },\n    public: {\n      http: ['https://polygon-rpc.com'],\n    },\n  },\n  blockExplorers: {\n    etherscan: {\n      name: 'PolygonScan',\n      url: 'https://polygonscan.com',\n    },\n    default: {\n      name: 'PolygonScan',\n      url: 'https://polygonscan.com',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 25770160,\n    },\n  },\n})\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,kCAAkC,CAAA;;AAEvD,MAAM,OAAO,GAAG,WAAA,EAAa,+OAAC,cAAA,AAAW,EAAC;IAC/C,EAAE,EAAE,GAAG;IACP,IAAI,EAAE,SAAS;IACf,OAAO,EAAE,OAAO;IAChB,cAAc,EAAE;QAAE,IAAI,EAAE,OAAO;QAAE,MAAM,EAAE,OAAO;QAAE,QAAQ,EAAE,EAAE;IAAA,CAAE;IAChE,OAAO,EAAE;QACP,OAAO,EAAE;YACP,IAAI,EAAE;gBAAC,0CAA0C;aAAC;YAClD,SAAS,EAAE;gBAAC,wCAAwC;aAAC;SACtD;QACD,MAAM,EAAE;YACN,IAAI,EAAE;gBAAC,sCAAsC;aAAC;YAC9C,SAAS,EAAE;gBAAC,uCAAuC;aAAC;SACrD;QACD,OAAO,EAAE;YACP,IAAI,EAAE;gBAAC,yBAAyB;aAAC;SAClC;QACD,MAAM,EAAE;YACN,IAAI,EAAE;gBAAC,yBAAyB;aAAC;SAClC;KACF;IACD,cAAc,EAAE;QACd,SAAS,EAAE;YACT,IAAI,EAAE,aAAa;YACnB,GAAG,EAAE,yBAAyB;SAC/B;QACD,OAAO,EAAE;YACP,IAAI,EAAE,aAAa;YACnB,GAAG,EAAE,yBAAyB;SAC/B;KACF;IACD,SAAS,EAAE;QACT,UAAU,EAAE;YACV,OAAO,EAAE,4CAA4C;YACrD,YAAY,EAAE,QAAQ;SACvB;KACF;CACF,CAAC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 11277, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11283, "column": 0}, "map": {"version":3,"file":"formatters.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/chains/optimism/formatters.ts"],"sourcesContent":["import { type ChainFormatters } from '../../types/chain.js'\nimport type { Hash } from '../../types/misc.js'\nimport { type RpcTransaction } from '../../types/rpc.js'\nimport { hexToBigInt } from '../../utils/encoding/fromHex.js'\nimport { defineBlock } from '../../utils/formatters/block.js'\nimport {\n  defineTransaction,\n  formatTransaction,\n} from '../../utils/formatters/transaction.js'\nimport { defineTransactionReceipt } from '../../utils/formatters/transactionReceipt.js'\nimport type {\n  OptimismBlockOverrides,\n  OptimismRpcBlockOverrides,\n  OptimismRpcTransaction,\n  OptimismRpcTransactionReceiptOverrides,\n  OptimismTransaction,\n  OptimismTransactionReceiptOverrides,\n} from './types.js'\n\nexport const formattersOptimism = {\n  block: /*#__PURE__*/ defineBlock({\n    format(\n      args: OptimismRpcBlockOverrides & {\n        transactions: Hash[] | OptimismRpcTransaction[]\n      },\n    ): OptimismBlockOverrides & {\n      transactions: Hash[] | OptimismTransaction[]\n    } {\n      const transactions = args.transactions?.map((transaction) => {\n        if (typeof transaction === 'string') return transaction\n        const formatted = formatTransaction(\n          transaction as RpcTransaction,\n        ) as OptimismTransaction\n        if (formatted.typeHex === '0x7e') {\n          formatted.isSystemTx = transaction.isSystemTx\n          formatted.mint = transaction.mint\n            ? hexToBigInt(transaction.mint)\n            : undefined\n          formatted.sourceHash = transaction.sourceHash\n          formatted.type = 'deposit'\n        }\n        return formatted\n      }) as Hash[] | OptimismTransaction[]\n      return {\n        transactions,\n        stateRoot: args.stateRoot,\n      }\n    },\n  }),\n  transaction: /*#__PURE__*/ defineTransaction({\n    format(args: OptimismRpcTransaction): OptimismTransaction {\n      const transaction = {} as OptimismTransaction\n      if (args.type === '0x7e') {\n        transaction.isSystemTx = args.isSystemTx\n        transaction.mint = args.mint ? hexToBigInt(args.mint) : undefined\n        transaction.sourceHash = args.sourceHash\n        transaction.type = 'deposit'\n      }\n      return transaction\n    },\n  }),\n  transactionReceipt: /*#__PURE__*/ defineTransactionReceipt({\n    format(\n      args: OptimismRpcTransactionReceiptOverrides,\n    ): OptimismTransactionReceiptOverrides {\n      return {\n        l1GasPrice: args.l1GasPrice ? hexToBigInt(args.l1GasPrice) : null,\n        l1GasUsed: args.l1GasUsed ? hexToBigInt(args.l1GasUsed) : null,\n        l1Fee: args.l1Fee ? hexToBigInt(args.l1Fee) : null,\n        l1FeeScalar: args.l1FeeScalar ? Number(args.l1FeeScalar) : null,\n      }\n    },\n  }),\n} as const satisfies ChainFormatters\n"],"names":[],"mappings":";;;AAIA,OAAO,EAAE,WAAW,EAAE,MAAM,iCAAiC,CAAA;AAC7D,OAAO,EACL,iBAAiB,EACjB,iBAAiB,GAClB,MAAM,uCAAuC,CAAA;AAL9C,OAAO,EAAE,WAAW,EAAE,MAAM,iCAAiC,CAAA;AAM7D,OAAO,EAAE,wBAAwB,EAAE,MAAM,8CAA8C,CAAA;;;;;;;AAUhF,MAAM,kBAAkB,GAAG;IAChC,KAAK,EAAE,WAAA,EAAa,8OAAC,cAAA,AAAW,EAAC;QAC/B,MAAM,EACJ,IAEC;YAID,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC,WAAW,EAAE,EAAE;gBAC1D,IAAI,OAAO,WAAW,KAAK,QAAQ,EAAE,OAAO,WAAW,CAAA;gBACvD,MAAM,SAAS,sPAAG,oBAAA,AAAiB,EACjC,WAA6B,CACP,CAAA;gBACxB,IAAI,SAAS,CAAC,OAAO,KAAK,MAAM,EAAE;oBAChC,SAAS,CAAC,UAAU,GAAG,WAAW,CAAC,UAAU,CAAA;oBAC7C,SAAS,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI,gPAC7B,cAAW,AAAX,EAAY,WAAW,CAAC,IAAI,CAAC,GAC7B,SAAS,CAAA;oBACb,SAAS,CAAC,UAAU,GAAG,WAAW,CAAC,UAAU,CAAA;oBAC7C,SAAS,CAAC,IAAI,GAAG,SAAS,CAAA;iBAC3B;gBACD,OAAO,SAAS,CAAA;YAClB,CAAC,CAAmC,CAAA;YACpC,OAAO;gBACL,YAAY;gBACZ,SAAS,EAAE,IAAI,CAAC,SAAS;aAC1B,CAAA;QACH,CAAC;KACF,CAAC;IACF,WAAW,EAAE,WAAA,EAAa,oPAAC,oBAAA,AAAiB,EAAC;QAC3C,MAAM,EAAC,IAA4B;YACjC,MAAM,WAAW,GAAG,CAAA,CAAyB,CAAA;YAC7C,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;gBACxB,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAA;gBACxC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,8OAAC,cAAA,AAAW,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAA;gBACjE,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAA;gBACxC,WAAW,CAAC,IAAI,GAAG,SAAS,CAAA;aAC7B;YACD,OAAO,WAAW,CAAA;QACpB,CAAC;KACF,CAAC;IACF,kBAAkB,EAAE,WAAA,EAAa,2PAAC,2BAAA,AAAwB,EAAC;QACzD,MAAM,EACJ,IAA4C;YAE5C,OAAO;gBACL,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,8OAAC,cAAA,AAAW,EAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI;gBACjE,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,8OAAC,cAAA,AAAW,EAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI;gBAC9D,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,8OAAC,cAAA,AAAW,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI;gBAClD,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI;aAChE,CAAA;QACH,CAAC;KACF,CAAC;CACgC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 11339, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11345, "column": 0}, "map": {"version":3,"file":"optimism.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/chains/definitions/optimism.ts"],"sourcesContent":["import { defineChain } from '../../utils/chain/defineChain.js'\nimport { formattersOptimism } from '../optimism/formatters.js'\n\nexport const optimism = /*#__PURE__*/ defineChain(\n  {\n    id: 10,\n    name: 'OP Mainnet',\n    network: 'optimism',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n      alchemy: {\n        http: ['https://opt-mainnet.g.alchemy.com/v2'],\n        webSocket: ['wss://opt-mainnet.g.alchemy.com/v2'],\n      },\n      infura: {\n        http: ['https://optimism-mainnet.infura.io/v3'],\n        webSocket: ['wss://optimism-mainnet.infura.io/ws/v3'],\n      },\n      default: {\n        http: ['https://mainnet.optimism.io'],\n      },\n      public: {\n        http: ['https://mainnet.optimism.io'],\n      },\n    },\n    blockExplorers: {\n      etherscan: {\n        name: 'Etherscan',\n        url: 'https://optimistic.etherscan.io',\n      },\n      default: {\n        name: 'Optimism Explorer',\n        url: 'https://explorer.optimism.io',\n      },\n    },\n    contracts: {\n      multicall3: {\n        address: '0xca11bde05977b3631167028862be2a173976ca11',\n        blockCreated: 4286263,\n      },\n    },\n  },\n  {\n    formatters: formattersOptimism,\n  },\n)\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,kCAAkC,CAAA;AAC9D,OAAO,EAAE,kBAAkB,EAAE,MAAM,2BAA2B,CAAA;;;AAEvD,MAAM,QAAQ,GAAG,WAAA,EAAa,+OAAC,cAAA,AAAW,EAC/C;IACE,EAAE,EAAE,EAAE;IACN,IAAI,EAAE,YAAY;IAClB,OAAO,EAAE,UAAU;IACnB,cAAc,EAAE;QAAE,IAAI,EAAE,OAAO;QAAE,MAAM,EAAE,KAAK;QAAE,QAAQ,EAAE,EAAE;IAAA,CAAE;IAC9D,OAAO,EAAE;QACP,OAAO,EAAE;YACP,IAAI,EAAE;gBAAC,sCAAsC;aAAC;YAC9C,SAAS,EAAE;gBAAC,oCAAoC;aAAC;SAClD;QACD,MAAM,EAAE;YACN,IAAI,EAAE;gBAAC,uCAAuC;aAAC;YAC/C,SAAS,EAAE;gBAAC,wCAAwC;aAAC;SACtD;QACD,OAAO,EAAE;YACP,IAAI,EAAE;gBAAC,6BAA6B;aAAC;SACtC;QACD,MAAM,EAAE;YACN,IAAI,EAAE;gBAAC,6BAA6B;aAAC;SACtC;KACF;IACD,cAAc,EAAE;QACd,SAAS,EAAE;YACT,IAAI,EAAE,WAAW;YACjB,GAAG,EAAE,iCAAiC;SACvC;QACD,OAAO,EAAE;YACP,IAAI,EAAE,mBAAmB;YACzB,GAAG,EAAE,8BAA8B;SACpC;KACF;IACD,SAAS,EAAE;QACT,UAAU,EAAE;YACV,OAAO,EAAE,4CAA4C;YACrD,YAAY,EAAE,OAAO;SACtB;KACF;CACF,EACD;IACE,UAAU,+OAAE,qBAAkB;CAC/B,CACF,CAAA","ignoreList":[0]}},
    {"offset": {"line": 11408, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11414, "column": 0}, "map": {"version":3,"file":"arbitrum.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/chains/definitions/arbitrum.ts"],"sourcesContent":["import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const arbitrum = /*#__PURE__*/ defineChain({\n  id: 42_161,\n  name: 'Arbitrum One',\n  network: 'arbitrum',\n  nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n  rpcUrls: {\n    alchemy: {\n      http: ['https://arb-mainnet.g.alchemy.com/v2'],\n      webSocket: ['wss://arb-mainnet.g.alchemy.com/v2'],\n    },\n    infura: {\n      http: ['https://arbitrum-mainnet.infura.io/v3'],\n      webSocket: ['wss://arbitrum-mainnet.infura.io/ws/v3'],\n    },\n    default: {\n      http: ['https://arb1.arbitrum.io/rpc'],\n    },\n    public: {\n      http: ['https://arb1.arbitrum.io/rpc'],\n    },\n  },\n  blockExplorers: {\n    etherscan: { name: 'Arbiscan', url: 'https://arbiscan.io' },\n    default: { name: 'Arbiscan', url: 'https://arbiscan.io' },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 7654707,\n    },\n  },\n})\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,kCAAkC,CAAA;;AAEvD,MAAM,QAAQ,GAAG,WAAA,EAAa,+OAAC,cAAA,AAAW,EAAC;IAChD,EAAE,EAAE,KAAM;IACV,IAAI,EAAE,cAAc;IACpB,OAAO,EAAE,UAAU;IACnB,cAAc,EAAE;QAAE,IAAI,EAAE,OAAO;QAAE,MAAM,EAAE,KAAK;QAAE,QAAQ,EAAE,EAAE;IAAA,CAAE;IAC9D,OAAO,EAAE;QACP,OAAO,EAAE;YACP,IAAI,EAAE;gBAAC,sCAAsC;aAAC;YAC9C,SAAS,EAAE;gBAAC,oCAAoC;aAAC;SAClD;QACD,MAAM,EAAE;YACN,IAAI,EAAE;gBAAC,uCAAuC;aAAC;YAC/C,SAAS,EAAE;gBAAC,wCAAwC;aAAC;SACtD;QACD,OAAO,EAAE;YACP,IAAI,EAAE;gBAAC,8BAA8B;aAAC;SACvC;QACD,MAAM,EAAE;YACN,IAAI,EAAE;gBAAC,8BAA8B;aAAC;SACvC;KACF;IACD,cAAc,EAAE;QACd,SAAS,EAAE;YAAE,IAAI,EAAE,UAAU;YAAE,GAAG,EAAE,qBAAqB;QAAA,CAAE;QAC3D,OAAO,EAAE;YAAE,IAAI,EAAE,UAAU;YAAE,GAAG,EAAE,qBAAqB;QAAA,CAAE;KAC1D;IACD,SAAS,EAAE;QACT,UAAU,EAAE;YACV,OAAO,EAAE,4CAA4C;YACrD,YAAY,EAAE,OAAO;SACtB;KACF;CACF,CAAC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 11473, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 11479, "column": 0}, "map": {"version":3,"file":"sepolia.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/chains/definitions/sepolia.ts"],"sourcesContent":["import { defineChain } from '../../utils/chain/defineChain.js'\n\nexport const sepolia = /*#__PURE__*/ defineChain({\n  id: 11_155_111,\n  network: 'sepolia',\n  name: 'Sepolia',\n  nativeCurrency: { name: 'Sepolia Ether', symbol: 'SEP', decimals: 18 },\n  rpcUrls: {\n    alchemy: {\n      http: ['https://eth-sepolia.g.alchemy.com/v2'],\n      webSocket: ['wss://eth-sepolia.g.alchemy.com/v2'],\n    },\n    infura: {\n      http: ['https://sepolia.infura.io/v3'],\n      webSocket: ['wss://sepolia.infura.io/ws/v3'],\n    },\n    default: {\n      http: ['https://rpc.sepolia.org'],\n    },\n    public: {\n      http: ['https://rpc.sepolia.org'],\n    },\n  },\n  blockExplorers: {\n    etherscan: {\n      name: 'Etherscan',\n      url: 'https://sepolia.etherscan.io',\n    },\n    default: {\n      name: 'Etherscan',\n      url: 'https://sepolia.etherscan.io',\n    },\n  },\n  contracts: {\n    multicall3: {\n      address: '0xca11bde05977b3631167028862be2a173976ca11',\n      blockCreated: 751532,\n    },\n    ensRegistry: { address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e' },\n    ensUniversalResolver: {\n      address: '0x21B000Fd62a880b2125A61e36a284BB757b76025',\n      blockCreated: 3914906,\n    },\n  },\n  testnet: true,\n})\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,kCAAkC,CAAA;;AAEvD,MAAM,OAAO,GAAG,WAAA,EAAa,+OAAC,cAAA,AAAW,EAAC;IAC/C,EAAE,EAAE,QAAU;IACd,OAAO,EAAE,SAAS;IAClB,IAAI,EAAE,SAAS;IACf,cAAc,EAAE;QAAE,IAAI,EAAE,eAAe;QAAE,MAAM,EAAE,KAAK;QAAE,QAAQ,EAAE,EAAE;IAAA,CAAE;IACtE,OAAO,EAAE;QACP,OAAO,EAAE;YACP,IAAI,EAAE;gBAAC,sCAAsC;aAAC;YAC9C,SAAS,EAAE;gBAAC,oCAAoC;aAAC;SAClD;QACD,MAAM,EAAE;YACN,IAAI,EAAE;gBAAC,8BAA8B;aAAC;YACtC,SAAS,EAAE;gBAAC,+BAA+B;aAAC;SAC7C;QACD,OAAO,EAAE;YACP,IAAI,EAAE;gBAAC,yBAAyB;aAAC;SAClC;QACD,MAAM,EAAE;YACN,IAAI,EAAE;gBAAC,yBAAyB;aAAC;SAClC;KACF;IACD,cAAc,EAAE;QACd,SAAS,EAAE;YACT,IAAI,EAAE,WAAW;YACjB,GAAG,EAAE,8BAA8B;SACpC;QACD,OAAO,EAAE;YACP,IAAI,EAAE,WAAW;YACjB,GAAG,EAAE,8BAA8B;SACpC;KACF;IACD,SAAS,EAAE;QACT,UAAU,EAAE;YACV,OAAO,EAAE,4CAA4C;YACrD,YAAY,EAAE,MAAM;SACrB;QACD,WAAW,EAAE;YAAE,OAAO,EAAE,4CAA4C;QAAA,CAAE;QACtE,oBAAoB,EAAE;YACpB,OAAO,EAAE,4CAA4C;YACrD,YAAY,EAAE,OAAO;SACtB;KACF;IACD,OAAO,EAAE,IAAI;CACd,CAAC,CAAA","ignoreList":[0]}},
    {"offset": {"line": 11546, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}