{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"isAddressEqual.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/address/isAddressEqual.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport { isAddress } from './isAddress.js'\n\nexport type IsAddressEqualReturnType = boolean\nexport type IsAddressEqualErrorType = InvalidAddressErrorType | ErrorType\n\nexport function isAddressEqual(a: Address, b: Address) {\n  if (!isAddress(a)) throw new InvalidAddressError({ address: a })\n  if (!isAddress(b)) throw new InvalidAddressError({ address: b })\n  return a.toLowerCase() === b.toLowerCase()\n}\n"],"names":[],"mappings":";;;AAOA,OAAO,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAA;AAL1C,OAAO,EACL,mBAAmB,GAEpB,MAAM,yBAAyB,CAAA;;;AAO1B,SAAU,cAAc,CAAC,CAAU,EAAE,CAAU;IACnD,IAAI,+OAAC,YAAA,AAAS,EAAC,CAAC,CAAC,EAAE,MAAM,kOAAI,sBAAmB,CAAC;QAAE,OAAO,EAAE,CAAC;IAAA,CAAE,CAAC,CAAA;IAChE,IAAI,+OAAC,YAAA,AAAS,EAAC,CAAC,CAAC,EAAE,MAAM,kOAAI,sBAAmB,CAAC;QAAE,OAAO,EAAE,CAAC;IAAA,CAAE,CAAC,CAAA;IAChE,OAAO,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,WAAW,EAAE,CAAA;AAC5C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"file":"ccip.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/errors/ccip.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Hex } from '../types/misc.js'\nimport { stringify } from '../utils/stringify.js'\n\nimport { BaseError } from './base.js'\nimport { getUrl } from './utils.js'\n\nexport type OffchainLookupErrorType = OffchainLookupError & {\n  name: 'OffchainLookupError'\n}\nexport class OffchainLookupError extends BaseError {\n  override name = 'OffchainLookupError'\n  constructor({\n    callbackSelector,\n    cause,\n    data,\n    extraData,\n    sender,\n    urls,\n  }: {\n    callbackSelector: Hex\n    cause: BaseError\n    data: Hex\n    extraData: Hex\n    sender: Address\n    urls: readonly string[]\n  }) {\n    super(\n      cause.shortMessage ||\n        'An error occurred while fetching for an offchain result.',\n      {\n        cause,\n        metaMessages: [\n          ...(cause.metaMessages || []),\n          cause.metaMessages?.length ? '' : [],\n          'Offchain Gateway Call:',\n          urls && [\n            '  Gateway URL(s):',\n            ...urls.map((url) => `    ${getUrl(url)}`),\n          ],\n          `  Sender: ${sender}`,\n          `  Data: ${data}`,\n          `  Callback selector: ${callbackSelector}`,\n          `  Extra data: ${extraData}`,\n        ].flat(),\n      },\n    )\n  }\n}\n\nexport type OffchainLookupResponseMalformedErrorType =\n  OffchainLookupResponseMalformedError & {\n    name: 'OffchainLookupResponseMalformedError'\n  }\nexport class OffchainLookupResponseMalformedError extends BaseError {\n  override name = 'OffchainLookupResponseMalformedError'\n  constructor({ result, url }: { result: any; url: string }) {\n    super(\n      'Offchain gateway response is malformed. Response data must be a hex value.',\n      {\n        metaMessages: [\n          `Gateway URL: ${getUrl(url)}`,\n          `Response: ${stringify(result)}`,\n        ],\n      },\n    )\n  }\n}\n\nexport type OffchainLookupSenderMismatchErrorType =\n  OffchainLookupSenderMismatchError & {\n    name: 'OffchainLookupSenderMismatchError'\n  }\nexport class OffchainLookupSenderMismatchError extends BaseError {\n  override name = 'OffchainLookupSenderMismatchError'\n  constructor({ sender, to }: { sender: Address; to: Address }) {\n    super(\n      'Reverted sender address does not match target contract address (`to`).',\n      {\n        metaMessages: [\n          `Contract address: ${to}`,\n          `OffchainLookup sender address: ${sender}`,\n        ],\n      },\n    )\n  }\n}\n"],"names":[],"mappings":";;;;;AAMA,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAA;AADnC,OAAO,EAAE,SAAS,EAAE,MAAM,WAAW,CAAA;AAFrC,OAAO,EAAE,SAAS,EAAE,MAAM,uBAAuB,CAAA;;;;AAQ3C,MAAO,mBAAoB,oOAAQ,YAAS;IAEhD,YAAY,EACV,gBAAgB,EAChB,KAAK,EACL,IAAI,EACJ,SAAS,EACT,MAAM,EACN,IAAI,EAQL,CAAA;QACC,KAAK,CACH,KAAK,CAAC,YAAY,IAChB,0DAA0D,EAC5D;YACE,KAAK;YACL,YAAY,EAAE;mBACR,KAAK,CAAC,YAAY,IAAI,EAAE,CAAC;gBAC7B,KAAK,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;gBACpC,wBAAwB;gBACxB,IAAI,IAAI;oBACN,mBAAmB;uBAChB,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAG,CAAD,AAAC,IAAA,kOAAO,SAAA,AAAM,EAAC,GAAG,CAAC,EAAE,CAAC;iBAC3C;gBACD,CAAA,UAAA,EAAa,MAAM,EAAE;gBACrB,CAAA,QAAA,EAAW,IAAI,EAAE;gBACjB,CAAA,qBAAA,EAAwB,gBAAgB,EAAE;gBAC1C,CAAA,cAAA,EAAiB,SAAS,EAAE;aAC7B,CAAC,IAAI,EAAE;SACT,CACF,CAAA;QAnCM,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,qBAAqB;WAAA;IAoCrC,CAAC;CACF;AAMK,MAAO,oCAAqC,oOAAQ,YAAS;IAEjE,YAAY,EAAE,MAAM,EAAE,GAAG,EAAgC,CAAA;QACvD,KAAK,CACH,4EAA4E,EAC5E;YACE,YAAY,EAAE;gBACZ,CAAA,aAAA,kOAAgB,SAAA,AAAM,EAAC,GAAG,CAAC,EAAE;gBAC7B,CAAA,UAAA,GAAa,8OAAA,AAAS,EAAC,MAAM,CAAC,EAAE;aACjC;SACF,CACF,CAAA;QAVM,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,sCAAsC;WAAA;IAWtD,CAAC;CACF;AAMK,MAAO,iCAAkC,mOAAQ,aAAS;IAE9D,YAAY,EAAE,MAAM,EAAE,EAAE,EAAoC,CAAA;QAC1D,KAAK,CACH,wEAAwE,EACxE;YACE,YAAY,EAAE;gBACZ,CAAA,kBAAA,EAAqB,EAAE,EAAE;gBACzB,CAAA,+BAAA,EAAkC,MAAM,EAAE;aAC3C;SACF,CACF,CAAA;QAVM,OAAA,cAAA,CAAA,IAAA,EAAA,QAAA;;;;mBAAO,mCAAmC;WAAA;IAWnD,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"file":"ccip.js","sources":["file:///Users/sc_liu/Desktop/ts/dapp/node_modules/.pnpm/viem%401.21.4_typescript%405.7.3/node_modules/viem/utils/ccip.ts"],"sourcesContent":["import type { Abi, Address } from 'abitype'\n\nimport { type CallParameters, call } from '../actions/public/call.js'\nimport type { Transport } from '../clients/transports/createTransport.js'\nimport { type BaseError } from '../errors/base.js'\nimport {\n  OffchainLookupError,\n  OffchainLookupResponseMalformedError,\n  OffchainLookupSenderMismatchError,\n} from '../errors/ccip.js'\nimport { HttpRequestError } from '../errors/request.js'\nimport type { Chain } from '../types/chain.js'\nimport type { GetErrorArgs } from '../types/contract.js'\nimport type { Hex } from '../types/misc.js'\n\nimport type { Client } from '../clients/createClient.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport { decodeErrorResult } from './abi/decodeErrorResult.js'\nimport { encodeAbiParameters } from './abi/encodeAbiParameters.js'\nimport { isAddressEqual } from './address/isAddressEqual.js'\nimport { concat } from './data/concat.js'\nimport { isHex } from './data/isHex.js'\nimport { stringify } from './stringify.js'\n\nexport const offchainLookupSignature = '0x556f1830'\nexport const offchainLookupAbiItem = {\n  name: 'OffchainLookup',\n  type: 'error',\n  inputs: [\n    {\n      name: 'sender',\n      type: 'address',\n    },\n    {\n      name: 'urls',\n      type: 'string[]',\n    },\n    {\n      name: 'callData',\n      type: 'bytes',\n    },\n    {\n      name: 'callbackFunction',\n      type: 'bytes4',\n    },\n    {\n      name: 'extraData',\n      type: 'bytes',\n    },\n  ],\n} as const satisfies Abi[number]\n\nexport type OffchainLookupErrorType = ErrorType\n\nexport async function offchainLookup<TChain extends Chain | undefined>(\n  client: Client<Transport, TChain>,\n  {\n    blockNumber,\n    blockTag,\n    data,\n    to,\n  }: Pick<CallParameters, 'blockNumber' | 'blockTag'> & {\n    data: Hex\n    to: Address\n  },\n): Promise<Hex> {\n  const { args } = decodeErrorResult({\n    data,\n    abi: [offchainLookupAbiItem],\n  }) as unknown as GetErrorArgs<\n    [typeof offchainLookupAbiItem],\n    'OffchainLookup'\n  >\n  const [sender, urls, callData, callbackSelector, extraData] = args\n\n  try {\n    if (!isAddressEqual(to, sender))\n      throw new OffchainLookupSenderMismatchError({ sender, to })\n\n    const result = await ccipFetch({ data: callData, sender, urls })\n\n    const { data: data_ } = await call(client, {\n      blockNumber,\n      blockTag,\n      data: concat([\n        callbackSelector,\n        encodeAbiParameters(\n          [{ type: 'bytes' }, { type: 'bytes' }],\n          [result, extraData],\n        ),\n      ]),\n      to,\n    } as CallParameters)\n\n    return data_!\n  } catch (err) {\n    throw new OffchainLookupError({\n      callbackSelector,\n      cause: err as BaseError,\n      data,\n      extraData,\n      sender,\n      urls,\n    })\n  }\n}\n\nexport type CcipFetchErrorType = ErrorType\n\nexport async function ccipFetch({\n  data,\n  sender,\n  urls,\n}: { data: Hex; sender: Address; urls: readonly string[] }) {\n  let error = new Error('An unknown error occurred.')\n\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const method = url.includes('{data}') ? 'GET' : 'POST'\n    const body = method === 'POST' ? { data, sender } : undefined\n\n    try {\n      const response = await fetch(\n        url.replace('{sender}', sender).replace('{data}', data),\n        {\n          body: JSON.stringify(body),\n          method,\n        },\n      )\n\n      let result\n      if (\n        response.headers.get('Content-Type')?.startsWith('application/json')\n      ) {\n        result = (await response.json()).data\n      } else {\n        result = (await response.text()) as any\n      }\n\n      if (!response.ok) {\n        error = new HttpRequestError({\n          body,\n          details: result?.error\n            ? stringify(result.error)\n            : response.statusText,\n          headers: response.headers,\n          status: response.status,\n          url,\n        })\n        continue\n      }\n\n      if (!isHex(result)) {\n        error = new OffchainLookupResponseMalformedError({\n          result,\n          url,\n        })\n        continue\n      }\n\n      return result\n    } catch (err) {\n      error = new HttpRequestError({\n        body,\n        details: (err as Error).message,\n        url,\n      })\n    }\n  }\n\n  throw error\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}