{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/internal/font/google/inter_59dee874.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"className\": \"inter_59dee874-module__9CtR0q__className\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/internal/font/google/inter_59dee874.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Inter%22,%22arguments%22:[{%22subsets%22:[%22latin%22]}],%22variableName%22:%22inter%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Inter', 'Inter Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,wJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,wJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,wJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file:///home/lsc/Desktop/dapp/src/config/wagmi.ts"],"sourcesContent":["// wagmi 配置文件\nimport { configureChains, createConfig } from 'wagmi'\nimport { mainnet, sepolia } from 'wagmi/chains'\nimport { infuraProvider } from 'wagmi/providers/infura'\nimport { publicProvider } from 'wagmi/providers/public'\nimport { MetaMaskConnector } from 'wagmi/connectors/metaMask'\nimport { WalletConnectConnector } from 'wagmi/connectors/walletConnect'\nimport { CoinbaseWalletConnector } from 'wagmi/connectors/coinbaseWallet'\n\n// 配置链和提供者\nconst { chains, publicClient } = configureChains(\n  [sepolia, mainnet], // 将 Sepolia 放在第一位，使其成为默认网络\n  [\n    infuraProvider({ apiKey: '55d47ed603074ad8b85722d5a4223111' }), // 使用 Infura 提供者\n    publicProvider(), // 保留公共提供者作为备用\n  ]\n)\n\n// 创建 wagmi 配置\nexport const config = createConfig({\n  autoConnect: true,\n  connectors: [\n    new MetaMaskConnector({ chains }),\n    new WalletConnectConnector({\n      chains,\n      options: {\n        projectId: 'YOUR_PROJECT_ID', // 如果需要 WalletConnect，请替换为您的项目 ID\n      },\n    }),\n    new CoinbaseWalletConnector({\n      chains,\n      options: {\n        appName: 'YDD Show',\n      },\n    }),\n  ],\n  publicClient,\n}) "],"names":[],"mappings":"AAAA,aAAa;;;;AACb;AACA;AAAA;AACA;AACA;AAHA;AAIA;AACA;AACA;;;;;;;;AAEA,UAAU;AACV,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,6WAAA,CAAA,kBAAe,AAAD,EAC7C;IAAC,4OAAA,CAAA,UAAO;IAAE,4OAAA,CAAA,UAAO;CAAC,EAClB;IACE,CAAA,GAAA,+VAAA,CAAA,iBAAc,AAAD,EAAE;QAAE,QAAQ;IAAmC;IAC5D,CAAA,GAAA,+VAAA,CAAA,iBAAc,AAAD;CACd;AAII,MAAM,SAAS,CAAA,GAAA,qWAAA,CAAA,eAAY,AAAD,EAAE;IACjC,aAAa;IACb,YAAY;QACV,IAAI,gWAAA,CAAA,oBAAiB,CAAC;YAAE;QAAO;QAC/B,IAAI,qWAAA,CAAA,yBAAsB,CAAC;YACzB;YACA,SAAS;gBACP,WAAW;YACb;QACF;QACA,IAAI,sWAAA,CAAA,0BAAuB,CAAC;YAC1B;YACA,SAAS;gBACP,SAAS;YACX;QACF;KACD;IACD;AACF"}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":["file:///home/lsc/Desktop/dapp/src/context/StatusContext.tsx"],"sourcesContent":["import { createContext, useContext, useState, ReactNode } from 'react'\n\ntype Status = '就绪' | '设置中...' | '获取中...' | '切换网络中...'\n\ninterface StatusContextType {\n  status: Status\n  setStatus: (status: Status) => void\n}\n\nconst StatusContext = createContext<StatusContextType | undefined>(undefined)\n\nexport function StatusProvider({ children }: { children: ReactNode }) {\n  const [status, setStatus] = useState<Status>('就绪')\n\n  return (\n    <StatusContext.Provider value={{ status, setStatus }}>\n      {children}\n    </StatusContext.Provider>\n  )\n}\n\nexport function useStatus() {\n  const context = useContext(StatusContext)\n  if (context === undefined) {\n    throw new Error('useStatus must be used within a StatusProvider')\n  }\n  return context\n} "],"names":[],"mappings":";;;;;AAAA;;;AASA,MAAM,8BAAgB,CAAA,GAAA,sWAAA,CAAA,gBAAa,AAAD,EAAiC;AAE5D,SAAS,eAAe,EAAE,QAAQ,EAA2B;IAClE,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,sWAAA,CAAA,WAAQ,AAAD,EAAU;IAE7C,qBACE,+YAAC,cAAc,QAAQ;QAAC,OAAO;YAAE;YAAQ;QAAU;kBAChD;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,sWAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT"}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 250, "column": 0}, "map": {"version":3,"sources":["file:///home/lsc/Desktop/dapp/src/components/Navbar.tsx"],"sourcesContent":["// 导航栏组件\n'use client'\n\nimport Link from 'next/link'\nimport { ConnectKitButton } from 'connectkit'\nimport { useAccount, useNetwork, useSwitchNetwork } from 'wagmi'\nimport { useStatus } from '@/context/StatusContext'\n\n// 导航栏组件\nexport default function Navbar() {\n  // 获取当前网络信息\n  const { chain } = useNetwork()\n  // 获取切换网络方法\n  const { chains, switchNetwork } = useSwitchNetwork({\n    onSuccess: () => {\n      // 网络切换成功后设置状态为就绪\n      setStatus('就绪')\n    },\n    onError: () => {\n      // 网络切换失败后设置状态为就绪\n      setStatus('就绪')\n    }\n  })\n  // 获取钱包连接状态\n  const { isConnected } = useAccount()\n  // 获取状态\n  const { status, setStatus } = useStatus()\n\n  // 处理网络切换\n  const handleNetworkSwitch = (chainId: number) => {\n    setStatus('切换网络中...')\n    switchNetwork?.(chainId)\n  }\n\n  return (\n    <nav className=\"bg-gray-800 text-white p-4\">\n      <div className=\"container mx-auto flex justify-between items-center\">\n        {/* 左侧导航链接 */}\n        <div className=\"flex gap-4\">\n          <Link href=\"/\" className=\"hover:text-gray-300\">\n            页面1\n          </Link>\n          <Link href=\"/not_found\" className=\"hover:text-gray-300\">\n            页面2\n          </Link>\n        </div>\n\n        {/* 右侧网络选择和钱包连接按钮 */}\n        <div className=\"flex items-center gap-4\">\n          {/* 网络选择下拉菜单 */}\n          {isConnected && (\n            <div className=\"relative group\">\n              <button className=\"bg-gray-700 hover:bg-gray-600 px-4 py-2 rounded-lg flex items-center gap-2\">\n                <span className=\"w-2 h-2 rounded-full bg-green-400\"></span>\n                {chain?.name || '未知网络'}\n              </button>\n              {/* 下拉菜单 */}\n              <div className=\"absolute right-0 mt-2 w-48 bg-gray-700 rounded-lg shadow-lg opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200\">\n                {chains.map((x) => (\n                  <button\n                    key={x.id}\n                    onClick={() => handleNetworkSwitch(x.id)}\n                    className={`w-full text-left px-4 py-2 hover:bg-gray-600 first:rounded-t-lg last:rounded-b-lg ${\n                      chain?.id === x.id ? 'bg-gray-600' : ''\n                    }`}\n                  >\n                    {x.name}\n                  </button>\n                ))}\n              </div>\n            </div>\n          )}\n          \n          {/* 钱包连接按钮 */}\n          <ConnectKitButton />\n\n          {/* 状态显示 */}\n          <div className=\"bg-gray-700 px-4 py-2 rounded-lg\">\n            <span className=\"flex items-center gap-2\">\n              <span className={`w-2 h-2 rounded-full ${status === '就绪' ? 'bg-green-400' : 'bg-yellow-400 animate-pulse'}`}></span>\n              {status}\n            </span>\n          </div>\n        </div>\n      </div>\n    </nav>\n  )\n} "],"names":[],"mappings":"AAAA,QAAQ;;;;;AAGR;AACA;AAEA;AADA;AAJA;;;;;;AAQe,SAAS;IACtB,WAAW;IACX,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,qWAAA,CAAA,aAAU,AAAD;IAC3B,WAAW;IACX,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,qWAAA,CAAA,mBAAgB,AAAD,EAAE;QACjD,WAAW;YACT,iBAAiB;YACjB,UAAU;QACZ;QACA,SAAS;YACP,iBAAiB;YACjB,UAAU;QACZ;IACF;IACA,WAAW;IACX,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,qWAAA,CAAA,aAAU,AAAD;IACjC,OAAO;IACP,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,gIAAA,CAAA,YAAS,AAAD;IAEtC,SAAS;IACT,MAAM,sBAAsB,CAAC;QAC3B,UAAU;QACV,gBAAgB;IAClB;IAEA,qBACE,+YAAC;QAAI,WAAU;kBACb,cAAA,+YAAC;YAAI,WAAU;;8BAEb,+YAAC;oBAAI,WAAU;;sCACb,+YAAC,6TAAA,CAAA,UAAI;4BAAC,MAAK;4BAAI,WAAU;sCAAsB;;;;;;sCAG/C,+YAAC,6TAAA,CAAA,UAAI;4BAAC,MAAK;4BAAa,WAAU;sCAAsB;;;;;;;;;;;;8BAM1D,+YAAC;oBAAI,WAAU;;wBAEZ,6BACC,+YAAC;4BAAI,WAAU;;8CACb,+YAAC;oCAAO,WAAU;;sDAChB,+YAAC;4CAAK,WAAU;;;;;;wCACf,OAAO,QAAQ;;;;;;;8CAGlB,+YAAC;oCAAI,WAAU;8CACZ,OAAO,GAAG,CAAC,CAAC,kBACX,+YAAC;4CAEC,SAAS,IAAM,oBAAoB,EAAE,EAAE;4CACvC,WAAW,CAAC,kFAAkF,EAC5F,OAAO,OAAO,EAAE,EAAE,GAAG,gBAAgB,IACrC;sDAED,EAAE,IAAI;2CANF,EAAE,EAAE;;;;;;;;;;;;;;;;sCAcnB,+YAAC,oWAAA,CAAA,mBAAgB;;;;;sCAGjB,+YAAC;4BAAI,WAAU;sCACb,cAAA,+YAAC;gCAAK,WAAU;;kDACd,+YAAC;wCAAK,WAAW,CAAC,qBAAqB,EAAE,WAAW,OAAO,iBAAiB,+BAA+B;;;;;;oCAC1G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOf"}},
    {"offset": {"line": 412, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":["file:///home/lsc/Desktop/dapp/src/app/layout.tsx"],"sourcesContent":["'use client'\n\nimport { Inter } from 'next/font/google'\nimport { WagmiConfig } from 'wagmi'\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query'\nimport { ConnectKitProvider } from 'connectkit'\nimport { config } from '@/config/wagmi'\nimport Navbar from '@/components/Navbar'\nimport { StatusProvider } from '@/context/StatusContext'\nimport './globals.css'\n\nconst inter = Inter({ subsets: ['latin'] })\n\n// 创建查询客户端\nconst queryClient = new QueryClient()\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode\n}) {\n  return (\n    <html lang=\"en\">\n      <body className={inter.className}>\n        <WagmiConfig config={config}>\n          <QueryClientProvider client={queryClient}>\n            <ConnectKitProvider>\n              <StatusProvider>\n                <Navbar />\n                {children}\n              </StatusProvider>\n            </ConnectKitProvider>\n          </QueryClientProvider>\n        </WagmiConfig>\n      </body>\n    </html>\n  )\n} "],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AAJA;AADA;AACA;AAJA;;;;;;;;;;AAaA,UAAU;AACV,MAAM,cAAc,IAAI,sPAAA,CAAA,cAAW;AAEpB,SAAS,WAAW,EACjC,QAAQ,EAGT;IACC,qBACE,+YAAC;QAAK,MAAK;kBACT,cAAA,+YAAC;YAAK,WAAW,yIAAA,CAAA,UAAK,CAAC,SAAS;sBAC9B,cAAA,+YAAC,qWAAA,CAAA,cAAW;gBAAC,QAAQ,sHAAA,CAAA,SAAM;0BACzB,cAAA,+YAAC,sRAAA,CAAA,sBAAmB;oBAAC,QAAQ;8BAC3B,cAAA,+YAAC,oWAAA,CAAA,qBAAkB;kCACjB,cAAA,+YAAC,gIAAA,CAAA,iBAAc;;8CACb,+YAAC,4HAAA,CAAA,UAAM;;;;;gCACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQjB"}},
    {"offset": {"line": 492, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}